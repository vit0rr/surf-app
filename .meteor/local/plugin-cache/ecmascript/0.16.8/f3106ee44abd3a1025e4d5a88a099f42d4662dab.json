{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/id-map/id-map.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/id-map/id-map.js","filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/id-map/id-map.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/styles","root":"/Users/nicholas/Desktop/projects/local-legends/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/id-map/id-map.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/id-map/id-map.js"}},"code":"module.export({\n  IdMap: () => IdMap\n});\nclass IdMap {\n  constructor(idStringify, idParse) {\n    this._map = new Map();\n    this._idStringify = idStringify || JSON.stringify;\n    this._idParse = idParse || JSON.parse;\n  }\n\n  // Some of these methods are designed to match methods on OrderedDict, since\n  // (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.\n  // (Conceivably, this should be replaced with \"UnorderedDict\" with a specific\n  // set of methods that overlap between the two.)\n\n  get(id) {\n    const key = this._idStringify(id);\n    return this._map.get(key);\n  }\n  set(id, value) {\n    const key = this._idStringify(id);\n    this._map.set(key, value);\n  }\n  remove(id) {\n    const key = this._idStringify(id);\n    this._map.delete(key);\n  }\n  has(id) {\n    const key = this._idStringify(id);\n    return this._map.has(key);\n  }\n  empty() {\n    return this._map.size === 0;\n  }\n  clear() {\n    this._map.clear();\n  }\n\n  // Iterates over the items in the map. Return `false` to break the loop.\n  forEach(iterator) {\n    // don't use _.each, because we can't break out of it.\n    for (let [key, value] of this._map) {\n      const breakIfFalse = iterator.call(null, value, this._idParse(key));\n      if (breakIfFalse === false) {\n        return;\n      }\n    }\n  }\n  size() {\n    return this._map.size;\n  }\n  setDefault(id, def) {\n    const key = this._idStringify(id);\n    if (this._map.has(key)) {\n      return this._map.get(key);\n    }\n    this._map.set(key, def);\n    return def;\n  }\n\n  // Assumes that values are EJSON-cloneable, and that we don't need to clone\n  // IDs (ie, that nobody is going to mutate an ObjectId).\n  clone() {\n    const clone = new IdMap(this._idStringify, this._idParse);\n    // copy directly to avoid stringify/parse overhead\n    this._map.forEach(function (value, key) {\n      clone._map.set(key, EJSON.clone(value));\n    });\n    return clone;\n  }\n}","map":{"version":3,"names":["module","export","IdMap","constructor","idStringify","idParse","_map","Map","_idStringify","JSON","stringify","_idParse","parse","get","id","key","set","value","remove","delete","has","empty","size","clear","forEach","iterator","breakIfFalse","call","setDefault","def","clone","EJSON"],"sources":["packages/id-map/id-map.js"],"sourcesContent":["\nexport class IdMap {\n  constructor(idStringify, idParse) {\n    this._map = new Map();\n    this._idStringify = idStringify || JSON.stringify;\n    this._idParse = idParse || JSON.parse;\n  }\n\n// Some of these methods are designed to match methods on OrderedDict, since\n// (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.\n// (Conceivably, this should be replaced with \"UnorderedDict\" with a specific\n// set of methods that overlap between the two.)\n\n  get(id) {\n    const key = this._idStringify(id);\n    return this._map.get(key);\n  }\n\n  set(id, value) {\n    const key = this._idStringify(id);\n    this._map.set(key, value);\n  }\n\n  remove(id) {\n    const key = this._idStringify(id);\n    this._map.delete(key);\n  }\n\n  has(id) {\n    const key = this._idStringify(id);\n    return this._map.has(key);\n  }\n\n  empty() {\n    return this._map.size === 0;\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n  // Iterates over the items in the map. Return `false` to break the loop.\n  forEach(iterator) {\n    // don't use _.each, because we can't break out of it.\n    for (let [key, value] of this._map){\n      const breakIfFalse = iterator.call(\n        null,\n        value,\n        this._idParse(key)\n      );\n      if (breakIfFalse === false) {\n        return;\n      }\n    }\n  }\n\n  size() {\n    return this._map.size;\n  }\n\n  setDefault(id, def) {\n    const key = this._idStringify(id);\n    if (this._map.has(key)) {\n      return this._map.get(key);\n    }\n    this._map.set(key, def);\n    return def;\n  }\n\n  // Assumes that values are EJSON-cloneable, and that we don't need to clone\n  // IDs (ie, that nobody is going to mutate an ObjectId).\n  clone() {\n    const clone = new IdMap(this._idStringify, this._idParse);\n    // copy directly to avoid stringify/parse overhead\n    this._map.forEach(function(value, key){\n      clone._map.set(key, EJSON.clone(value));\n    });\n    return clone;\n  }\n}\n"],"mappings":"AAAAA,MAAM,CAACC,MAAM,CAAC;EAACC,KAAK,EAACA,CAAA,KAAIA;AAAK,CAAC,CAAC;AACzB,MAAMA,KAAK,CAAC;EACjBC,WAAWA,CAACC,WAAW,EAAEC,OAAO,EAAE;IAChC,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB,IAAI,CAACC,YAAY,GAAGJ,WAAW,IAAIK,IAAI,CAACC,SAAS;IACjD,IAAI,CAACC,QAAQ,GAAGN,OAAO,IAAII,IAAI,CAACG,KAAK;EACvC;;EAEF;EACA;EACA;EACA;;EAEEC,GAAGA,CAACC,EAAE,EAAE;IACN,MAAMC,GAAG,GAAG,IAAI,CAACP,YAAY,CAACM,EAAE,CAAC;IACjC,OAAO,IAAI,CAACR,IAAI,CAACO,GAAG,CAACE,GAAG,CAAC;EAC3B;EAEAC,GAAGA,CAACF,EAAE,EAAEG,KAAK,EAAE;IACb,MAAMF,GAAG,GAAG,IAAI,CAACP,YAAY,CAACM,EAAE,CAAC;IACjC,IAAI,CAACR,IAAI,CAACU,GAAG,CAACD,GAAG,EAAEE,KAAK,CAAC;EAC3B;EAEAC,MAAMA,CAACJ,EAAE,EAAE;IACT,MAAMC,GAAG,GAAG,IAAI,CAACP,YAAY,CAACM,EAAE,CAAC;IACjC,IAAI,CAACR,IAAI,CAACa,MAAM,CAACJ,GAAG,CAAC;EACvB;EAEAK,GAAGA,CAACN,EAAE,EAAE;IACN,MAAMC,GAAG,GAAG,IAAI,CAACP,YAAY,CAACM,EAAE,CAAC;IACjC,OAAO,IAAI,CAACR,IAAI,CAACc,GAAG,CAACL,GAAG,CAAC;EAC3B;EAEAM,KAAKA,CAAA,EAAG;IACN,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,KAAK,CAAC;EAC7B;EAEAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAACjB,IAAI,CAACiB,KAAK,CAAC,CAAC;EACnB;;EAEA;EACAC,OAAOA,CAACC,QAAQ,EAAE;IAChB;IACA,KAAK,IAAI,CAACV,GAAG,EAAEE,KAAK,CAAC,IAAI,IAAI,CAACX,IAAI,EAAC;MACjC,MAAMoB,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAChC,IAAI,EACJV,KAAK,EACL,IAAI,CAACN,QAAQ,CAACI,GAAG,CACnB,CAAC;MACD,IAAIW,YAAY,KAAK,KAAK,EAAE;QAC1B;MACF;IACF;EACF;EAEAJ,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAAChB,IAAI,CAACgB,IAAI;EACvB;EAEAM,UAAUA,CAACd,EAAE,EAAEe,GAAG,EAAE;IAClB,MAAMd,GAAG,GAAG,IAAI,CAACP,YAAY,CAACM,EAAE,CAAC;IACjC,IAAI,IAAI,CAACR,IAAI,CAACc,GAAG,CAACL,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAACE,GAAG,CAAC;IAC3B;IACA,IAAI,CAACT,IAAI,CAACU,GAAG,CAACD,GAAG,EAAEc,GAAG,CAAC;IACvB,OAAOA,GAAG;EACZ;;EAEA;EACA;EACAC,KAAKA,CAAA,EAAG;IACN,MAAMA,KAAK,GAAG,IAAI5B,KAAK,CAAC,IAAI,CAACM,YAAY,EAAE,IAAI,CAACG,QAAQ,CAAC;IACzD;IACA,IAAI,CAACL,IAAI,CAACkB,OAAO,CAAC,UAASP,KAAK,EAAEF,GAAG,EAAC;MACpCe,KAAK,CAACxB,IAAI,CAACU,GAAG,CAACD,GAAG,EAAEgB,KAAK,CAACD,KAAK,CAACb,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC;IACF,OAAOa,KAAK;EACd;AACF"},"sourceType":"module","externalDependencies":{},"hash":"f3106ee44abd3a1025e4d5a88a099f42d4662dab"}
