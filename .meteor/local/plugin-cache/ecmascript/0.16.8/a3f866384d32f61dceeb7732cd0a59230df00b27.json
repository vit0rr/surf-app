{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/ddp-common/method_invocation.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/ddp-common/method_invocation.js","filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/ddp-common/method_invocation.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/styles","root":"/Users/nicholas/Desktop/projects/local-legends/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"MemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/ddp-common/method_invocation.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-common/method_invocation.js"}},"code":"// Instance name is this because it is usually referred to as this inside a\n// method definition\n/**\n * @summary The state for a single invocation of a method, referenced by this\n * inside a method definition.\n * @param {Object} options\n * @instanceName this\n * @showInstanceName true\n */\nDDPCommon.MethodInvocation = /*#__PURE__*/function () {\n  function MethodInvocation(options) {\n    // true if we're running not the actual method, but a stub (that is,\n    // if we're on a client (which may be a browser, or in the future a\n    // server connecting to another server) and presently running a\n    // simulation of a server-side method for latency compensation\n    // purposes). not currently true except in a client such as a browser,\n    // since there's usually no point in running stubs unless you have a\n    // zero-latency connection to the user.\n\n    /**\n     * @summary Access inside a method invocation.  Boolean value, true if this invocation is a stub.\n     * @locus Anywhere\n     * @name  isSimulation\n     * @memberOf DDPCommon.MethodInvocation\n     * @instance\n     * @type {Boolean}\n     */\n    this.isSimulation = options.isSimulation;\n\n    // call this function to allow other method invocations (from the\n    // same client) to continue running without waiting for this one to\n    // complete.\n    this._unblock = options.unblock || function () {};\n    this._calledUnblock = false;\n\n    // current user id\n\n    /**\n     * @summary The id of the user that made this method call, or `null` if no user was logged in.\n     * @locus Anywhere\n     * @name  userId\n     * @memberOf DDPCommon.MethodInvocation\n     * @instance\n     */\n    this.userId = options.userId;\n\n    // sets current user id in all appropriate server contexts and\n    // reruns subscriptions\n    this._setUserId = options.setUserId || function () {};\n\n    // On the server, the connection this method call came in on.\n\n    /**\n     * @summary Access inside a method invocation. The [connection](#meteor_onconnection) that this method was received on. `null` if the method is not associated with a connection, eg. a server initiated method call. Calls to methods made from a server method which was in turn initiated from the client share the same `connection`.\n     * @locus Server\n     * @name  connection\n     * @memberOf DDPCommon.MethodInvocation\n     * @instance\n     */\n    this.connection = options.connection;\n\n    // The seed for randomStream value generation\n    this.randomSeed = options.randomSeed;\n\n    // This is set by RandomStream.get; and holds the random stream state\n    this.randomStream = null;\n  }\n\n  /**\n   * @summary Call inside a method invocation.  Allow subsequent method from this client to begin running in a new fiber.\n   * @locus Server\n   * @memberOf DDPCommon.MethodInvocation\n   * @instance\n   */\n  var _proto = MethodInvocation.prototype;\n  _proto.unblock = function () {\n    function unblock() {\n      this._calledUnblock = true;\n      this._unblock();\n    }\n    return unblock;\n  }()\n  /**\n   * @summary Set the logged in user.\n   * @locus Server\n   * @memberOf DDPCommon.MethodInvocation\n   * @instance\n   * @param {String | null} userId The value that should be returned by `userId` on this connection.\n   */\n  ;\n  _proto.setUserId = function () {\n    function setUserId(userId) {\n      if (this._calledUnblock) {\n        throw new Error(\"Can't call setUserId in a method after calling unblock\");\n      }\n      this.userId = userId;\n      this._setUserId(userId);\n    }\n    return setUserId;\n  }();\n  return MethodInvocation;\n}();","map":{"version":3,"names":["DDPCommon","MethodInvocation","options","isSimulation","_unblock","unblock","_calledUnblock","userId","_setUserId","setUserId","connection","randomSeed","randomStream","_proto","prototype","Error"],"sources":["packages/ddp-common/method_invocation.js"],"sourcesContent":["// Instance name is this because it is usually referred to as this inside a\n// method definition\n/**\n * @summary The state for a single invocation of a method, referenced by this\n * inside a method definition.\n * @param {Object} options\n * @instanceName this\n * @showInstanceName true\n */\nDDPCommon.MethodInvocation = class MethodInvocation {\n  constructor(options) {\n    // true if we're running not the actual method, but a stub (that is,\n    // if we're on a client (which may be a browser, or in the future a\n    // server connecting to another server) and presently running a\n    // simulation of a server-side method for latency compensation\n    // purposes). not currently true except in a client such as a browser,\n    // since there's usually no point in running stubs unless you have a\n    // zero-latency connection to the user.\n\n    /**\n     * @summary Access inside a method invocation.  Boolean value, true if this invocation is a stub.\n     * @locus Anywhere\n     * @name  isSimulation\n     * @memberOf DDPCommon.MethodInvocation\n     * @instance\n     * @type {Boolean}\n     */\n    this.isSimulation = options.isSimulation;\n\n    // call this function to allow other method invocations (from the\n    // same client) to continue running without waiting for this one to\n    // complete.\n    this._unblock = options.unblock || function () {};\n    this._calledUnblock = false;\n\n    // current user id\n\n    /**\n     * @summary The id of the user that made this method call, or `null` if no user was logged in.\n     * @locus Anywhere\n     * @name  userId\n     * @memberOf DDPCommon.MethodInvocation\n     * @instance\n     */\n    this.userId = options.userId;\n\n    // sets current user id in all appropriate server contexts and\n    // reruns subscriptions\n    this._setUserId = options.setUserId || function () {};\n\n    // On the server, the connection this method call came in on.\n\n    /**\n     * @summary Access inside a method invocation. The [connection](#meteor_onconnection) that this method was received on. `null` if the method is not associated with a connection, eg. a server initiated method call. Calls to methods made from a server method which was in turn initiated from the client share the same `connection`.\n     * @locus Server\n     * @name  connection\n     * @memberOf DDPCommon.MethodInvocation\n     * @instance\n     */\n    this.connection = options.connection;\n\n    // The seed for randomStream value generation\n    this.randomSeed = options.randomSeed;\n\n    // This is set by RandomStream.get; and holds the random stream state\n    this.randomStream = null;\n  }\n\n  /**\n   * @summary Call inside a method invocation.  Allow subsequent method from this client to begin running in a new fiber.\n   * @locus Server\n   * @memberOf DDPCommon.MethodInvocation\n   * @instance\n   */\n  unblock() {\n    this._calledUnblock = true;\n    this._unblock();\n  }\n\n  /**\n   * @summary Set the logged in user.\n   * @locus Server\n   * @memberOf DDPCommon.MethodInvocation\n   * @instance\n   * @param {String | null} userId The value that should be returned by `userId` on this connection.\n   */\n  setUserId(userId) {\n    if (this._calledUnblock) {\n      throw new Error(\"Can't call setUserId in a method after calling unblock\");\n    }\n    this.userId = userId;\n    this._setUserId(userId);\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,SAAS,CAACC,gBAAgB;EACxB,SAAAA,iBAAYC,OAAO,EAAE;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAGD,OAAO,CAACC,YAAY;;IAExC;IACA;IACA;IACA,IAAI,CAACC,QAAQ,GAAGF,OAAO,CAACG,OAAO,IAAI,YAAY,CAAC,CAAC;IACjD,IAAI,CAACC,cAAc,GAAG,KAAK;;IAE3B;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAGL,OAAO,CAACK,MAAM;;IAE5B;IACA;IACA,IAAI,CAACC,UAAU,GAAGN,OAAO,CAACO,SAAS,IAAI,YAAY,CAAC,CAAC;;IAErD;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAGR,OAAO,CAACQ,UAAU;;IAEpC;IACA,IAAI,CAACC,UAAU,GAAGT,OAAO,CAACS,UAAU;;IAEpC;IACA,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;EALE,IAAAC,MAAA,GAAAZ,gBAAA,CAAAa,SAAA;EAAAD,MAAA,CAMAR,OAAO;IAAP,SAAAA,QAAA,EAAU;MACR,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACF,QAAQ,CAAC,CAAC;IACjB;IAAC,OAAAC,OAAA;EAAA;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EANE;EAAAQ,MAAA,CAOAJ,SAAS;IAAT,SAAAA,UAAUF,MAAM,EAAE;MAChB,IAAI,IAAI,CAACD,cAAc,EAAE;QACvB,MAAM,IAAIS,KAAK,CAAC,wDAAwD,CAAC;MAC3E;MACA,IAAI,CAACR,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,UAAU,CAACD,MAAM,CAAC;IACzB;IAAC,OAAAE,SAAA;EAAA;EAAA,OAAAR,gBAAA;AAAA,GACF"},"sourceType":"module","externalDependencies":{},"hash":"a3f866384d32f61dceeb7732cd0a59230df00b27"}
