{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/email/email.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/email/email.js","filename":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/email/email.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/client/styles","root":"/Users/nicholas/Desktop/projects/local-legends/client/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/email/email.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/email/email.js"}},"code":"!function (module1) {\n  let _objectSpread;\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n  }, 0);\n  module1.export({\n    Email: () => Email,\n    EmailTest: () => EmailTest,\n    EmailInternals: () => EmailInternals\n  });\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n  }, 0);\n  let Log;\n  module1.link(\"meteor/logging\", {\n    Log(v) {\n      Log = v;\n    }\n  }, 1);\n  let Hook;\n  module1.link(\"meteor/callback-hook\", {\n    Hook(v) {\n      Hook = v;\n    }\n  }, 2);\n  let url;\n  module1.link(\"url\", {\n    default(v) {\n      url = v;\n    }\n  }, 3);\n  let nodemailer;\n  module1.link(\"nodemailer\", {\n    default(v) {\n      nodemailer = v;\n    }\n  }, 4);\n  let wellKnow;\n  module1.link(\"nodemailer/lib/well-known\", {\n    default(v) {\n      wellKnow = v;\n    }\n  }, 5);\n  const Email = {};\n  const EmailTest = {};\n  const EmailInternals = {\n    NpmModules: {\n      mailcomposer: {\n        version: Npm.require('nodemailer/package.json').version,\n        module: Npm.require('nodemailer/lib/mail-composer')\n      },\n      nodemailer: {\n        version: Npm.require('nodemailer/package.json').version,\n        module: Npm.require('nodemailer')\n      }\n    }\n  };\n  const MailComposer = EmailInternals.NpmModules.mailcomposer.module;\n  const makeTransport = function (mailUrlString) {\n    const mailUrl = new URL(mailUrlString);\n    if (mailUrl.protocol !== 'smtp:' && mailUrl.protocol !== 'smtps:') {\n      throw new Error('Email protocol in $MAIL_URL (' + mailUrlString + \") must be 'smtp' or 'smtps'\");\n    }\n    if (mailUrl.protocol === 'smtp:' && mailUrl.port === '465') {\n      Log.debug(\"The $MAIL_URL is 'smtp://...:465'.  \" + \"You probably want 'smtps://' (The 's' enables TLS/SSL) \" + \"since '465' is typically a secure port.\");\n    }\n\n    // Allow overriding pool setting, but default to true.\n    if (!mailUrl.query) {\n      mailUrl.query = {};\n    }\n    if (!mailUrl.query.pool) {\n      mailUrl.query.pool = 'true';\n    }\n    const transport = nodemailer.createTransport(url.format(mailUrl));\n    transport._syncSendMail = Meteor.wrapAsync(transport.sendMail, transport);\n    return transport;\n  };\n\n  // More info: https://nodemailer.com/smtp/well-known/\n  const knownHostsTransport = function () {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    let url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    let service, user, password;\n    const hasSettings = settings && Object.keys(settings).length;\n    if (url && !hasSettings) {\n      let host = url.split(':')[0];\n      const urlObject = new URL(url);\n      if (host === 'http' || host === 'https') {\n        // Look to hostname for service\n        host = urlObject.hostname;\n        user = urlObject.username;\n        password = urlObject.password;\n      } else if (urlObject.protocol && urlObject.username && urlObject.password) {\n        // We have some data from urlObject\n        host = urlObject.protocol.split(':')[0];\n        user = urlObject.username;\n        password = urlObject.password;\n      } else {\n        var _urlObject$pathname$s;\n        // We need to disect the URL ourselves to get the data\n        // First get rid of the leading '//' and split to username and the rest\n        const temp = (_urlObject$pathname$s = urlObject.pathname.substring(2)) === null || _urlObject$pathname$s === void 0 ? void 0 : _urlObject$pathname$s.split(':');\n        user = temp[0];\n        // Now we split by '@' to get password and hostname\n        const temp2 = temp[1].split('@');\n        password = temp2[0];\n        host = temp2[1];\n      }\n      service = host;\n    }\n    if (!wellKnow((settings === null || settings === void 0 ? void 0 : settings.service) || service)) {\n      throw new Error('Could not recognize e-mail service. See list at https://nodemailer.com/smtp/well-known/ for services that we can configure for you.');\n    }\n    const transport = nodemailer.createTransport({\n      service: (settings === null || settings === void 0 ? void 0 : settings.service) || service,\n      auth: {\n        user: (settings === null || settings === void 0 ? void 0 : settings.user) || user,\n        pass: (settings === null || settings === void 0 ? void 0 : settings.password) || password\n      }\n    });\n    transport._syncSendMail = Meteor.wrapAsync(transport.sendMail, transport);\n    return transport;\n  };\n  EmailTest.knowHostsTransport = knownHostsTransport;\n  const getTransport = function () {\n    var _Meteor$settings$pack;\n    const packageSettings = ((_Meteor$settings$pack = Meteor.settings.packages) === null || _Meteor$settings$pack === void 0 ? void 0 : _Meteor$settings$pack.email) || {};\n    // We delay this check until the first call to Email.send, in case someone\n    // set process.env.MAIL_URL in startup code. Then we store in a cache until\n    // process.env.MAIL_URL changes.\n    const url = process.env.MAIL_URL;\n    if (this.cacheKey === undefined || this.cacheKey !== url || this.cacheKey !== packageSettings.service || this.cacheKey !== 'settings') {\n      if (packageSettings.service && wellKnow(packageSettings.service) || url && wellKnow(new URL(url).hostname) || wellKnow((url === null || url === void 0 ? void 0 : url.split(':')[0]) || '')) {\n        this.cacheKey = packageSettings.service || 'settings';\n        this.cache = knownHostsTransport(packageSettings, url);\n      } else {\n        this.cacheKey = url;\n        this.cache = url ? makeTransport(url, packageSettings) : null;\n      }\n    }\n    return this.cache;\n  };\n  let nextDevModeMailId = 0;\n  EmailTest._getAndIncNextDevModeMailId = function () {\n    return nextDevModeMailId++;\n  };\n\n  // Testing hooks\n  EmailTest.resetNextDevModeMailId = function () {\n    nextDevModeMailId = 0;\n  };\n  const devModeSendAsync = function (mail, options) {\n    const stream = (options === null || options === void 0 ? void 0 : options.stream) || process.stdout;\n    return new Promise((resolve, reject) => {\n      let devModeMailId = EmailTest._getAndIncNextDevModeMailId();\n\n      // This approach does not prevent other writers to stdout from interleaving.\n      const output = ['====== BEGIN MAIL #' + devModeMailId + ' ======\\n'];\n      output.push('(Mail not sent; to enable sending, set the MAIL_URL ' + 'environment variable.)\\n');\n      const readStream = new MailComposer(mail).compile().createReadStream();\n      readStream.on('data', buffer => {\n        output.push(buffer.toString());\n      });\n      readStream.on('end', function () {\n        output.push('====== END MAIL #' + devModeMailId + ' ======\\n');\n        stream.write(output.join(''), () => resolve());\n      });\n      readStream.on('error', err => reject(err));\n    });\n  };\n  const smtpSend = function (transport, mail) {\n    transport._syncSendMail(mail);\n  };\n  const sendHooks = new Hook();\n\n  /**\n   * @summary Hook that runs before email is sent.\n   * @locus Server\n   *\n   * @param f {function} receives the arguments to Email.send and should return true to go\n   * ahead and send the email (or at least, try subsequent hooks), or\n   * false to skip sending.\n   * @returns {{ stop: function, callback: function }}\n   */\n  Email.hookSend = function (f) {\n    return sendHooks.register(f);\n  };\n\n  /**\n   * @summary Overrides sending function with your own.\n   * @locus Server\n   * @since 2.2\n   * @param f {function} function that will receive options from the send function and under `packageSettings` will\n   * include the package settings from Meteor.settings.packages.email for your custom transport to access.\n   */\n  Email.customTransport = undefined;\n\n  /**\n   * @summary Send an email. Throws an `Error` on failure to contact mail server\n   * or if mail server returns an error. All fields should match\n   * [RFC5322](http://tools.ietf.org/html/rfc5322) specification.\n   *\n   * If the `MAIL_URL` environment variable is set, actually sends the email.\n   * Otherwise, prints the contents of the email to standard out.\n   *\n   * Note that this package is based on **nodemailer**, so make sure to refer to\n   * [the documentation](http://nodemailer.com/)\n   * when using the `attachments` or `mailComposer` options.\n   *\n   * @locus Server\n   * @param {Object} options\n   * @param {String} [options.from] \"From:\" address (required)\n   * @param {String|String[]} options.to,cc,bcc,replyTo\n   *   \"To:\", \"Cc:\", \"Bcc:\", and \"Reply-To:\" addresses\n   * @param {String} [options.inReplyTo] Message-ID this message is replying to\n   * @param {String|String[]} [options.references] Array (or space-separated string) of Message-IDs to refer to\n   * @param {String} [options.messageId] Message-ID for this message; otherwise, will be set to a random value\n   * @param {String} [options.subject]  \"Subject:\" line\n   * @param {String} [options.text|html] Mail body (in plain text and/or HTML)\n   * @param {String} [options.watchHtml] Mail body in HTML specific for Apple Watch\n   * @param {String} [options.icalEvent] iCalendar event attachment\n   * @param {Object} [options.headers] Dictionary of custom headers - e.g. `{ \"header name\": \"header value\" }`. To set an object under a header name, use `JSON.stringify` - e.g. `{ \"header name\": JSON.stringify({ tracking: { level: 'full' } }) }`.\n   * @param {Object[]} [options.attachments] Array of attachment objects, as\n   * described in the [nodemailer documentation](https://nodemailer.com/message/attachments/).\n   * @param {MailComposer} [options.mailComposer] A [MailComposer](https://nodemailer.com/extras/mailcomposer/#e-mail-message-fields)\n   * object representing the message to be sent.  Overrides all other options.\n   * You can create a `MailComposer` object via\n   * `new EmailInternals.NpmModules.mailcomposer.module`.\n   */\n  Email.send = function (options) {\n    if (Email.customTransport) {\n      var _Meteor$settings$pack2;\n      // Preserve current behavior\n      const email = options.mailComposer ? options.mailComposer.mail : options;\n      let send = true;\n      sendHooks.forEach(hook => {\n        send = hook(email);\n        return send;\n      });\n      if (!send) {\n        return;\n      }\n      const packageSettings = ((_Meteor$settings$pack2 = Meteor.settings.packages) === null || _Meteor$settings$pack2 === void 0 ? void 0 : _Meteor$settings$pack2.email) || {};\n      Email.customTransport(_objectSpread({\n        packageSettings\n      }, email));\n      return;\n    }\n    // Using Fibers Promise.await\n    return Promise.await(Email.sendAsync(options));\n  };\n\n  /**\n   * @summary Send an email with asyncronous method. Capture  Throws an `Error` on failure to contact mail server\n   * or if mail server returns an error. All fields should match\n   * [RFC5322](http://tools.ietf.org/html/rfc5322) specification.\n   *\n   * If the `MAIL_URL` environment variable is set, actually sends the email.\n   * Otherwise, prints the contents of the email to standard out.\n   *\n   * Note that this package is based on **nodemailer**, so make sure to refer to\n   * [the documentation](http://nodemailer.com/)\n   * when using the `attachments` or `mailComposer` options.\n   *\n   * @locus Server\n   * @return {Promise}\n   * @param {Object} options\n   * @param {String} [options.from] \"From:\" address (required)\n   * @param {String|String[]} options.to,cc,bcc,replyTo\n   *   \"To:\", \"Cc:\", \"Bcc:\", and \"Reply-To:\" addresses\n   * @param {String} [options.inReplyTo] Message-ID this message is replying to\n   * @param {String|String[]} [options.references] Array (or space-separated string) of Message-IDs to refer to\n   * @param {String} [options.messageId] Message-ID for this message; otherwise, will be set to a random value\n   * @param {String} [options.subject]  \"Subject:\" line\n   * @param {String} [options.text|html] Mail body (in plain text and/or HTML)\n   * @param {String} [options.watchHtml] Mail body in HTML specific for Apple Watch\n   * @param {String} [options.icalEvent] iCalendar event attachment\n   * @param {Object} [options.headers] Dictionary of custom headers - e.g. `{ \"header name\": \"header value\" }`. To set an object under a header name, use `JSON.stringify` - e.g. `{ \"header name\": JSON.stringify({ tracking: { level: 'full' } }) }`.\n   * @param {Object[]} [options.attachments] Array of attachment objects, as\n   * described in the [nodemailer documentation](https://nodemailer.com/message/attachments/).\n   * @param {MailComposer} [options.mailComposer] A [MailComposer](https://nodemailer.com/extras/mailcomposer/#e-mail-message-fields)\n   * object representing the message to be sent.  Overrides all other options.\n   * You can create a `MailComposer` object via\n   * `new EmailInternals.NpmModules.mailcomposer.module`.\n   */\n  Email.sendAsync = function (options) {\n    return Promise.asyncApply(() => {\n      var _Meteor$settings$pack4;\n      const email = options.mailComposer ? options.mailComposer.mail : options;\n      let send = true;\n      sendHooks.forEach(hook => {\n        send = hook(email);\n        return send;\n      });\n      if (!send) {\n        return;\n      }\n      if (Email.customTransport) {\n        var _Meteor$settings$pack3;\n        const packageSettings = ((_Meteor$settings$pack3 = Meteor.settings.packages) === null || _Meteor$settings$pack3 === void 0 ? void 0 : _Meteor$settings$pack3.email) || {};\n        return Email.customTransport(_objectSpread({\n          packageSettings\n        }, email));\n      }\n      const mailUrlEnv = process.env.MAIL_URL;\n      const mailUrlSettings = (_Meteor$settings$pack4 = Meteor.settings.packages) === null || _Meteor$settings$pack4 === void 0 ? void 0 : _Meteor$settings$pack4.email;\n      if (Meteor.isProduction && !mailUrlEnv && !mailUrlSettings) {\n        // This check is mostly necessary when using the flag --production when running locally.\n        // And it works as a reminder to properly set the mail URL when running locally.\n        throw new Error('You have not provided a mail URL. You can provide it by using the environment variable MAIL_URL or your settings. You can read more about it here: https://docs.meteor.com/api/email.html.');\n      }\n      if (mailUrlEnv || mailUrlSettings) {\n        const transport = getTransport();\n        smtpSend(transport, email);\n        return;\n      }\n      return devModeSendAsync(email, options);\n    });\n  };\n}.call(this, module);","map":{"version":3,"names":["_objectSpread","module1","link","default","v","export","Email","EmailTest","EmailInternals","Meteor","Log","Hook","url","nodemailer","wellKnow","NpmModules","mailcomposer","version","Npm","require","module","MailComposer","makeTransport","mailUrlString","mailUrl","URL","protocol","Error","port","debug","query","pool","transport","createTransport","format","_syncSendMail","wrapAsync","sendMail","knownHostsTransport","settings","arguments","length","undefined","service","user","password","hasSettings","Object","keys","host","split","urlObject","hostname","username","_urlObject$pathname$s","temp","pathname","substring","temp2","auth","pass","knowHostsTransport","getTransport","_Meteor$settings$pack","packageSettings","packages","email","process","env","MAIL_URL","cacheKey","cache","nextDevModeMailId","_getAndIncNextDevModeMailId","resetNextDevModeMailId","devModeSendAsync","mail","options","stream","stdout","Promise","resolve","reject","devModeMailId","output","push","readStream","compile","createReadStream","on","buffer","toString","write","join","err","smtpSend","sendHooks","hookSend","f","register","customTransport","send","_Meteor$settings$pack2","mailComposer","forEach","hook","await","sendAsync","asyncApply","_Meteor$settings$pack4","_Meteor$settings$pack3","mailUrlEnv","mailUrlSettings","isProduction","call"],"sources":["packages/email/email.js"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Log } from 'meteor/logging';\nimport { Hook } from 'meteor/callback-hook';\n\nimport url from 'url';\nimport nodemailer from 'nodemailer';\nimport wellKnow from 'nodemailer/lib/well-known';\n\nexport const Email = {};\nexport const EmailTest = {};\n\nexport const EmailInternals = {\n  NpmModules: {\n    mailcomposer: {\n      version: Npm.require('nodemailer/package.json').version,\n      module: Npm.require('nodemailer/lib/mail-composer'),\n    },\n    nodemailer: {\n      version: Npm.require('nodemailer/package.json').version,\n      module: Npm.require('nodemailer'),\n    },\n  },\n};\n\nconst MailComposer = EmailInternals.NpmModules.mailcomposer.module;\n\nconst makeTransport = function (mailUrlString) {\n  const mailUrl = new URL(mailUrlString);\n\n  if (mailUrl.protocol !== 'smtp:' && mailUrl.protocol !== 'smtps:') {\n    throw new Error(\n      'Email protocol in $MAIL_URL (' +\n        mailUrlString +\n        \") must be 'smtp' or 'smtps'\"\n    );\n  }\n\n  if (mailUrl.protocol === 'smtp:' && mailUrl.port === '465') {\n    Log.debug(\n      \"The $MAIL_URL is 'smtp://...:465'.  \" +\n        \"You probably want 'smtps://' (The 's' enables TLS/SSL) \" +\n        \"since '465' is typically a secure port.\"\n    );\n  }\n\n  // Allow overriding pool setting, but default to true.\n  if (!mailUrl.query) {\n    mailUrl.query = {};\n  }\n\n  if (!mailUrl.query.pool) {\n    mailUrl.query.pool = 'true';\n  }\n\n  const transport = nodemailer.createTransport(url.format(mailUrl));\n\n  transport._syncSendMail = Meteor.wrapAsync(transport.sendMail, transport);\n  return transport;\n};\n\n// More info: https://nodemailer.com/smtp/well-known/\nconst knownHostsTransport = function (settings = undefined, url = undefined) {\n  let service, user, password;\n\n  const hasSettings = settings && Object.keys(settings).length;\n\n  if (url && !hasSettings) {\n    let host = url.split(':')[0];\n    const urlObject = new URL(url);\n    if (host === 'http' || host === 'https') {\n      // Look to hostname for service\n      host = urlObject.hostname;\n      user = urlObject.username;\n      password = urlObject.password;\n    } else if (urlObject.protocol && urlObject.username && urlObject.password) {\n      // We have some data from urlObject\n      host = urlObject.protocol.split(':')[0];\n      user = urlObject.username;\n      password = urlObject.password;\n    } else {\n      // We need to disect the URL ourselves to get the data\n      // First get rid of the leading '//' and split to username and the rest\n      const temp = urlObject.pathname.substring(2)?.split(':');\n      user = temp[0];\n      // Now we split by '@' to get password and hostname\n      const temp2 = temp[1].split('@');\n      password = temp2[0];\n      host = temp2[1];\n    }\n    service = host;\n  }\n\n  if (!wellKnow(settings?.service || service)) {\n    throw new Error(\n      'Could not recognize e-mail service. See list at https://nodemailer.com/smtp/well-known/ for services that we can configure for you.'\n    );\n  }\n\n  const transport = nodemailer.createTransport({\n    service: settings?.service || service,\n    auth: {\n      user: settings?.user || user,\n      pass: settings?.password || password,\n    },\n  });\n\n  transport._syncSendMail = Meteor.wrapAsync(transport.sendMail, transport);\n  return transport;\n};\nEmailTest.knowHostsTransport = knownHostsTransport;\n\nconst getTransport = function () {\n  const packageSettings = Meteor.settings.packages?.email || {};\n  // We delay this check until the first call to Email.send, in case someone\n  // set process.env.MAIL_URL in startup code. Then we store in a cache until\n  // process.env.MAIL_URL changes.\n  const url = process.env.MAIL_URL;\n  if (\n    this.cacheKey === undefined ||\n    this.cacheKey !== url ||\n    this.cacheKey !== packageSettings.service ||\n    this.cacheKey !== 'settings'\n  ) {\n    if (\n      (packageSettings.service && wellKnow(packageSettings.service)) ||\n      (url && wellKnow(new URL(url).hostname)) ||\n      wellKnow(url?.split(':')[0] || '')\n    ) {\n      this.cacheKey = packageSettings.service || 'settings';\n      this.cache = knownHostsTransport(packageSettings, url);\n    } else {\n      this.cacheKey = url;\n      this.cache = url ? makeTransport(url, packageSettings) : null;\n    }\n  }\n  return this.cache;\n};\n\nlet nextDevModeMailId = 0;\n\nEmailTest._getAndIncNextDevModeMailId = function () {\n  return nextDevModeMailId++;\n};\n\n// Testing hooks\nEmailTest.resetNextDevModeMailId = function () {\n  nextDevModeMailId = 0;\n};\n\nconst devModeSendAsync = function (mail, options) {\n  const stream = options?.stream || process.stdout;\n  return new Promise((resolve, reject) => {\n    let devModeMailId = EmailTest._getAndIncNextDevModeMailId();\n\n    // This approach does not prevent other writers to stdout from interleaving.\n    const output = ['====== BEGIN MAIL #' + devModeMailId + ' ======\\n'];\n    output.push(\n      '(Mail not sent; to enable sending, set the MAIL_URL ' +\n      'environment variable.)\\n'\n    );\n    const readStream = new MailComposer(mail).compile().createReadStream();\n    readStream.on('data', buffer => {\n      output.push(buffer.toString());\n    });\n    readStream.on('end', function () {\n      output.push('====== END MAIL #' + devModeMailId + ' ======\\n');\n      stream.write(output.join(''), () => resolve());\n    });\n    readStream.on('error', (err) => reject(err));\n  });\n};\n\nconst smtpSend = function (transport, mail) {\n  transport._syncSendMail(mail);\n};\n\nconst sendHooks = new Hook();\n\n/**\n * @summary Hook that runs before email is sent.\n * @locus Server\n *\n * @param f {function} receives the arguments to Email.send and should return true to go\n * ahead and send the email (or at least, try subsequent hooks), or\n * false to skip sending.\n * @returns {{ stop: function, callback: function }}\n */\nEmail.hookSend = function (f) {\n  return sendHooks.register(f);\n};\n\n/**\n * @summary Overrides sending function with your own.\n * @locus Server\n * @since 2.2\n * @param f {function} function that will receive options from the send function and under `packageSettings` will\n * include the package settings from Meteor.settings.packages.email for your custom transport to access.\n */\nEmail.customTransport = undefined;\n\n/**\n * @summary Send an email. Throws an `Error` on failure to contact mail server\n * or if mail server returns an error. All fields should match\n * [RFC5322](http://tools.ietf.org/html/rfc5322) specification.\n *\n * If the `MAIL_URL` environment variable is set, actually sends the email.\n * Otherwise, prints the contents of the email to standard out.\n *\n * Note that this package is based on **nodemailer**, so make sure to refer to\n * [the documentation](http://nodemailer.com/)\n * when using the `attachments` or `mailComposer` options.\n *\n * @locus Server\n * @param {Object} options\n * @param {String} [options.from] \"From:\" address (required)\n * @param {String|String[]} options.to,cc,bcc,replyTo\n *   \"To:\", \"Cc:\", \"Bcc:\", and \"Reply-To:\" addresses\n * @param {String} [options.inReplyTo] Message-ID this message is replying to\n * @param {String|String[]} [options.references] Array (or space-separated string) of Message-IDs to refer to\n * @param {String} [options.messageId] Message-ID for this message; otherwise, will be set to a random value\n * @param {String} [options.subject]  \"Subject:\" line\n * @param {String} [options.text|html] Mail body (in plain text and/or HTML)\n * @param {String} [options.watchHtml] Mail body in HTML specific for Apple Watch\n * @param {String} [options.icalEvent] iCalendar event attachment\n * @param {Object} [options.headers] Dictionary of custom headers - e.g. `{ \"header name\": \"header value\" }`. To set an object under a header name, use `JSON.stringify` - e.g. `{ \"header name\": JSON.stringify({ tracking: { level: 'full' } }) }`.\n * @param {Object[]} [options.attachments] Array of attachment objects, as\n * described in the [nodemailer documentation](https://nodemailer.com/message/attachments/).\n * @param {MailComposer} [options.mailComposer] A [MailComposer](https://nodemailer.com/extras/mailcomposer/#e-mail-message-fields)\n * object representing the message to be sent.  Overrides all other options.\n * You can create a `MailComposer` object via\n * `new EmailInternals.NpmModules.mailcomposer.module`.\n */\nEmail.send = function (options) {\n  if (Email.customTransport) {\n    // Preserve current behavior\n    const email = options.mailComposer ? options.mailComposer.mail : options;\n    let send = true;\n    sendHooks.forEach((hook) => {\n      send = hook(email);\n      return send;\n    });\n    if (!send) {\n      return;\n    }\n    const packageSettings = Meteor.settings.packages?.email || {};\n    Email.customTransport({ packageSettings, ...email });\n    return;\n  }\n  // Using Fibers Promise.await\n  return Promise.await(Email.sendAsync(options));\n};\n\n/**\n * @summary Send an email with asyncronous method. Capture  Throws an `Error` on failure to contact mail server\n * or if mail server returns an error. All fields should match\n * [RFC5322](http://tools.ietf.org/html/rfc5322) specification.\n *\n * If the `MAIL_URL` environment variable is set, actually sends the email.\n * Otherwise, prints the contents of the email to standard out.\n *\n * Note that this package is based on **nodemailer**, so make sure to refer to\n * [the documentation](http://nodemailer.com/)\n * when using the `attachments` or `mailComposer` options.\n *\n * @locus Server\n * @return {Promise}\n * @param {Object} options\n * @param {String} [options.from] \"From:\" address (required)\n * @param {String|String[]} options.to,cc,bcc,replyTo\n *   \"To:\", \"Cc:\", \"Bcc:\", and \"Reply-To:\" addresses\n * @param {String} [options.inReplyTo] Message-ID this message is replying to\n * @param {String|String[]} [options.references] Array (or space-separated string) of Message-IDs to refer to\n * @param {String} [options.messageId] Message-ID for this message; otherwise, will be set to a random value\n * @param {String} [options.subject]  \"Subject:\" line\n * @param {String} [options.text|html] Mail body (in plain text and/or HTML)\n * @param {String} [options.watchHtml] Mail body in HTML specific for Apple Watch\n * @param {String} [options.icalEvent] iCalendar event attachment\n * @param {Object} [options.headers] Dictionary of custom headers - e.g. `{ \"header name\": \"header value\" }`. To set an object under a header name, use `JSON.stringify` - e.g. `{ \"header name\": JSON.stringify({ tracking: { level: 'full' } }) }`.\n * @param {Object[]} [options.attachments] Array of attachment objects, as\n * described in the [nodemailer documentation](https://nodemailer.com/message/attachments/).\n * @param {MailComposer} [options.mailComposer] A [MailComposer](https://nodemailer.com/extras/mailcomposer/#e-mail-message-fields)\n * object representing the message to be sent.  Overrides all other options.\n * You can create a `MailComposer` object via\n * `new EmailInternals.NpmModules.mailcomposer.module`.\n */\nEmail.sendAsync = async function (options) {\n\n  const email = options.mailComposer ? options.mailComposer.mail : options;\n\n  let send = true;\n  sendHooks.forEach((hook) => {\n    send = hook(email);\n    return send;\n  });\n  if (!send) {\n    return;\n  }\n\n  if (Email.customTransport) {\n    const packageSettings = Meteor.settings.packages?.email || {};\n    return Email.customTransport({ packageSettings, ...email });\n  }\n\n  const mailUrlEnv = process.env.MAIL_URL;\n  const mailUrlSettings = Meteor.settings.packages?.email;\n\n  if (Meteor.isProduction && !mailUrlEnv && !mailUrlSettings) {\n    // This check is mostly necessary when using the flag --production when running locally.\n    // And it works as a reminder to properly set the mail URL when running locally.\n    throw new Error(\n      'You have not provided a mail URL. You can provide it by using the environment variable MAIL_URL or your settings. You can read more about it here: https://docs.meteor.com/api/email.html.'\n    );\n  }\n\n  if (mailUrlEnv || mailUrlSettings) {\n    const transport = getTransport();\n    smtpSend(transport, email);\n    return;\n  }\n  return devModeSendAsync(email, options);\n};\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"1d0afdc2b0a6da1a152baf830e337d32300b7a6e"}
