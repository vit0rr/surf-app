{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/minimongo/matcher.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/minimongo/matcher.js","filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/minimongo/matcher.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/styles","root":"/Users/nicholas/Desktop/projects/local-legends/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/minimongo/matcher.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/minimongo/matcher.js"}},"code":"var _Package$mongoDecima;\nmodule.export({\n  default: () => Matcher\n});\nlet LocalCollection;\nmodule.link(\"./local_collection.js\", {\n  default(v) {\n    LocalCollection = v;\n  }\n}, 0);\nlet compileDocumentSelector, hasOwn, nothingMatcher;\nmodule.link(\"./common.js\", {\n  compileDocumentSelector(v) {\n    compileDocumentSelector = v;\n  },\n  hasOwn(v) {\n    hasOwn = v;\n  },\n  nothingMatcher(v) {\n    nothingMatcher = v;\n  }\n}, 1);\nconst Decimal = ((_Package$mongoDecima = Package['mongo-decimal']) === null || _Package$mongoDecima === void 0 ? void 0 : _Package$mongoDecima.Decimal) || class DecimalStub {};\n\n// The minimongo selector compiler!\n\n// Terminology:\n//  - a 'selector' is the EJSON object representing a selector\n//  - a 'matcher' is its compiled form (whether a full Minimongo.Matcher\n//    object or one of the component lambdas that matches parts of it)\n//  - a 'result object' is an object with a 'result' field and maybe\n//    distance and arrayIndices.\n//  - a 'branched value' is an object with a 'value' field and maybe\n//    'dontIterate' and 'arrayIndices'.\n//  - a 'document' is a top-level object that can be stored in a collection.\n//  - a 'lookup function' is a function that takes in a document and returns\n//    an array of 'branched values'.\n//  - a 'branched matcher' maps from an array of branched values to a result\n//    object.\n//  - an 'element matcher' maps from a single value to a bool.\n\n// Main entry point.\n//   var matcher = new Minimongo.Matcher({a: {$gt: 5}});\n//   if (matcher.documentMatches({a: 7})) ...\nclass Matcher {\n  constructor(selector, isUpdate) {\n    // A set (object mapping string -> *) of all of the document paths looked\n    // at by the selector. Also includes the empty string if it may look at any\n    // path (eg, $where).\n    this._paths = {};\n    // Set to true if compilation finds a $near.\n    this._hasGeoQuery = false;\n    // Set to true if compilation finds a $where.\n    this._hasWhere = false;\n    // Set to false if compilation finds anything other than a simple equality\n    // or one or more of '$gt', '$gte', '$lt', '$lte', '$ne', '$in', '$nin' used\n    // with scalars as operands.\n    this._isSimple = true;\n    // Set to a dummy document which always matches this Matcher. Or set to null\n    // if such document is too hard to find.\n    this._matchingDocument = undefined;\n    // A clone of the original selector. It may just be a function if the user\n    // passed in a function; otherwise is definitely an object (eg, IDs are\n    // translated into {_id: ID} first. Used by canBecomeTrueByModifier and\n    // Sorter._useWithMatcher.\n    this._selector = null;\n    this._docMatcher = this._compileSelector(selector);\n    // Set to true if selection is done for an update operation\n    // Default is false\n    // Used for $near array update (issue #3599)\n    this._isUpdate = isUpdate;\n  }\n  documentMatches(doc) {\n    if (doc !== Object(doc)) {\n      throw Error('documentMatches needs a document');\n    }\n    return this._docMatcher(doc);\n  }\n  hasGeoQuery() {\n    return this._hasGeoQuery;\n  }\n  hasWhere() {\n    return this._hasWhere;\n  }\n  isSimple() {\n    return this._isSimple;\n  }\n\n  // Given a selector, return a function that takes one argument, a\n  // document. It returns a result object.\n  _compileSelector(selector) {\n    // you can pass a literal function instead of a selector\n    if (selector instanceof Function) {\n      this._isSimple = false;\n      this._selector = selector;\n      this._recordPathUsed('');\n      return doc => ({\n        result: !!selector.call(doc)\n      });\n    }\n\n    // shorthand -- scalar _id\n    if (LocalCollection._selectorIsId(selector)) {\n      this._selector = {\n        _id: selector\n      };\n      this._recordPathUsed('_id');\n      return doc => ({\n        result: EJSON.equals(doc._id, selector)\n      });\n    }\n\n    // protect against dangerous selectors.  falsey and {_id: falsey} are both\n    // likely programmer error, and not what you want, particularly for\n    // destructive operations.\n    if (!selector || hasOwn.call(selector, '_id') && !selector._id) {\n      this._isSimple = false;\n      return nothingMatcher;\n    }\n\n    // Top level can't be an array or true or binary.\n    if (Array.isArray(selector) || EJSON.isBinary(selector) || typeof selector === 'boolean') {\n      throw new Error(\"Invalid selector: \".concat(selector));\n    }\n    this._selector = EJSON.clone(selector);\n    return compileDocumentSelector(selector, this, {\n      isRoot: true\n    });\n  }\n\n  // Returns a list of key paths the given selector is looking for. It includes\n  // the empty string if there is a $where.\n  _getPaths() {\n    return Object.keys(this._paths);\n  }\n  _recordPathUsed(path) {\n    this._paths[path] = true;\n  }\n}\n// helpers used by compiled selector code\nLocalCollection._f = {\n  // XXX for _all and _in, consider building 'inquery' at compile time..\n  _type(v) {\n    if (typeof v === 'number') {\n      return 1;\n    }\n    if (typeof v === 'string') {\n      return 2;\n    }\n    if (typeof v === 'boolean') {\n      return 8;\n    }\n    if (Array.isArray(v)) {\n      return 4;\n    }\n    if (v === null) {\n      return 10;\n    }\n\n    // note that typeof(/x/) === \"object\"\n    if (v instanceof RegExp) {\n      return 11;\n    }\n    if (typeof v === 'function') {\n      return 13;\n    }\n    if (v instanceof Date) {\n      return 9;\n    }\n    if (EJSON.isBinary(v)) {\n      return 5;\n    }\n    if (v instanceof MongoID.ObjectID) {\n      return 7;\n    }\n    if (v instanceof Decimal) {\n      return 1;\n    }\n\n    // object\n    return 3;\n\n    // XXX support some/all of these:\n    // 14, symbol\n    // 15, javascript code with scope\n    // 16, 18: 32-bit/64-bit integer\n    // 17, timestamp\n    // 255, minkey\n    // 127, maxkey\n  },\n  // deep equality test: use for literal document and array matches\n  _equal(a, b) {\n    return EJSON.equals(a, b, {\n      keyOrderSensitive: true\n    });\n  },\n  // maps a type code to a value that can be used to sort values of different\n  // types\n  _typeorder(t) {\n    // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types\n    // XXX what is the correct sort position for Javascript code?\n    // ('100' in the matrix below)\n    // XXX minkey/maxkey\n    return [-1,\n    // (not a type)\n    1,\n    // number\n    2,\n    // string\n    3,\n    // object\n    4,\n    // array\n    5,\n    // binary\n    -1,\n    // deprecated\n    6,\n    // ObjectID\n    7,\n    // bool\n    8,\n    // Date\n    0,\n    // null\n    9,\n    // RegExp\n    -1,\n    // deprecated\n    100,\n    // JS code\n    2,\n    // deprecated (symbol)\n    100,\n    // JS code\n    1,\n    // 32-bit int\n    8,\n    // Mongo timestamp\n    1 // 64-bit int\n    ][t];\n  },\n  // compare two values of unknown type according to BSON ordering\n  // semantics. (as an extension, consider 'undefined' to be less than\n  // any other value.) return negative if a is less, positive if b is\n  // less, or 0 if equal\n  _cmp(a, b) {\n    if (a === undefined) {\n      return b === undefined ? 0 : -1;\n    }\n    if (b === undefined) {\n      return 1;\n    }\n    let ta = LocalCollection._f._type(a);\n    let tb = LocalCollection._f._type(b);\n    const oa = LocalCollection._f._typeorder(ta);\n    const ob = LocalCollection._f._typeorder(tb);\n    if (oa !== ob) {\n      return oa < ob ? -1 : 1;\n    }\n\n    // XXX need to implement this if we implement Symbol or integers, or\n    // Timestamp\n    if (ta !== tb) {\n      throw Error('Missing type coercion logic in _cmp');\n    }\n    if (ta === 7) {\n      // ObjectID\n      // Convert to string.\n      ta = tb = 2;\n      a = a.toHexString();\n      b = b.toHexString();\n    }\n    if (ta === 9) {\n      // Date\n      // Convert to millis.\n      ta = tb = 1;\n      a = isNaN(a) ? 0 : a.getTime();\n      b = isNaN(b) ? 0 : b.getTime();\n    }\n    if (ta === 1) {\n      // double\n      if (a instanceof Decimal) {\n        return a.minus(b).toNumber();\n      } else {\n        return a - b;\n      }\n    }\n    if (tb === 2)\n      // string\n      return a < b ? -1 : a === b ? 0 : 1;\n    if (ta === 3) {\n      // Object\n      // this could be much more efficient in the expected case ...\n      const toArray = object => {\n        const result = [];\n        Object.keys(object).forEach(key => {\n          result.push(key, object[key]);\n        });\n        return result;\n      };\n      return LocalCollection._f._cmp(toArray(a), toArray(b));\n    }\n    if (ta === 4) {\n      // Array\n      for (let i = 0;; i++) {\n        if (i === a.length) {\n          return i === b.length ? 0 : -1;\n        }\n        if (i === b.length) {\n          return 1;\n        }\n        const s = LocalCollection._f._cmp(a[i], b[i]);\n        if (s !== 0) {\n          return s;\n        }\n      }\n    }\n    if (ta === 5) {\n      // binary\n      // Surprisingly, a small binary blob is always less than a large one in\n      // Mongo.\n      if (a.length !== b.length) {\n        return a.length - b.length;\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] < b[i]) {\n          return -1;\n        }\n        if (a[i] > b[i]) {\n          return 1;\n        }\n      }\n      return 0;\n    }\n    if (ta === 8) {\n      // boolean\n      if (a) {\n        return b ? 0 : 1;\n      }\n      return b ? -1 : 0;\n    }\n    if (ta === 10)\n      // null\n      return 0;\n    if (ta === 11)\n      // regexp\n      throw Error('Sorting not supported on regular expression'); // XXX\n\n    // 13: javascript code\n    // 14: symbol\n    // 15: javascript code with scope\n    // 16: 32-bit integer\n    // 17: timestamp\n    // 18: 64-bit integer\n    // 255: minkey\n    // 127: maxkey\n    if (ta === 13)\n      // javascript code\n      throw Error('Sorting not supported on Javascript code'); // XXX\n\n    throw Error('Unknown type to sort');\n  }\n};","map":{"version":3,"names":["module","export","default","Matcher","LocalCollection","link","v","compileDocumentSelector","hasOwn","nothingMatcher","Decimal","_Package$mongoDecima","Package","DecimalStub","constructor","selector","isUpdate","_paths","_hasGeoQuery","_hasWhere","_isSimple","_matchingDocument","undefined","_selector","_docMatcher","_compileSelector","_isUpdate","documentMatches","doc","Object","Error","hasGeoQuery","hasWhere","isSimple","Function","_recordPathUsed","result","call","_selectorIsId","_id","EJSON","equals","Array","isArray","isBinary","concat","clone","isRoot","_getPaths","keys","path","_f","_type","RegExp","Date","MongoID","ObjectID","_equal","a","b","keyOrderSensitive","_typeorder","t","_cmp","ta","tb","oa","ob","toHexString","isNaN","getTime","minus","toNumber","toArray","object","forEach","key","push","i","length","s"],"sources":["packages/minimongo/matcher.js"],"sourcesContent":["import LocalCollection from './local_collection.js';\nimport {\n  compileDocumentSelector,\n  hasOwn,\n  nothingMatcher,\n} from './common.js';\n\nconst Decimal = Package['mongo-decimal']?.Decimal || class DecimalStub {}\n\n// The minimongo selector compiler!\n\n// Terminology:\n//  - a 'selector' is the EJSON object representing a selector\n//  - a 'matcher' is its compiled form (whether a full Minimongo.Matcher\n//    object or one of the component lambdas that matches parts of it)\n//  - a 'result object' is an object with a 'result' field and maybe\n//    distance and arrayIndices.\n//  - a 'branched value' is an object with a 'value' field and maybe\n//    'dontIterate' and 'arrayIndices'.\n//  - a 'document' is a top-level object that can be stored in a collection.\n//  - a 'lookup function' is a function that takes in a document and returns\n//    an array of 'branched values'.\n//  - a 'branched matcher' maps from an array of branched values to a result\n//    object.\n//  - an 'element matcher' maps from a single value to a bool.\n\n// Main entry point.\n//   var matcher = new Minimongo.Matcher({a: {$gt: 5}});\n//   if (matcher.documentMatches({a: 7})) ...\nexport default class Matcher {\n  constructor(selector, isUpdate) {\n    // A set (object mapping string -> *) of all of the document paths looked\n    // at by the selector. Also includes the empty string if it may look at any\n    // path (eg, $where).\n    this._paths = {};\n    // Set to true if compilation finds a $near.\n    this._hasGeoQuery = false;\n    // Set to true if compilation finds a $where.\n    this._hasWhere = false;\n    // Set to false if compilation finds anything other than a simple equality\n    // or one or more of '$gt', '$gte', '$lt', '$lte', '$ne', '$in', '$nin' used\n    // with scalars as operands.\n    this._isSimple = true;\n    // Set to a dummy document which always matches this Matcher. Or set to null\n    // if such document is too hard to find.\n    this._matchingDocument = undefined;\n    // A clone of the original selector. It may just be a function if the user\n    // passed in a function; otherwise is definitely an object (eg, IDs are\n    // translated into {_id: ID} first. Used by canBecomeTrueByModifier and\n    // Sorter._useWithMatcher.\n    this._selector = null;\n    this._docMatcher = this._compileSelector(selector);\n    // Set to true if selection is done for an update operation\n    // Default is false\n    // Used for $near array update (issue #3599)\n    this._isUpdate = isUpdate;\n  }\n\n  documentMatches(doc) {\n    if (doc !== Object(doc)) {\n      throw Error('documentMatches needs a document');\n    }\n\n    return this._docMatcher(doc);\n  }\n\n  hasGeoQuery() {\n    return this._hasGeoQuery;\n  }\n\n  hasWhere() {\n    return this._hasWhere;\n  }\n\n  isSimple() {\n    return this._isSimple;\n  }\n\n  // Given a selector, return a function that takes one argument, a\n  // document. It returns a result object.\n  _compileSelector(selector) {\n    // you can pass a literal function instead of a selector\n    if (selector instanceof Function) {\n      this._isSimple = false;\n      this._selector = selector;\n      this._recordPathUsed('');\n\n      return doc => ({result: !!selector.call(doc)});\n    }\n\n    // shorthand -- scalar _id\n    if (LocalCollection._selectorIsId(selector)) {\n      this._selector = {_id: selector};\n      this._recordPathUsed('_id');\n\n      return doc => ({result: EJSON.equals(doc._id, selector)});\n    }\n\n    // protect against dangerous selectors.  falsey and {_id: falsey} are both\n    // likely programmer error, and not what you want, particularly for\n    // destructive operations.\n    if (!selector || hasOwn.call(selector, '_id') && !selector._id) {\n      this._isSimple = false;\n      return nothingMatcher;\n    }\n\n    // Top level can't be an array or true or binary.\n    if (Array.isArray(selector) ||\n        EJSON.isBinary(selector) ||\n        typeof selector === 'boolean') {\n      throw new Error(`Invalid selector: ${selector}`);\n    }\n\n    this._selector = EJSON.clone(selector);\n\n    return compileDocumentSelector(selector, this, {isRoot: true});\n  }\n\n  // Returns a list of key paths the given selector is looking for. It includes\n  // the empty string if there is a $where.\n  _getPaths() {\n    return Object.keys(this._paths);\n  }\n\n  _recordPathUsed(path) {\n    this._paths[path] = true;\n  }\n}\n\n// helpers used by compiled selector code\nLocalCollection._f = {\n  // XXX for _all and _in, consider building 'inquery' at compile time..\n  _type(v) {\n    if (typeof v === 'number') {\n      return 1;\n    }\n\n    if (typeof v === 'string') {\n      return 2;\n    }\n\n    if (typeof v === 'boolean') {\n      return 8;\n    }\n\n    if (Array.isArray(v)) {\n      return 4;\n    }\n\n    if (v === null) {\n      return 10;\n    }\n\n    // note that typeof(/x/) === \"object\"\n    if (v instanceof RegExp) {\n      return 11;\n    }\n\n    if (typeof v === 'function') {\n      return 13;\n    }\n\n    if (v instanceof Date) {\n      return 9;\n    }\n\n    if (EJSON.isBinary(v)) {\n      return 5;\n    }\n\n    if (v instanceof MongoID.ObjectID) {\n      return 7;\n    }\n\n    if (v instanceof Decimal) {\n      return 1;\n    }\n\n    // object\n    return 3;\n\n    // XXX support some/all of these:\n    // 14, symbol\n    // 15, javascript code with scope\n    // 16, 18: 32-bit/64-bit integer\n    // 17, timestamp\n    // 255, minkey\n    // 127, maxkey\n  },\n\n  // deep equality test: use for literal document and array matches\n  _equal(a, b) {\n    return EJSON.equals(a, b, {keyOrderSensitive: true});\n  },\n\n  // maps a type code to a value that can be used to sort values of different\n  // types\n  _typeorder(t) {\n    // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types\n    // XXX what is the correct sort position for Javascript code?\n    // ('100' in the matrix below)\n    // XXX minkey/maxkey\n    return [\n      -1,  // (not a type)\n      1,   // number\n      2,   // string\n      3,   // object\n      4,   // array\n      5,   // binary\n      -1,  // deprecated\n      6,   // ObjectID\n      7,   // bool\n      8,   // Date\n      0,   // null\n      9,   // RegExp\n      -1,  // deprecated\n      100, // JS code\n      2,   // deprecated (symbol)\n      100, // JS code\n      1,   // 32-bit int\n      8,   // Mongo timestamp\n      1    // 64-bit int\n    ][t];\n  },\n\n  // compare two values of unknown type according to BSON ordering\n  // semantics. (as an extension, consider 'undefined' to be less than\n  // any other value.) return negative if a is less, positive if b is\n  // less, or 0 if equal\n  _cmp(a, b) {\n    if (a === undefined) {\n      return b === undefined ? 0 : -1;\n    }\n\n    if (b === undefined) {\n      return 1;\n    }\n\n    let ta = LocalCollection._f._type(a);\n    let tb = LocalCollection._f._type(b);\n\n    const oa = LocalCollection._f._typeorder(ta);\n    const ob = LocalCollection._f._typeorder(tb);\n\n    if (oa !== ob) {\n      return oa < ob ? -1 : 1;\n    }\n\n    // XXX need to implement this if we implement Symbol or integers, or\n    // Timestamp\n    if (ta !== tb) {\n      throw Error('Missing type coercion logic in _cmp');\n    }\n\n    if (ta === 7) { // ObjectID\n      // Convert to string.\n      ta = tb = 2;\n      a = a.toHexString();\n      b = b.toHexString();\n    }\n\n    if (ta === 9) { // Date\n      // Convert to millis.\n      ta = tb = 1;\n      a = isNaN(a) ? 0 : a.getTime();\n      b = isNaN(b) ? 0 : b.getTime();\n    }\n\n    if (ta === 1) { // double\n      if (a instanceof Decimal) {\n        return a.minus(b).toNumber();\n      } else {\n        return a - b;\n      }\n    }\n\n    if (tb === 2) // string\n      return a < b ? -1 : a === b ? 0 : 1;\n\n    if (ta === 3) { // Object\n      // this could be much more efficient in the expected case ...\n      const toArray = object => {\n        const result = [];\n\n        Object.keys(object).forEach(key => {\n          result.push(key, object[key]);\n        });\n\n        return result;\n      };\n\n      return LocalCollection._f._cmp(toArray(a), toArray(b));\n    }\n\n    if (ta === 4) { // Array\n      for (let i = 0; ; i++) {\n        if (i === a.length) {\n          return i === b.length ? 0 : -1;\n        }\n\n        if (i === b.length) {\n          return 1;\n        }\n\n        const s = LocalCollection._f._cmp(a[i], b[i]);\n        if (s !== 0) {\n          return s;\n        }\n      }\n    }\n\n    if (ta === 5) { // binary\n      // Surprisingly, a small binary blob is always less than a large one in\n      // Mongo.\n      if (a.length !== b.length) {\n        return a.length - b.length;\n      }\n\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] < b[i]) {\n          return -1;\n        }\n\n        if (a[i] > b[i]) {\n          return 1;\n        }\n      }\n\n      return 0;\n    }\n\n    if (ta === 8) { // boolean\n      if (a) {\n        return b ? 0 : 1;\n      }\n\n      return b ? -1 : 0;\n    }\n\n    if (ta === 10) // null\n      return 0;\n\n    if (ta === 11) // regexp\n      throw Error('Sorting not supported on regular expression'); // XXX\n\n    // 13: javascript code\n    // 14: symbol\n    // 15: javascript code with scope\n    // 16: 32-bit integer\n    // 17: timestamp\n    // 18: 64-bit integer\n    // 255: minkey\n    // 127: maxkey\n    if (ta === 13) // javascript code\n      throw Error('Sorting not supported on Javascript code'); // XXX\n\n    throw Error('Unknown type to sort');\n  },\n};\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"85795941e4e7279dbe4026d5a4a7bcdf0b07944a"}
