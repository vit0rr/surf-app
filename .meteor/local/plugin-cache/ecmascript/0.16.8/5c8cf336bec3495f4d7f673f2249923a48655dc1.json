{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/mdg:meteor-apm-agent/lib/hijack/db.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/mdg:meteor-apm-agent/lib/hijack/db.js","filename":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/mdg:meteor-apm-agent/lib/hijack/db.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/client/styles","root":"/Users/nicholas/Desktop/projects/local-legends/client/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/mdg:meteor-apm-agent/lib/hijack/db.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mdg:meteor-apm-agent/lib/hijack/db.js"}},"code":"let MongoConnection, MongoCursor;\nmodule.link(\"./meteorx.js\", {\n  MongoConnection(v) {\n    MongoConnection = v;\n  },\n  MongoCursor(v) {\n    MongoCursor = v;\n  }\n}, 0);\n// This hijack is important to make sure, collections created before\n// we hijack dbOps, even gets tracked.\n//  Meteor does not simply expose MongoConnection object to the client\n//  It picks methods which are necessory and make a binded object and\n//  assigned to the Mongo.Collection\n//  so, even we updated prototype, we can't track those collections\n//  but, this will fix it.\nvar originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\nMongoInternals.RemoteCollectionDriver.prototype.open = function open(name) {\n  var self = this;\n  var ret = originalOpen.call(self, name);\n  _.each(ret, function (fn, m) {\n    // make sure, it's in the actual mongo connection object\n    // meteorhacks:mongo-collection-utils package add some arbitary methods\n    // which does not exist in the mongo connection\n    if (self.mongo[m]) {\n      ret[m] = function () {\n        Array.prototype.unshift.call(arguments, name);\n        return OptimizedApply(self.mongo, self.mongo[m], arguments);\n      };\n    }\n  });\n  return ret;\n};\nhijackDBOps = function hijackDBOps() {\n  var mongoConnectionProto = MongoConnection.prototype;\n  //findOne is handled by find - so no need to track it\n  //upsert is handles by update\n  ['find', 'update', 'remove', 'insert', '_ensureIndex', '_dropIndex'].forEach(function (func) {\n    var originalFunc = mongoConnectionProto[func];\n    mongoConnectionProto[func] = function (collName, selector, mod, options) {\n      var payload = {\n        coll: collName,\n        func: func\n      };\n      if (func == 'insert') {\n        //add nothing more to the payload\n      } else if (func == '_ensureIndex' || func == '_dropIndex') {\n        //add index\n        payload.index = JSON.stringify(selector);\n      } else if (func == 'update' && options && options.upsert) {\n        payload.func = 'upsert';\n        payload.selector = JSON.stringify(selector);\n      } else {\n        //all the other functions have selectors\n        payload.selector = JSON.stringify(selector);\n      }\n      var kadiraInfo = Kadira._getInfo();\n      if (kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n\n      //this cause V8 to avoid any performance optimizations, but this is must to use\n      //otherwise, if the error adds try catch block our logs get messy and didn't work\n      //see: issue #6\n      try {\n        var ret = originalFunc.apply(this, arguments);\n        //handling functions which can be triggered with an asyncCallback\n        var endOptions = {};\n        if (HaveAsyncCallback(arguments)) {\n          endOptions.async = true;\n        }\n        if (func == 'update') {\n          // upsert only returns an object when called `upsert` directly\n          // otherwise it only act an update command\n          if (options && options.upsert && typeof ret == 'object') {\n            endOptions.updatedDocs = ret.numberAffected;\n            endOptions.insertedId = ret.insertedId;\n          } else {\n            endOptions.updatedDocs = ret;\n          }\n        } else if (func == 'remove') {\n          endOptions.removedDocs = ret;\n        }\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n        }\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n            err: ex.message\n          });\n        }\n        throw ex;\n      }\n      return ret;\n    };\n  });\n  var cursorProto = MongoCursor.prototype;\n  ['forEach', 'map', 'fetch', 'count', 'observeChanges', 'observe', 'rewind'].forEach(function (type) {\n    var originalFunc = cursorProto[type];\n    cursorProto[type] = function () {\n      var cursorDescription = this._cursorDescription;\n      var payload = Object.assign(Object.create(null), {\n        coll: cursorDescription.collectionName,\n        selector: JSON.stringify(cursorDescription.selector),\n        func: type,\n        cursor: true\n      });\n      if (cursorDescription.options) {\n        var cursorOptions = _.pick(cursorDescription.options, ['fields', 'sort', 'limit']);\n        for (var field in cursorOptions) {\n          var value = cursorOptions[field];\n          if (typeof value == 'object') {\n            value = JSON.stringify(value);\n          }\n          payload[field] = value;\n        }\n      }\n      ;\n      var kadiraInfo = Kadira._getInfo();\n      if (kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n      try {\n        var ret = originalFunc.apply(this, arguments);\n        var endData = {};\n        if (type == 'observeChanges' || type == 'observe') {\n          var observerDriver;\n          endData.oplog = false;\n          // get data written by the multiplexer\n          endData.wasMultiplexerReady = ret._wasMultiplexerReady;\n          endData.queueLength = ret._queueLength;\n          endData.elapsedPollingTime = ret._elapsedPollingTime;\n          if (ret._multiplexer) {\n            // older meteor versions done not have an _multiplexer value\n            observerDriver = ret._multiplexer._observeDriver;\n            if (observerDriver) {\n              observerDriver = ret._multiplexer._observeDriver;\n              var observerDriverClass = observerDriver.constructor;\n              var usesOplog = typeof observerDriverClass.cursorSupported == 'function';\n              endData.oplog = usesOplog;\n              var size = 0;\n              ret._multiplexer._cache.docs.forEach(function () {\n                size++;\n              });\n              endData.noOfCachedDocs = size;\n\n              // if multiplexerWasNotReady, we need to get the time spend for the polling\n              if (!ret._wasMultiplexerReady) {\n                endData.initialPollingTime = observerDriver._lastPollTime;\n              }\n            }\n          }\n          if (!endData.oplog) {\n            // let's try to find the reason\n            var reasonInfo = Kadira.checkWhyNoOplog(cursorDescription, observerDriver);\n            endData.noOplogCode = reasonInfo.code;\n            endData.noOplogReason = reasonInfo.reason;\n            endData.noOplogSolution = reasonInfo.solution;\n          }\n        } else if (type == 'fetch' || type == 'map') {\n          //for other cursor operation\n\n          endData.docsFetched = ret.length;\n          if (type == 'fetch') {\n            var coll = cursorDescription.collectionName;\n            var query = cursorDescription.selector;\n            var opts = cursorDescription.options;\n            var docSize = Kadira.docSzCache.getSize(coll, query, opts, ret) * ret.length;\n            endData.docSize = docSize;\n            if (kadiraInfo) {\n              if (kadiraInfo.trace.type === 'method') {\n                Kadira.models.methods.trackDocSize(kadiraInfo.trace.name, docSize);\n              } else if (kadiraInfo.trace.type === 'sub') {\n                Kadira.models.pubsub.trackDocSize(kadiraInfo.trace.name, \"cursorFetches\", docSize);\n              }\n            } else {\n              // Fetch with no kadira info are tracked as from a null method\n              Kadira.models.methods.trackDocSize(\"<not-a-method-or-a-pub>\", docSize);\n            }\n\n            // TODO: Add doc size tracking to `map` as well.\n          }\n        }\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endData);\n        }\n        return ret;\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n            err: ex.message\n          });\n        }\n        throw ex;\n      }\n    };\n  });\n};","map":{"version":3,"names":["MongoConnection","MongoCursor","module","link","v","originalOpen","MongoInternals","RemoteCollectionDriver","prototype","open","name","self","ret","call","_","each","fn","m","mongo","Array","unshift","arguments","OptimizedApply","hijackDBOps","mongoConnectionProto","forEach","func","originalFunc","collName","selector","mod","options","payload","coll","index","JSON","stringify","upsert","kadiraInfo","Kadira","_getInfo","eventId","tracer","event","trace","apply","endOptions","HaveAsyncCallback","async","updatedDocs","numberAffected","insertedId","removedDocs","eventEnd","ex","err","message","cursorProto","type","cursorDescription","_cursorDescription","Object","assign","create","collectionName","cursor","cursorOptions","pick","field","value","endData","observerDriver","oplog","wasMultiplexerReady","_wasMultiplexerReady","queueLength","_queueLength","elapsedPollingTime","_elapsedPollingTime","_multiplexer","_observeDriver","observerDriverClass","constructor","usesOplog","cursorSupported","size","_cache","docs","noOfCachedDocs","initialPollingTime","_lastPollTime","reasonInfo","checkWhyNoOplog","noOplogCode","code","noOplogReason","reason","noOplogSolution","solution","docsFetched","length","query","opts","docSize","docSzCache","getSize","models","methods","trackDocSize","pubsub"],"sources":["packages/mdg:meteor-apm-agent/lib/hijack/db.js"],"sourcesContent":["import {\n  MongoConnection,\n  MongoCursor,\n} from \"./meteorx.js\";\n\n// This hijack is important to make sure, collections created before\n// we hijack dbOps, even gets tracked.\n//  Meteor does not simply expose MongoConnection object to the client\n//  It picks methods which are necessory and make a binded object and\n//  assigned to the Mongo.Collection\n//  so, even we updated prototype, we can't track those collections\n//  but, this will fix it.\nvar originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\nMongoInternals.RemoteCollectionDriver.prototype.open = function open(name) {\n  var self = this;\n  var ret = originalOpen.call(self, name);\n\n  _.each(ret, function(fn, m) {\n    // make sure, it's in the actual mongo connection object\n    // meteorhacks:mongo-collection-utils package add some arbitary methods\n    // which does not exist in the mongo connection\n    if(self.mongo[m]) {\n      ret[m] = function() {\n        Array.prototype.unshift.call(arguments, name);\n        return OptimizedApply(self.mongo, self.mongo[m], arguments);\n      };\n    }\n  });\n\n  return ret;\n};\n\nhijackDBOps = function hijackDBOps() {\n  var mongoConnectionProto = MongoConnection.prototype;\n  //findOne is handled by find - so no need to track it\n  //upsert is handles by update\n  ['find', 'update', 'remove', 'insert', '_ensureIndex', '_dropIndex'].forEach(function(func) {\n    var originalFunc = mongoConnectionProto[func];\n    mongoConnectionProto[func] = function(collName, selector, mod, options) {\n      var payload = {\n        coll: collName,\n        func: func,\n      };\n\n      if(func == 'insert') {\n        //add nothing more to the payload\n      } else if(func == '_ensureIndex' || func == '_dropIndex') {\n        //add index\n        payload.index = JSON.stringify(selector);\n      } else if(func == 'update' && options && options.upsert) {\n        payload.func = 'upsert';\n        payload.selector = JSON.stringify(selector);\n      } else {\n        //all the other functions have selectors\n        payload.selector = JSON.stringify(selector);\n      }\n\n      var kadiraInfo = Kadira._getInfo();\n      if(kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n\n      //this cause V8 to avoid any performance optimizations, but this is must to use\n      //otherwise, if the error adds try catch block our logs get messy and didn't work\n      //see: issue #6\n      try{\n        var ret = originalFunc.apply(this, arguments);\n        //handling functions which can be triggered with an asyncCallback\n        var endOptions = {};\n\n        if(HaveAsyncCallback(arguments)) {\n          endOptions.async = true;\n        }\n\n        if(func == 'update') {\n          // upsert only returns an object when called `upsert` directly\n          // otherwise it only act an update command\n          if(options && options.upsert && typeof ret == 'object') {\n            endOptions.updatedDocs = ret.numberAffected;\n            endOptions.insertedId = ret.insertedId;\n          } else {\n            endOptions.updatedDocs = ret;\n          }\n        } else if(func == 'remove') {\n          endOptions.removedDocs = ret;\n        }\n\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n        }\n      } catch(ex) {\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n        }\n        throw ex;\n      }\n\n      return ret;\n    };\n  });\n\n  var cursorProto = MongoCursor.prototype;\n  ['forEach', 'map', 'fetch', 'count', 'observeChanges', 'observe', 'rewind'].forEach(function(type) {\n    var originalFunc = cursorProto[type];\n    cursorProto[type] = function() {\n      var cursorDescription = this._cursorDescription;\n      var payload = Object.assign(Object.create(null), {\n        coll: cursorDescription.collectionName,\n        selector: JSON.stringify(cursorDescription.selector),\n        func: type,\n        cursor: true\n      });\n\n      if(cursorDescription.options) {\n        var cursorOptions = _.pick(cursorDescription.options, ['fields', 'sort', 'limit']);\n        for(var field in cursorOptions) {\n          var value = cursorOptions[field]\n          if(typeof value == 'object') {\n            value = JSON.stringify(value);\n          }\n          payload[field] = value;\n        }\n      };\n\n      var kadiraInfo = Kadira._getInfo();\n      if(kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n\n      try{\n        var ret = originalFunc.apply(this, arguments);\n\n        var endData = {};\n        if(type == 'observeChanges' || type == 'observe') {\n          var observerDriver;\n          endData.oplog = false;\n          // get data written by the multiplexer\n          endData.wasMultiplexerReady = ret._wasMultiplexerReady;\n          endData.queueLength = ret._queueLength;\n          endData.elapsedPollingTime = ret._elapsedPollingTime;\n\n          if(ret._multiplexer) {\n            // older meteor versions done not have an _multiplexer value\n            observerDriver = ret._multiplexer._observeDriver;\n            if(observerDriver) {\n              observerDriver = ret._multiplexer._observeDriver;\n              var observerDriverClass = observerDriver.constructor;\n              var usesOplog = typeof observerDriverClass.cursorSupported == 'function';\n              endData.oplog = usesOplog;\n              var size = 0;\n              ret._multiplexer._cache.docs.forEach(function() {size++});\n              endData.noOfCachedDocs = size;\n\n              // if multiplexerWasNotReady, we need to get the time spend for the polling\n              if(!ret._wasMultiplexerReady) {\n                endData.initialPollingTime = observerDriver._lastPollTime;\n              }\n            }\n          }\n\n          if(!endData.oplog) {\n            // let's try to find the reason\n            var reasonInfo = Kadira.checkWhyNoOplog(cursorDescription, observerDriver);\n            endData.noOplogCode = reasonInfo.code;\n            endData.noOplogReason = reasonInfo.reason;\n            endData.noOplogSolution = reasonInfo.solution;\n          }\n        } else if(type == 'fetch' || type == 'map'){\n          //for other cursor operation\n\n          endData.docsFetched = ret.length;\n\n          if(type == 'fetch') {\n            var coll = cursorDescription.collectionName;\n            var query = cursorDescription.selector;\n            var opts = cursorDescription.options;\n            var docSize = Kadira.docSzCache.getSize(coll, query, opts, ret) * ret.length;\n            endData.docSize = docSize;\n\n            if(kadiraInfo) {\n              if(kadiraInfo.trace.type === 'method') {\n                Kadira.models.methods.trackDocSize(kadiraInfo.trace.name, docSize);\n              } else if(kadiraInfo.trace.type === 'sub') {\n                Kadira.models.pubsub.trackDocSize(kadiraInfo.trace.name, \"cursorFetches\", docSize);\n              }\n            } else {\n              // Fetch with no kadira info are tracked as from a null method\n              Kadira.models.methods.trackDocSize(\"<not-a-method-or-a-pub>\", docSize);\n            }\n\n            // TODO: Add doc size tracking to `map` as well.\n          }\n        }\n\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endData);\n        }\n        return ret;\n      } catch(ex) {\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n        }\n        throw ex;\n      }\n    };\n  });\n};\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"5c8cf336bec3495f4d7f673f2249923a48655dc1"}
