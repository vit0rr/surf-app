{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/mdg:meteor-apm-agent/lib/hijack/wrap_subscription.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/mdg:meteor-apm-agent/lib/hijack/wrap_subscription.js","filename":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/mdg:meteor-apm-agent/lib/hijack/wrap_subscription.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/client/styles","root":"/Users/nicholas/Desktop/projects/local-legends/client/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/client/styles/packages/mdg:meteor-apm-agent/lib/hijack/wrap_subscription.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mdg:meteor-apm-agent/lib/hijack/wrap_subscription.js"}},"code":"var Fiber = Npm.require('fibers');\nwrapSubscription = function (subscriptionProto) {\n  // If the ready event runs outside the Fiber, Kadira._getInfo() doesn't work.\n  // we need some other way to store kadiraInfo so we can use it at ready hijack.\n  var originalRunHandler = subscriptionProto._runHandler;\n  subscriptionProto._runHandler = function () {\n    var kadiraInfo = Kadira._getInfo();\n    if (kadiraInfo) {\n      this.__kadiraInfo = kadiraInfo;\n    }\n    ;\n    originalRunHandler.call(this);\n  };\n  var originalReady = subscriptionProto.ready;\n  subscriptionProto.ready = function () {\n    // meteor has a field called `_ready` which tracks this\n    // but we need to make it future proof\n    if (!this._apmReadyTracked) {\n      var kadiraInfo = Kadira._getInfo() || this.__kadiraInfo;\n      delete this.__kadiraInfo;\n      //sometime .ready can be called in the context of the method\n      //then we have some problems, that's why we are checking this\n      //eg:- Accounts.createUser\n      if (kadiraInfo && this._subscriptionId == kadiraInfo.trace.id) {\n        Kadira.tracer.endLastEvent(kadiraInfo.trace);\n        Kadira.tracer.event(kadiraInfo.trace, 'complete');\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n      }\n      Kadira.EventBus.emit('pubsub', 'subCompleted', trace, this._session, this);\n      Kadira.models.pubsub._trackReady(this._session, this, trace);\n      this._apmReadyTracked = true;\n    }\n\n    // we still pass the control to the original implementation\n    // since multiple ready calls are handled by itself\n    originalReady.call(this);\n  };\n  var originalError = subscriptionProto.error;\n  subscriptionProto.error = function (err) {\n    if (err) {\n      var kadiraInfo = Kadira._getInfo();\n      if (kadiraInfo && this._subscriptionId == kadiraInfo.trace.id) {\n        Kadira.tracer.endLastEvent(kadiraInfo.trace);\n        var errorForApm = _.pick(err, 'message', 'stack');\n        Kadira.tracer.event(kadiraInfo.trace, 'error', {\n          error: errorForApm\n        });\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n        Kadira.models.pubsub._trackError(this._session, this, trace);\n\n        // error tracking can be disabled and if there is a trace\n        // trace should be avaialble all the time, but it won't\n        // if something wrong happened on the trace building\n        if (Kadira.options.enableErrorTracking && trace) {\n          Kadira.models.error.trackError(err, trace);\n        }\n      }\n\n      // wrap error stack so Meteor._debug can identify and ignore it\n      if (Kadira.options.enableErrorTracking) {\n        err.stack = {\n          stack: err.stack,\n          source: \"subscription\"\n        };\n      }\n      originalError.call(this, err);\n    }\n  };\n  var originalDeactivate = subscriptionProto._deactivate;\n  subscriptionProto._deactivate = function () {\n    Kadira.EventBus.emit('pubsub', 'subDeactivated', this._session, this);\n    Kadira.models.pubsub._trackUnsub(this._session, this);\n    originalDeactivate.call(this);\n  };\n\n  //adding the currenSub env variable\n  ['added', 'changed', 'removed'].forEach(function (funcName) {\n    var originalFunc = subscriptionProto[funcName];\n    subscriptionProto[funcName] = function (collectionName, id, fields) {\n      var self = this;\n\n      // we need to run this code in a fiber and that's how we track\n      // subscription info. May be we can figure out, some other way to do this\n      // We use this currently to get the publication info when tracking message\n      // sizes at wrap_ddp_stringify.js\n      Kadira.env.currentSub = self;\n      var res = originalFunc.call(self, collectionName, id, fields);\n      Kadira.env.currentSub = null;\n      return res;\n    };\n  });\n};","map":{"version":3,"names":["Fiber","Npm","require","wrapSubscription","subscriptionProto","originalRunHandler","_runHandler","kadiraInfo","Kadira","_getInfo","__kadiraInfo","call","originalReady","ready","_apmReadyTracked","_subscriptionId","trace","id","tracer","endLastEvent","event","buildTrace","EventBus","emit","_session","models","pubsub","_trackReady","originalError","error","err","errorForApm","_","pick","_trackError","options","enableErrorTracking","trackError","stack","source","originalDeactivate","_deactivate","_trackUnsub","forEach","funcName","originalFunc","collectionName","fields","self","env","currentSub","res"],"sources":["packages/mdg:meteor-apm-agent/lib/hijack/wrap_subscription.js"],"sourcesContent":["var Fiber = Npm.require('fibers');\n\nwrapSubscription = function(subscriptionProto) {\n  // If the ready event runs outside the Fiber, Kadira._getInfo() doesn't work.\n  // we need some other way to store kadiraInfo so we can use it at ready hijack.\n  var originalRunHandler = subscriptionProto._runHandler;\n  subscriptionProto._runHandler = function() {\n    var kadiraInfo = Kadira._getInfo();\n    if (kadiraInfo) {\n      this.__kadiraInfo = kadiraInfo;\n    };\n    originalRunHandler.call(this);\n  }\n\n  var originalReady = subscriptionProto.ready;\n  subscriptionProto.ready = function() {\n    // meteor has a field called `_ready` which tracks this\n    // but we need to make it future proof\n    if(!this._apmReadyTracked) {\n      var kadiraInfo = Kadira._getInfo() || this.__kadiraInfo;\n      delete this.__kadiraInfo;\n      //sometime .ready can be called in the context of the method\n      //then we have some problems, that's why we are checking this\n      //eg:- Accounts.createUser\n      if(kadiraInfo && this._subscriptionId == kadiraInfo.trace.id) {\n        Kadira.tracer.endLastEvent(kadiraInfo.trace);\n        Kadira.tracer.event(kadiraInfo.trace, 'complete');\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n      }\n\n      Kadira.EventBus.emit('pubsub', 'subCompleted', trace, this._session, this);\n      Kadira.models.pubsub._trackReady(this._session, this, trace);\n      this._apmReadyTracked = true;\n    }\n\n    // we still pass the control to the original implementation\n    // since multiple ready calls are handled by itself\n    originalReady.call(this);\n  };\n\n  var originalError = subscriptionProto.error;\n  subscriptionProto.error = function(err) {\n    if (err) {\n      var kadiraInfo = Kadira._getInfo();\n\n      if(kadiraInfo && this._subscriptionId == kadiraInfo.trace.id) {\n        Kadira.tracer.endLastEvent(kadiraInfo.trace);\n\n        var errorForApm = _.pick(err, 'message', 'stack');\n        Kadira.tracer.event(kadiraInfo.trace, 'error', {error: errorForApm});\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n\n        Kadira.models.pubsub._trackError(this._session, this, trace);\n\n        // error tracking can be disabled and if there is a trace\n        // trace should be avaialble all the time, but it won't\n        // if something wrong happened on the trace building\n        if(Kadira.options.enableErrorTracking && trace) {\n          Kadira.models.error.trackError(err, trace);\n        }\n      }\n\n      // wrap error stack so Meteor._debug can identify and ignore it\n      if (Kadira.options.enableErrorTracking) {\n        err.stack = { stack: err.stack, source: \"subscription\" };\n      }\n      originalError.call(this, err);\n    }\n  };\n\n  var originalDeactivate = subscriptionProto._deactivate;\n  subscriptionProto._deactivate = function() {\n    Kadira.EventBus.emit('pubsub', 'subDeactivated', this._session, this);\n    Kadira.models.pubsub._trackUnsub(this._session, this);\n    originalDeactivate.call(this);\n  };\n\n  //adding the currenSub env variable\n  ['added', 'changed', 'removed'].forEach(function(funcName) {\n    var originalFunc = subscriptionProto[funcName];\n    subscriptionProto[funcName] = function(collectionName, id, fields) {\n      var self = this;\n\n      // we need to run this code in a fiber and that's how we track\n      // subscription info. May be we can figure out, some other way to do this\n      // We use this currently to get the publication info when tracking message\n      // sizes at wrap_ddp_stringify.js\n      Kadira.env.currentSub = self;\n      var res = originalFunc.call(self, collectionName, id, fields);\n      Kadira.env.currentSub = null;\n\n      return res;\n    };\n  });\n};\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"9d63bb7e733964e6b168f0622d22ab6b8335121b"}
