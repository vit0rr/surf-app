{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/ddp-server/writefence.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/ddp-server/writefence.js","filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/ddp-server/writefence.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/styles","root":"/Users/nicholas/Desktop/projects/local-legends/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/ddp-server/writefence.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-server/writefence.js"}},"code":"var Future = Npm.require('fibers/future');\n\n// A write fence collects a group of writes, and provides a callback\n// when all of the writes are fully committed and propagated (all\n// observers have been notified of the write and acknowledged it.)\n//\nDDPServer._WriteFence = function () {\n  var self = this;\n  self.armed = false;\n  self.fired = false;\n  self.retired = false;\n  self.outstanding_writes = 0;\n  self.before_fire_callbacks = [];\n  self.completion_callbacks = [];\n};\n\n// The current write fence. When there is a current write fence, code\n// that writes to databases should register their writes with it using\n// beginWrite().\n//\nDDPServer._CurrentWriteFence = new Meteor.EnvironmentVariable();\n_.extend(DDPServer._WriteFence.prototype, {\n  // Start tracking a write, and return an object to represent it. The\n  // object has a single method, committed(). This method should be\n  // called when the write is fully committed and propagated. You can\n  // continue to add writes to the WriteFence up until it is triggered\n  // (calls its callbacks because all writes have committed.)\n  beginWrite: function () {\n    var self = this;\n    if (self.retired) return {\n      committed: function () {}\n    };\n    if (self.fired) throw new Error(\"fence has already activated -- too late to add writes\");\n    self.outstanding_writes++;\n    var committed = false;\n    return {\n      committed: function () {\n        if (committed) throw new Error(\"committed called twice on the same write\");\n        committed = true;\n        self.outstanding_writes--;\n        self._maybeFire();\n      }\n    };\n  },\n  // Arm the fence. Once the fence is armed, and there are no more\n  // uncommitted writes, it will activate.\n  arm: function () {\n    var self = this;\n    if (self === DDPServer._CurrentWriteFence.get()) throw Error(\"Can't arm the current fence\");\n    self.armed = true;\n    self._maybeFire();\n  },\n  // Register a function to be called once before firing the fence.\n  // Callback function can add new writes to the fence, in which case\n  // it won't fire until those writes are done as well.\n  onBeforeFire: function (func) {\n    var self = this;\n    if (self.fired) throw new Error(\"fence has already activated -- too late to \" + \"add a callback\");\n    self.before_fire_callbacks.push(func);\n  },\n  // Register a function to be called when the fence fires.\n  onAllCommitted: function (func) {\n    var self = this;\n    if (self.fired) throw new Error(\"fence has already activated -- too late to \" + \"add a callback\");\n    self.completion_callbacks.push(func);\n  },\n  // Convenience function. Arms the fence, then blocks until it fires.\n  armAndWait: function () {\n    var self = this;\n    var future = new Future();\n    self.onAllCommitted(function () {\n      future['return']();\n    });\n    self.arm();\n    future.wait();\n  },\n  _maybeFire: function () {\n    var self = this;\n    if (self.fired) throw new Error(\"write fence already activated?\");\n    if (self.armed && !self.outstanding_writes) {\n      function invokeCallback(func) {\n        try {\n          func(self);\n        } catch (err) {\n          Meteor._debug(\"exception in write fence callback\", err);\n        }\n      }\n      self.outstanding_writes++;\n      while (self.before_fire_callbacks.length > 0) {\n        var callbacks = self.before_fire_callbacks;\n        self.before_fire_callbacks = [];\n        _.each(callbacks, invokeCallback);\n      }\n      self.outstanding_writes--;\n      if (!self.outstanding_writes) {\n        self.fired = true;\n        var callbacks = self.completion_callbacks;\n        self.completion_callbacks = [];\n        _.each(callbacks, invokeCallback);\n      }\n    }\n  },\n  // Deactivate this fence so that adding more writes has no effect.\n  // The fence must have already fired.\n  retire: function () {\n    var self = this;\n    if (!self.fired) throw new Error(\"Can't retire a fence that hasn't fired.\");\n    self.retired = true;\n  }\n});","map":{"version":3,"names":["Future","Npm","require","DDPServer","_WriteFence","self","armed","fired","retired","outstanding_writes","before_fire_callbacks","completion_callbacks","_CurrentWriteFence","Meteor","EnvironmentVariable","_","extend","prototype","beginWrite","committed","Error","_maybeFire","arm","get","onBeforeFire","func","push","onAllCommitted","armAndWait","future","wait","invokeCallback","err","_debug","length","callbacks","each","retire"],"sources":["packages/ddp-server/writefence.js"],"sourcesContent":["var Future = Npm.require('fibers/future');\n\n// A write fence collects a group of writes, and provides a callback\n// when all of the writes are fully committed and propagated (all\n// observers have been notified of the write and acknowledged it.)\n//\nDDPServer._WriteFence = function () {\n  var self = this;\n\n  self.armed = false;\n  self.fired = false;\n  self.retired = false;\n  self.outstanding_writes = 0;\n  self.before_fire_callbacks = [];\n  self.completion_callbacks = [];\n};\n\n// The current write fence. When there is a current write fence, code\n// that writes to databases should register their writes with it using\n// beginWrite().\n//\nDDPServer._CurrentWriteFence = new Meteor.EnvironmentVariable;\n\n_.extend(DDPServer._WriteFence.prototype, {\n  // Start tracking a write, and return an object to represent it. The\n  // object has a single method, committed(). This method should be\n  // called when the write is fully committed and propagated. You can\n  // continue to add writes to the WriteFence up until it is triggered\n  // (calls its callbacks because all writes have committed.)\n  beginWrite: function () {\n    var self = this;\n\n    if (self.retired)\n      return { committed: function () {} };\n\n    if (self.fired)\n      throw new Error(\"fence has already activated -- too late to add writes\");\n\n    self.outstanding_writes++;\n    var committed = false;\n    return {\n      committed: function () {\n        if (committed)\n          throw new Error(\"committed called twice on the same write\");\n        committed = true;\n        self.outstanding_writes--;\n        self._maybeFire();\n      }\n    };\n  },\n\n  // Arm the fence. Once the fence is armed, and there are no more\n  // uncommitted writes, it will activate.\n  arm: function () {\n    var self = this;\n    if (self === DDPServer._CurrentWriteFence.get())\n      throw Error(\"Can't arm the current fence\");\n    self.armed = true;\n    self._maybeFire();\n  },\n\n  // Register a function to be called once before firing the fence.\n  // Callback function can add new writes to the fence, in which case\n  // it won't fire until those writes are done as well.\n  onBeforeFire: function (func) {\n    var self = this;\n    if (self.fired)\n      throw new Error(\"fence has already activated -- too late to \" +\n                      \"add a callback\");\n    self.before_fire_callbacks.push(func);\n  },\n\n  // Register a function to be called when the fence fires.\n  onAllCommitted: function (func) {\n    var self = this;\n    if (self.fired)\n      throw new Error(\"fence has already activated -- too late to \" +\n                      \"add a callback\");\n    self.completion_callbacks.push(func);\n  },\n\n  // Convenience function. Arms the fence, then blocks until it fires.\n  armAndWait: function () {\n    var self = this;\n    var future = new Future;\n    self.onAllCommitted(function () {\n      future['return']();\n    });\n    self.arm();\n    future.wait();\n  },\n\n  _maybeFire: function () {\n    var self = this;\n    if (self.fired)\n      throw new Error(\"write fence already activated?\");\n    if (self.armed && !self.outstanding_writes) {\n      function invokeCallback (func) {\n        try {\n          func(self);\n        } catch (err) {\n          Meteor._debug(\"exception in write fence callback\", err);\n        }\n      }\n\n      self.outstanding_writes++;\n      while (self.before_fire_callbacks.length > 0) {\n        var callbacks = self.before_fire_callbacks;\n        self.before_fire_callbacks = [];\n        _.each(callbacks, invokeCallback);\n      }\n      self.outstanding_writes--;\n\n      if (!self.outstanding_writes) {\n        self.fired = true;\n        var callbacks = self.completion_callbacks;\n        self.completion_callbacks = [];\n        _.each(callbacks, invokeCallback);\n      }\n    }\n  },\n\n  // Deactivate this fence so that adding more writes has no effect.\n  // The fence must have already fired.\n  retire: function () {\n    var self = this;\n    if (! self.fired)\n      throw new Error(\"Can't retire a fence that hasn't fired.\");\n    self.retired = true;\n  }\n});\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"8ea9bb3b094e7042c25c8984c4245d2ea056aee4"}
