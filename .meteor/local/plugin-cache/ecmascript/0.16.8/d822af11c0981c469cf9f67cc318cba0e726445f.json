{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/socket-stream-client/browser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/socket-stream-client/browser.js","filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/socket-stream-client/browser.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/nicholas/Desktop/projects/local-legends/styles","root":"/Users/nicholas/Desktop/projects/local-legends/styles","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/nicholas/Desktop/projects/local-legends/styles/packages/socket-stream-client/browser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/browser.js"}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  ClientStream: () => ClientStream\n});\nlet toSockjsUrl, toWebsocketUrl;\nmodule.link(\"./urls.js\", {\n  toSockjsUrl(v) {\n    toSockjsUrl = v;\n  },\n  toWebsocketUrl(v) {\n    toWebsocketUrl = v;\n  }\n}, 0);\nlet StreamClientCommon;\nmodule.link(\"./common.js\", {\n  StreamClientCommon(v) {\n    StreamClientCommon = v;\n  }\n}, 1);\nlet SockJS;\nmodule.link(\"./sockjs-1.6.1-min-.js\", {\n  default(v) {\n    SockJS = v;\n  }\n}, 2);\nclass ClientStream extends StreamClientCommon {\n  // @param url {String} URL to Meteor app\n  //   \"http://subdomain.meteor.com/\" or \"/\" or\n  //   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n  constructor(url, options) {\n    super(options);\n    this._initCommon(this.options);\n\n    //// Constants\n\n    // how long between hearing heartbeat from the server until we declare\n    // the connection dead. heartbeats come every 45s (stream_server.js)\n    //\n    // NOTE: this is a older timeout mechanism. We now send heartbeats at\n    // the DDP level (https://github.com/meteor/meteor/pull/1865), and\n    // expect those timeouts to kill a non-responsive connection before\n    // this timeout fires. This is kept around for compatibility (when\n    // talking to a server that doesn't support DDP heartbeats) and can be\n    // removed later.\n    this.HEARTBEAT_TIMEOUT = 100 * 1000;\n    this.rawUrl = url;\n    this.socket = null;\n    this.lastError = null;\n    this.heartbeatTimer = null;\n\n    // Listen to global 'online' event if we are running in a browser.\n    window.addEventListener('online', this._online.bind(this), false /* useCapture */);\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.socket.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.rawUrl = url;\n  }\n  _connected() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n    if (this.currentStatus.connected) {\n      // already connected. do nothing. this probably shouldn't happen.\n      return;\n    }\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n  _cleanup(maybeError) {\n    this._clearConnectionAndHeartbeatTimers();\n    if (this.socket) {\n      this.socket.onmessage = this.socket.onclose = this.socket.onerror = this.socket.onheartbeat = () => {};\n      this.socket.close();\n      this.socket = null;\n    }\n    this.forEachCallback('disconnect', callback => {\n      callback(maybeError);\n    });\n  }\n  _clearConnectionAndHeartbeatTimers() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n    if (this.heartbeatTimer) {\n      clearTimeout(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n  _heartbeat_timeout() {\n    console.log('Connection timeout. No sockjs heartbeat received.');\n    this._lostConnection(new this.ConnectionError(\"Heartbeat timed out\"));\n  }\n  _heartbeat_received() {\n    // If we've already permanently shut down this stream, the timeout is\n    // already cleared, and we don't need to set it again.\n    if (this._forcedToDisconnect) return;\n    if (this.heartbeatTimer) clearTimeout(this.heartbeatTimer);\n    this.heartbeatTimer = setTimeout(this._heartbeat_timeout.bind(this), this.HEARTBEAT_TIMEOUT);\n  }\n  _sockjsProtocolsWhitelist() {\n    // only allow polling protocols. no streaming.  streaming\n    // makes safari spin.\n    var protocolsWhitelist = ['xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling'];\n\n    // iOS 4 and 5 and below crash when using websockets over certain\n    // proxies. this seems to be resolved with iOS 6. eg\n    // https://github.com/LearnBoost/socket.io/issues/193#issuecomment-7308865.\n    //\n    // iOS <4 doesn't support websockets at all so sockjs will just\n    // immediately fall back to http\n    var noWebsockets = navigator && /iPhone|iPad|iPod/.test(navigator.userAgent) && /OS 4_|OS 5_/.test(navigator.userAgent);\n    if (!noWebsockets) protocolsWhitelist = ['websocket'].concat(protocolsWhitelist);\n    return protocolsWhitelist;\n  }\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    var options = _objectSpread({\n      transports: this._sockjsProtocolsWhitelist()\n    }, this.options._sockjsOptions);\n    const hasSockJS = typeof SockJS === \"function\";\n    const disableSockJS = __meteor_runtime_config__.DISABLE_SOCKJS;\n    this.socket = hasSockJS && !disableSockJS\n    // Convert raw URL to SockJS URL each time we open a connection, so\n    // that we can connect to random hostnames and get around browser\n    // per-host connection limits.\n    ? new SockJS(toSockjsUrl(this.rawUrl), undefined, options) : new WebSocket(toWebsocketUrl(this.rawUrl));\n    this.socket.onopen = data => {\n      this.lastError = null;\n      this._connected();\n    };\n    this.socket.onmessage = data => {\n      this.lastError = null;\n      this._heartbeat_received();\n      if (this.currentStatus.connected) {\n        this.forEachCallback('message', callback => {\n          callback(data.data);\n        });\n      }\n    };\n    this.socket.onclose = () => {\n      this._lostConnection();\n    };\n    this.socket.onerror = error => {\n      const {\n        lastError\n      } = this;\n      this.lastError = error;\n      if (lastError) return;\n      console.error('stream error', error, new Date().toDateString());\n    };\n    this.socket.onheartbeat = () => {\n      this.lastError = null;\n      this._heartbeat_received();\n    };\n    if (this.connectionTimer) clearTimeout(this.connectionTimer);\n    this.connectionTimer = setTimeout(() => {\n      this._lostConnection(new this.ConnectionError(\"DDP connection timed out\"));\n    }, this.CONNECT_TIMEOUT);\n  }\n}","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ClientStream","toSockjsUrl","toWebsocketUrl","StreamClientCommon","SockJS","constructor","url","options","_initCommon","HEARTBEAT_TIMEOUT","rawUrl","socket","lastError","heartbeatTimer","window","addEventListener","_online","bind","_launchConnection","send","data","currentStatus","connected","_changeUrl","_connected","connectionTimer","clearTimeout","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","_clearConnectionAndHeartbeatTimers","onmessage","onclose","onerror","onheartbeat","close","_heartbeat_timeout","console","log","_lostConnection","ConnectionError","_heartbeat_received","_forcedToDisconnect","setTimeout","_sockjsProtocolsWhitelist","protocolsWhitelist","noWebsockets","navigator","test","userAgent","concat","transports","_sockjsOptions","hasSockJS","disableSockJS","__meteor_runtime_config__","DISABLE_SOCKJS","undefined","WebSocket","onopen","error","Date","toDateString","CONNECT_TIMEOUT"],"sources":["packages/socket-stream-client/browser.js"],"sourcesContent":["import {\n  toSockjsUrl,\n  toWebsocketUrl,\n} from \"./urls.js\";\n\nimport { StreamClientCommon } from \"./common.js\";\n\n// Statically importing SockJS here will prevent native WebSocket usage\n// below (in favor of SockJS), but will ensure maximum compatibility for\n// clients stuck in unusual networking environments.\nimport SockJS from \"./sockjs-1.6.1-min-.js\";\n\nexport class ClientStream extends StreamClientCommon {\n  // @param url {String} URL to Meteor app\n  //   \"http://subdomain.meteor.com/\" or \"/\" or\n  //   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n  constructor(url, options) {\n    super(options);\n\n    this._initCommon(this.options);\n\n    //// Constants\n\n    // how long between hearing heartbeat from the server until we declare\n    // the connection dead. heartbeats come every 45s (stream_server.js)\n    //\n    // NOTE: this is a older timeout mechanism. We now send heartbeats at\n    // the DDP level (https://github.com/meteor/meteor/pull/1865), and\n    // expect those timeouts to kill a non-responsive connection before\n    // this timeout fires. This is kept around for compatibility (when\n    // talking to a server that doesn't support DDP heartbeats) and can be\n    // removed later.\n    this.HEARTBEAT_TIMEOUT = 100 * 1000;\n\n    this.rawUrl = url;\n    this.socket = null;\n    this.lastError = null;\n\n    this.heartbeatTimer = null;\n\n    // Listen to global 'online' event if we are running in a browser.\n    window.addEventListener(\n      'online',\n      this._online.bind(this),\n      false /* useCapture */\n    );\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.socket.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.rawUrl = url;\n  }\n\n  _connected() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n\n    if (this.currentStatus.connected) {\n      // already connected. do nothing. this probably shouldn't happen.\n      return;\n    }\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionAndHeartbeatTimers();\n    if (this.socket) {\n      this.socket.onmessage = this.socket.onclose = this.socket.onerror = this.socket.onheartbeat = () => {};\n      this.socket.close();\n      this.socket = null;\n    }\n\n    this.forEachCallback('disconnect', callback => {\n      callback(maybeError);\n    });\n  }\n\n  _clearConnectionAndHeartbeatTimers() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n    if (this.heartbeatTimer) {\n      clearTimeout(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  _heartbeat_timeout() {\n    console.log('Connection timeout. No sockjs heartbeat received.');\n    this._lostConnection(new this.ConnectionError(\"Heartbeat timed out\"));\n  }\n\n  _heartbeat_received() {\n    // If we've already permanently shut down this stream, the timeout is\n    // already cleared, and we don't need to set it again.\n    if (this._forcedToDisconnect) return;\n    if (this.heartbeatTimer) clearTimeout(this.heartbeatTimer);\n    this.heartbeatTimer = setTimeout(\n      this._heartbeat_timeout.bind(this),\n      this.HEARTBEAT_TIMEOUT\n    );\n  }\n\n  _sockjsProtocolsWhitelist() {\n    // only allow polling protocols. no streaming.  streaming\n    // makes safari spin.\n    var protocolsWhitelist = [\n      'xdr-polling',\n      'xhr-polling',\n      'iframe-xhr-polling',\n      'jsonp-polling'\n    ];\n\n    // iOS 4 and 5 and below crash when using websockets over certain\n    // proxies. this seems to be resolved with iOS 6. eg\n    // https://github.com/LearnBoost/socket.io/issues/193#issuecomment-7308865.\n    //\n    // iOS <4 doesn't support websockets at all so sockjs will just\n    // immediately fall back to http\n    var noWebsockets =\n      navigator &&\n      /iPhone|iPad|iPod/.test(navigator.userAgent) &&\n      /OS 4_|OS 5_/.test(navigator.userAgent);\n\n    if (!noWebsockets)\n      protocolsWhitelist = ['websocket'].concat(protocolsWhitelist);\n\n    return protocolsWhitelist;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    var options = {\n      transports: this._sockjsProtocolsWhitelist(),\n      ...this.options._sockjsOptions\n    };\n\n    const hasSockJS = typeof SockJS === \"function\";\n    const disableSockJS = __meteor_runtime_config__.DISABLE_SOCKJS;\n\n    this.socket = hasSockJS && !disableSockJS\n      // Convert raw URL to SockJS URL each time we open a connection, so\n      // that we can connect to random hostnames and get around browser\n      // per-host connection limits.\n      ? new SockJS(toSockjsUrl(this.rawUrl), undefined, options)\n      : new WebSocket(toWebsocketUrl(this.rawUrl));\n\n    this.socket.onopen = data => {\n      this.lastError = null;\n      this._connected();\n    };\n\n    this.socket.onmessage = data => {\n      this.lastError = null;\n      this._heartbeat_received();\n      if (this.currentStatus.connected) {\n        this.forEachCallback('message', callback => {\n          callback(data.data);\n        });\n      }\n    };\n\n    this.socket.onclose = () => {\n      this._lostConnection();\n    };\n\n    this.socket.onerror = error => {\n      const { lastError } = this;\n      this.lastError = error;\n      if (lastError) return;\n      console.error(\n        'stream error',\n        error,\n        new Date().toDateString()\n      );\n    };\n\n    this.socket.onheartbeat = () => {\n      this.lastError = null;\n      this._heartbeat_received();\n    };\n\n    if (this.connectionTimer) clearTimeout(this.connectionTimer);\n    this.connectionTimer = setTimeout(() => {\n      this._lostConnection(\n        new this.ConnectionError(\"DDP connection timed out\")\n      );\n    }, this.CONNECT_TIMEOUT);\n  }\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"d822af11c0981c469cf9f67cc318cba0e726445f"}
