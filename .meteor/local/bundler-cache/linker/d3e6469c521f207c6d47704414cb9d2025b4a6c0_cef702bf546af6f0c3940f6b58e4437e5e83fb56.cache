[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar Log = Package.logging.Log;\nvar _ = Package.underscore._;\nvar RoutePolicy = Package.routepolicy.RoutePolicy;\nvar Boilerplate = Package['boilerplate-generator'].Boilerplate;\nvar WebAppHashing = Package['webapp-hashing'].WebAppHashing;\nvar Hook = Package['callback-hook'].Hook;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar WebApp, WebAppInternals, main;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"webapp\":{\"webapp_server.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/webapp/webapp_server.js                                                                       //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\n!function (module1) {\n  let _objectSpread;\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n  }, 0);\n  module1.export({\n    WebApp: () => WebApp,\n    WebAppInternals: () => WebAppInternals\n  });\n  let assert;\n  module1.link(\"assert\", {\n    default(v) {\n      assert = v;\n    }\n  }, 0);\n  let readFileSync, chmodSync, chownSync;\n  module1.link(\"fs\", {\n    readFileSync(v) {\n      readFileSync = v;\n    },\n    chmodSync(v) {\n      chmodSync = v;\n    },\n    chownSync(v) {\n      chownSync = v;\n    }\n  }, 1);\n  let createServer;\n  module1.link(\"http\", {\n    createServer(v) {\n      createServer = v;\n    }\n  }, 2);\n  let userInfo;\n  module1.link(\"os\", {\n    userInfo(v) {\n      userInfo = v;\n    }\n  }, 3);\n  let pathJoin, pathDirname;\n  module1.link(\"path\", {\n    join(v) {\n      pathJoin = v;\n    },\n    dirname(v) {\n      pathDirname = v;\n    }\n  }, 4);\n  let parseUrl;\n  module1.link(\"url\", {\n    parse(v) {\n      parseUrl = v;\n    }\n  }, 5);\n  let createHash;\n  module1.link(\"crypto\", {\n    createHash(v) {\n      createHash = v;\n    }\n  }, 6);\n  let connect;\n  module1.link(\"./connect.js\", {\n    connect(v) {\n      connect = v;\n    }\n  }, 7);\n  let compress;\n  module1.link(\"compression\", {\n    default(v) {\n      compress = v;\n    }\n  }, 8);\n  let cookieParser;\n  module1.link(\"cookie-parser\", {\n    default(v) {\n      cookieParser = v;\n    }\n  }, 9);\n  let qs;\n  module1.link(\"qs\", {\n    default(v) {\n      qs = v;\n    }\n  }, 10);\n  let parseRequest;\n  module1.link(\"parseurl\", {\n    default(v) {\n      parseRequest = v;\n    }\n  }, 11);\n  let basicAuth;\n  module1.link(\"basic-auth-connect\", {\n    default(v) {\n      basicAuth = v;\n    }\n  }, 12);\n  let lookupUserAgent;\n  module1.link(\"useragent\", {\n    lookup(v) {\n      lookupUserAgent = v;\n    }\n  }, 13);\n  let isModern;\n  module1.link(\"meteor/modern-browsers\", {\n    isModern(v) {\n      isModern = v;\n    }\n  }, 14);\n  let send;\n  module1.link(\"send\", {\n    default(v) {\n      send = v;\n    }\n  }, 15);\n  let removeExistingSocketFile, registerSocketFileCleanup;\n  module1.link(\"./socket_file.js\", {\n    removeExistingSocketFile(v) {\n      removeExistingSocketFile = v;\n    },\n    registerSocketFileCleanup(v) {\n      registerSocketFileCleanup = v;\n    }\n  }, 16);\n  let cluster;\n  module1.link(\"cluster\", {\n    default(v) {\n      cluster = v;\n    }\n  }, 17);\n  let whomst;\n  module1.link(\"@vlasky/whomst\", {\n    default(v) {\n      whomst = v;\n    }\n  }, 18);\n  let onMessage;\n  module1.link(\"meteor/inter-process-messaging\", {\n    onMessage(v) {\n      onMessage = v;\n    }\n  }, 19);\n  var SHORT_SOCKET_TIMEOUT = 5 * 1000;\n  var LONG_SOCKET_TIMEOUT = 120 * 1000;\n  const WebApp = {};\n  const WebAppInternals = {};\n  const hasOwn = Object.prototype.hasOwnProperty;\n\n  // backwards compat to 2.0 of connect\n  connect.basicAuth = basicAuth;\n  WebAppInternals.NpmModules = {\n    connect: {\n      version: Npm.require('connect/package.json').version,\n      module: connect\n    }\n  };\n\n  // Though we might prefer to use web.browser (modern) as the default\n  // architecture, safety requires a more compatible defaultArch.\n  WebApp.defaultArch = 'web.browser.legacy';\n\n  // XXX maps archs to manifests\n  WebApp.clientPrograms = {};\n\n  // XXX maps archs to program path on filesystem\n  var archPath = {};\n  var bundledJsCssUrlRewriteHook = function (url) {\n    var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n    return bundledPrefix + url;\n  };\n  var sha1 = function (contents) {\n    var hash = createHash('sha1');\n    hash.update(contents);\n    return hash.digest('hex');\n  };\n  function shouldCompress(req, res) {\n    if (req.headers['x-no-compression']) {\n      // don't compress responses with this request header\n      return false;\n    }\n\n    // fallback to standard filter function\n    return compress.filter(req, res);\n  }\n\n  // #BrowserIdentification\n  //\n  // We have multiple places that want to identify the browser: the\n  // unsupported browser page, the appcache package, and, eventually\n  // delivering browser polyfills only as needed.\n  //\n  // To avoid detecting the browser in multiple places ad-hoc, we create a\n  // Meteor \"browser\" object. It uses but does not expose the npm\n  // useragent module (we could choose a different mechanism to identify\n  // the browser in the future if we wanted to).  The browser object\n  // contains\n  //\n  // * `name`: the name of the browser in camel case\n  // * `major`, `minor`, `patch`: integers describing the browser version\n  //\n  // Also here is an early version of a Meteor `request` object, intended\n  // to be a high-level description of the request without exposing\n  // details of connect's low-level `req`.  Currently it contains:\n  //\n  // * `browser`: browser identification object described above\n  // * `url`: parsed url, including parsed query params\n  //\n  // As a temporary hack there is a `categorizeRequest` function on WebApp which\n  // converts a connect `req` to a Meteor `request`. This can go away once smart\n  // packages such as appcache are being passed a `request` object directly when\n  // they serve content.\n  //\n  // This allows `request` to be used uniformly: it is passed to the html\n  // attributes hook, and the appcache package can use it when deciding\n  // whether to generate a 404 for the manifest.\n  //\n  // Real routing / server side rendering will probably refactor this\n  // heavily.\n\n  // e.g. \"Mobile Safari\" => \"mobileSafari\"\n  var camelCase = function (name) {\n    var parts = name.split(' ');\n    parts[0] = parts[0].toLowerCase();\n    for (var i = 1; i < parts.length; ++i) {\n      parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n    }\n    return parts.join('');\n  };\n  var identifyBrowser = function (userAgentString) {\n    var userAgent = lookupUserAgent(userAgentString);\n    return {\n      name: camelCase(userAgent.family),\n      major: +userAgent.major,\n      minor: +userAgent.minor,\n      patch: +userAgent.patch\n    };\n  };\n\n  // XXX Refactor as part of implementing real routing.\n  WebAppInternals.identifyBrowser = identifyBrowser;\n  WebApp.categorizeRequest = function (req) {\n    if (req.browser && req.arch && typeof req.modern === 'boolean') {\n      // Already categorized.\n      return req;\n    }\n    const browser = identifyBrowser(req.headers['user-agent']);\n    const modern = isModern(browser);\n    const path = typeof req.pathname === 'string' ? req.pathname : parseRequest(req).pathname;\n    const categorized = {\n      browser,\n      modern,\n      path,\n      arch: WebApp.defaultArch,\n      url: parseUrl(req.url, true),\n      dynamicHead: req.dynamicHead,\n      dynamicBody: req.dynamicBody,\n      headers: req.headers,\n      cookies: req.cookies\n    };\n    const pathParts = path.split('/');\n    const archKey = pathParts[1];\n    if (archKey.startsWith('__')) {\n      const archCleaned = 'web.' + archKey.slice(2);\n      if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n        pathParts.splice(1, 1); // Remove the archKey part.\n        return Object.assign(categorized, {\n          arch: archCleaned,\n          path: pathParts.join('/')\n        });\n      }\n    }\n\n    // TODO Perhaps one day we could infer Cordova clients here, so that we\n    // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n    const preferredArchOrder = isModern(browser) ? ['web.browser', 'web.browser.legacy'] : ['web.browser.legacy', 'web.browser'];\n    for (const arch of preferredArchOrder) {\n      // If our preferred arch is not available, it's better to use another\n      // client arch that is available than to guarantee the site won't work\n      // by returning an unknown arch. For example, if web.browser.legacy is\n      // excluded using the --exclude-archs command-line option, legacy\n      // clients are better off receiving web.browser (which might actually\n      // work) than receiving an HTTP 404 response. If none of the archs in\n      // preferredArchOrder are defined, only then should we send a 404.\n      if (hasOwn.call(WebApp.clientPrograms, arch)) {\n        return Object.assign(categorized, {\n          arch\n        });\n      }\n    }\n    return categorized;\n  };\n\n  // HTML attribute hooks: functions to be called to determine any attributes to\n  // be added to the '<html>' tag. Each function is passed a 'request' object (see\n  // #BrowserIdentification) and should return null or object.\n  var htmlAttributeHooks = [];\n  var getHtmlAttributes = function (request) {\n    var combinedAttributes = {};\n    _.each(htmlAttributeHooks || [], function (hook) {\n      var attributes = hook(request);\n      if (attributes === null) return;\n      if (typeof attributes !== 'object') throw Error('HTML attribute hook must return null or object');\n      _.extend(combinedAttributes, attributes);\n    });\n    return combinedAttributes;\n  };\n  WebApp.addHtmlAttributeHook = function (hook) {\n    htmlAttributeHooks.push(hook);\n  };\n\n  // Serve app HTML for this URL?\n  var appUrl = function (url) {\n    if (url === '/favicon.ico' || url === '/robots.txt') return false;\n\n    // NOTE: app.manifest is not a web standard like favicon.ico and\n    // robots.txt. It is a file name we have chosen to use for HTML5\n    // appcache URLs. It is included here to prevent using an appcache\n    // then removing it from poisoning an app permanently. Eventually,\n    // once we have server side routing, this won't be needed as\n    // unknown URLs with return a 404 automatically.\n    if (url === '/app.manifest') return false;\n\n    // Avoid serving app HTML for declared routes such as /sockjs/.\n    if (RoutePolicy.classify(url)) return false;\n\n    // we currently return app HTML on all URLs by default\n    return true;\n  };\n\n  // We need to calculate the client hash after all packages have loaded\n  // to give them a chance to populate __meteor_runtime_config__.\n  //\n  // Calculating the hash during startup means that packages can only\n  // populate __meteor_runtime_config__ during load, not during startup.\n  //\n  // Calculating instead it at the beginning of main after all startup\n  // hooks had run would allow packages to also populate\n  // __meteor_runtime_config__ during startup, but that's too late for\n  // autoupdate because it needs to have the client hash at startup to\n  // insert the auto update version itself into\n  // __meteor_runtime_config__ to get it to the client.\n  //\n  // An alternative would be to give autoupdate a \"post-start,\n  // pre-listen\" hook to allow it to insert the auto update version at\n  // the right moment.\n\n  Meteor.startup(function () {\n    function getter(key) {\n      return function (arch) {\n        arch = arch || WebApp.defaultArch;\n        const program = WebApp.clientPrograms[arch];\n        const value = program && program[key];\n        // If this is the first time we have calculated this hash,\n        // program[key] will be a thunk (lazy function with no parameters)\n        // that we should call to do the actual computation.\n        return typeof value === 'function' ? program[key] = value() : value;\n      };\n    }\n    WebApp.calculateClientHash = WebApp.clientHash = getter('version');\n    WebApp.calculateClientHashRefreshable = getter('versionRefreshable');\n    WebApp.calculateClientHashNonRefreshable = getter('versionNonRefreshable');\n    WebApp.calculateClientHashReplaceable = getter('versionReplaceable');\n    WebApp.getRefreshableAssets = getter('refreshableAssets');\n  });\n\n  // When we have a request pending, we want the socket timeout to be long, to\n  // give ourselves a while to serve it, and to allow sockjs long polls to\n  // complete.  On the other hand, we want to close idle sockets relatively\n  // quickly, so that we can shut down relatively promptly but cleanly, without\n  // cutting off anyone's response.\n  WebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n    // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n    req.setTimeout(LONG_SOCKET_TIMEOUT);\n    // Insert our new finish listener to run BEFORE the existing one which removes\n    // the response from the socket.\n    var finishListeners = res.listeners('finish');\n    // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n    // https://github.com/joyent/node/commit/7c9b6070\n    // But it has switched back to 'finish' in Node v4:\n    // https://github.com/nodejs/node/pull/1411\n    res.removeAllListeners('finish');\n    res.on('finish', function () {\n      res.setTimeout(SHORT_SOCKET_TIMEOUT);\n    });\n    _.each(finishListeners, function (l) {\n      res.on('finish', l);\n    });\n  };\n\n  // Will be updated by main before we listen.\n  // Map from client arch to boilerplate object.\n  // Boilerplate object has:\n  //   - func: XXX\n  //   - baseData: XXX\n  var boilerplateByArch = {};\n\n  // Register a callback function that can selectively modify boilerplate\n  // data given arguments (request, data, arch). The key should be a unique\n  // identifier, to prevent accumulating duplicate callbacks from the same\n  // call site over time. Callbacks will be called in the order they were\n  // registered. A callback should return false if it did not make any\n  // changes affecting the boilerplate. Passing null deletes the callback.\n  // Any previous callback registered for this key will be returned.\n  const boilerplateDataCallbacks = Object.create(null);\n  WebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n    const previousCallback = boilerplateDataCallbacks[key];\n    if (typeof callback === 'function') {\n      boilerplateDataCallbacks[key] = callback;\n    } else {\n      assert.strictEqual(callback, null);\n      delete boilerplateDataCallbacks[key];\n    }\n\n    // Return the previous callback in case the new callback needs to call\n    // it; for example, when the new callback is a wrapper for the old.\n    return previousCallback || null;\n  };\n\n  // Given a request (as returned from `categorizeRequest`), return the\n  // boilerplate HTML to serve for that request.\n  //\n  // If a previous connect middleware has rendered content for the head or body,\n  // returns the boilerplate with that content patched in otherwise\n  // memoizes on HTML attributes (used by, eg, appcache) and whether inline\n  // scripts are currently allowed.\n  // XXX so far this function is always called with arch === 'web.browser'\n  function getBoilerplate(request, arch) {\n    return getBoilerplateAsync(request, arch).await();\n  }\n\n  /**\n   * @summary Takes a runtime configuration object and\n   * returns an encoded runtime string.\n   * @locus Server\n   * @param {Object} rtimeConfig\n   * @returns {String}\n   */\n  WebApp.encodeRuntimeConfig = function (rtimeConfig) {\n    return JSON.stringify(encodeURIComponent(JSON.stringify(rtimeConfig)));\n  };\n\n  /**\n   * @summary Takes an encoded runtime string and returns\n   * a runtime configuration object.\n   * @locus Server\n   * @param {String} rtimeConfigString\n   * @returns {Object}\n   */\n  WebApp.decodeRuntimeConfig = function (rtimeConfigStr) {\n    return JSON.parse(decodeURIComponent(JSON.parse(rtimeConfigStr)));\n  };\n  const runtimeConfig = {\n    // hooks will contain the callback functions\n    // set by the caller to addRuntimeConfigHook\n    hooks: new Hook(),\n    // updateHooks will contain the callback functions\n    // set by the caller to addUpdatedNotifyHook\n    updateHooks: new Hook(),\n    // isUpdatedByArch is an object containing fields for each arch\n    // that this server supports.\n    // - Each field will be true when the server updates the runtimeConfig for that arch.\n    // - When the hook callback is called the update field in the callback object will be\n    // set to isUpdatedByArch[arch].\n    // = isUpdatedyByArch[arch] is reset to false after the callback.\n    // This enables the caller to cache data efficiently so they do not need to\n    // decode & update data on every callback when the runtimeConfig is not changing.\n    isUpdatedByArch: {}\n  };\n\n  /**\n   * @name addRuntimeConfigHookCallback(options)\n   * @locus Server\n   * @isprototype true\n   * @summary Callback for `addRuntimeConfigHook`.\n   *\n   * If the handler returns a _falsy_ value the hook will not\n   * modify the runtime configuration.\n   *\n   * If the handler returns a _String_ the hook will substitute\n   * the string for the encoded configuration string.\n   *\n   * **Warning:** the hook does not check the return value at all it is\n   * the responsibility of the caller to get the formatting correct using\n   * the helper functions.\n   *\n   * `addRuntimeConfigHookCallback` takes only one `Object` argument\n   * with the following fields:\n   * @param {Object} options\n   * @param {String} options.arch The architecture of the client\n   * requesting a new runtime configuration. This can be one of\n   * `web.browser`, `web.browser.legacy` or `web.cordova`.\n   * @param {Object} options.request\n   * A NodeJs [IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n   * https://nodejs.org/api/http.html#http_class_http_incomingmessage\n   * `Object` that can be used to get information about the incoming request.\n   * @param {String} options.encodedCurrentConfig The current configuration object\n   * encoded as a string for inclusion in the root html.\n   * @param {Boolean} options.updated `true` if the config for this architecture\n   * has been updated since last called, otherwise `false`. This flag can be used\n   * to cache the decoding/encoding for each architecture.\n   */\n\n  /**\n   * @summary Hook that calls back when the meteor runtime configuration,\n   * `__meteor_runtime_config__` is being sent to any client.\n   *\n   * **returns**: <small>_Object_</small> `{ stop: function, callback: function }`\n   * - `stop` <small>_Function_</small> Call `stop()` to stop getting callbacks.\n   * - `callback` <small>_Function_</small> The passed in `callback`.\n   * @locus Server\n   * @param {addRuntimeConfigHookCallback} callback\n   * See `addRuntimeConfigHookCallback` description.\n   * @returns {Object} {{ stop: function, callback: function }}\n   * Call the returned `stop()` to stop getting callbacks.\n   * The passed in `callback` is returned also.\n   */\n  WebApp.addRuntimeConfigHook = function (callback) {\n    return runtimeConfig.hooks.register(callback);\n  };\n  function getBoilerplateAsync(request, arch) {\n    let boilerplate = boilerplateByArch[arch];\n    runtimeConfig.hooks.forEach(hook => {\n      const meteorRuntimeConfig = hook({\n        arch,\n        request,\n        encodedCurrentConfig: boilerplate.baseData.meteorRuntimeConfig,\n        updated: runtimeConfig.isUpdatedByArch[arch]\n      });\n      if (!meteorRuntimeConfig) return true;\n      boilerplate.baseData = Object.assign({}, boilerplate.baseData, {\n        meteorRuntimeConfig\n      });\n      return true;\n    });\n    runtimeConfig.isUpdatedByArch[arch] = false;\n    const data = Object.assign({}, boilerplate.baseData, {\n      htmlAttributes: getHtmlAttributes(request)\n    }, _.pick(request, 'dynamicHead', 'dynamicBody'));\n    let madeChanges = false;\n    let promise = Promise.resolve();\n    Object.keys(boilerplateDataCallbacks).forEach(key => {\n      promise = promise.then(() => {\n        const callback = boilerplateDataCallbacks[key];\n        return callback(request, data, arch);\n      }).then(result => {\n        // Callbacks should return false if they did not make any changes.\n        if (result !== false) {\n          madeChanges = true;\n        }\n      });\n    });\n    return promise.then(() => ({\n      stream: boilerplate.toHTMLStream(data),\n      statusCode: data.statusCode,\n      headers: data.headers\n    }));\n  }\n\n  /**\n   * @name addUpdatedNotifyHookCallback(options)\n   * @summary callback handler for `addupdatedNotifyHook`\n   * @isprototype true\n   * @locus Server\n   * @param {Object} options\n   * @param {String} options.arch The architecture that is being updated.\n   * This can be one of `web.browser`, `web.browser.legacy` or `web.cordova`.\n   * @param {Object} options.manifest The new updated manifest object for\n   * this `arch`.\n   * @param {Object} options.runtimeConfig The new updated configuration\n   * object for this `arch`.\n   */\n\n  /**\n   * @summary Hook that runs when the meteor runtime configuration\n   * is updated.  Typically the configuration only changes during development mode.\n   * @locus Server\n   * @param {addUpdatedNotifyHookCallback} handler\n   * The `handler` is called on every change to an `arch` runtime configuration.\n   * See `addUpdatedNotifyHookCallback`.\n   * @returns {Object} {{ stop: function, callback: function }}\n   */\n  WebApp.addUpdatedNotifyHook = function (handler) {\n    return runtimeConfig.updateHooks.register(handler);\n  };\n  WebAppInternals.generateBoilerplateInstance = function (arch, manifest, additionalOptions) {\n    additionalOptions = additionalOptions || {};\n    runtimeConfig.isUpdatedByArch[arch] = true;\n    const rtimeConfig = _objectSpread(_objectSpread({}, __meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || {});\n    runtimeConfig.updateHooks.forEach(cb => {\n      cb({\n        arch,\n        manifest,\n        runtimeConfig: rtimeConfig\n      });\n      return true;\n    });\n    const meteorRuntimeConfig = JSON.stringify(encodeURIComponent(JSON.stringify(rtimeConfig)));\n    return new Boilerplate(arch, manifest, Object.assign({\n      pathMapper(itemPath) {\n        return pathJoin(archPath[arch], itemPath);\n      },\n      baseDataExtension: {\n        additionalStaticJs: _.map(additionalStaticJs || [], function (contents, pathname) {\n          return {\n            pathname: pathname,\n            contents: contents\n          };\n        }),\n        // Convert to a JSON string, then get rid of most weird characters, then\n        // wrap in double quotes. (The outermost JSON.stringify really ought to\n        // just be \"wrap in double quotes\" but we use it to be safe.) This might\n        // end up inside a <script> tag so we need to be careful to not include\n        // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n        // https://github.com/meteor/meteor/issues/3730\n        meteorRuntimeConfig,\n        meteorRuntimeHash: sha1(meteorRuntimeConfig),\n        rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n        bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n        sriMode: sriMode,\n        inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n        inline: additionalOptions.inline\n      }\n    }, additionalOptions));\n  };\n\n  // A mapping from url path to architecture (e.g. \"web.browser\") to static\n  // file information with the following fields:\n  // - type: the type of file to be served\n  // - cacheable: optionally, whether the file should be cached or not\n  // - sourceMapUrl: optionally, the url of the source map\n  //\n  // Info also contains one of the following:\n  // - content: the stringified content that should be served at this path\n  // - absolutePath: the absolute path on disk to the file\n\n  // Serve static files from the manifest or added with\n  // `addStaticJs`. Exported for tests.\n  WebAppInternals.staticFilesMiddleware = function (staticFilesByArch, req, res, next) {\n    return Promise.asyncApply(() => {\n      var _Meteor$settings$pack3, _Meteor$settings$pack4;\n      var pathname = parseRequest(req).pathname;\n      try {\n        pathname = decodeURIComponent(pathname);\n      } catch (e) {\n        next();\n        return;\n      }\n      var serveStaticJs = function (s) {\n        var _Meteor$settings$pack, _Meteor$settings$pack2;\n        if (req.method === 'GET' || req.method === 'HEAD' || (_Meteor$settings$pack = Meteor.settings.packages) !== null && _Meteor$settings$pack !== void 0 && (_Meteor$settings$pack2 = _Meteor$settings$pack.webapp) !== null && _Meteor$settings$pack2 !== void 0 && _Meteor$settings$pack2.alwaysReturnContent) {\n          res.writeHead(200, {\n            'Content-type': 'application/javascript; charset=UTF-8',\n            'Content-Length': Buffer.byteLength(s)\n          });\n          res.write(s);\n          res.end();\n        } else {\n          const status = req.method === 'OPTIONS' ? 200 : 405;\n          res.writeHead(status, {\n            Allow: 'OPTIONS, GET, HEAD',\n            'Content-Length': '0'\n          });\n          res.end();\n        }\n      };\n      if (_.has(additionalStaticJs, pathname) && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(additionalStaticJs[pathname]);\n        return;\n      }\n      const {\n        arch,\n        path\n      } = WebApp.categorizeRequest(req);\n      if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n        // We could come here in case we run with some architectures excluded\n        next();\n        return;\n      }\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      const program = WebApp.clientPrograms[arch];\n      Promise.await(program.paused);\n      if (path === '/meteor_runtime_config.js' && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(\"__meteor_runtime_config__ = \".concat(program.meteorRuntimeConfig, \";\"));\n        return;\n      }\n      const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n      if (!info) {\n        next();\n        return;\n      }\n      // \"send\" will handle HEAD & GET requests\n      if (req.method !== 'HEAD' && req.method !== 'GET' && !((_Meteor$settings$pack3 = Meteor.settings.packages) !== null && _Meteor$settings$pack3 !== void 0 && (_Meteor$settings$pack4 = _Meteor$settings$pack3.webapp) !== null && _Meteor$settings$pack4 !== void 0 && _Meteor$settings$pack4.alwaysReturnContent)) {\n        const status = req.method === 'OPTIONS' ? 200 : 405;\n        res.writeHead(status, {\n          Allow: 'OPTIONS, GET, HEAD',\n          'Content-Length': '0'\n        });\n        res.end();\n        return;\n      }\n\n      // We don't need to call pause because, unlike 'static', once we call into\n      // 'send' and yield to the event loop, we never call another handler with\n      // 'next'.\n\n      // Cacheable files are files that should never change. Typically\n      // named by their hash (eg meteor bundled js and css files).\n      // We cache them ~forever (1yr).\n      const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n      if (info.cacheable) {\n        // Since we use req.headers[\"user-agent\"] to determine whether the\n        // client should receive modern or legacy resources, tell the client\n        // to invalidate cached resources when/if its user agent string\n        // changes in the future.\n        res.setHeader('Vary', 'User-Agent');\n      }\n\n      // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n      // understand.  (The SourceMap header is slightly more spec-correct but FF\n      // doesn't understand it.)\n      //\n      // You may also need to enable source maps in Chrome: open dev tools, click\n      // the gear in the bottom right corner, and select \"enable source maps\".\n      if (info.sourceMapUrl) {\n        res.setHeader('X-SourceMap', __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl);\n      }\n      if (info.type === 'js' || info.type === 'dynamic js') {\n        res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n      } else if (info.type === 'css') {\n        res.setHeader('Content-Type', 'text/css; charset=UTF-8');\n      } else if (info.type === 'json') {\n        res.setHeader('Content-Type', 'application/json; charset=UTF-8');\n      }\n      if (info.hash) {\n        res.setHeader('ETag', '\"' + info.hash + '\"');\n      }\n      if (info.content) {\n        res.setHeader('Content-Length', Buffer.byteLength(info.content));\n        res.write(info.content);\n        res.end();\n      } else {\n        send(req, info.absolutePath, {\n          maxage: maxAge,\n          dotfiles: 'allow',\n          // if we specified a dotfile in the manifest, serve it\n          lastModified: false // don't set last-modified based on the file date\n        }).on('error', function (err) {\n          Log.error('Error serving static file ' + err);\n          res.writeHead(500);\n          res.end();\n        }).on('directory', function () {\n          Log.error('Unexpected directory ' + info.absolutePath);\n          res.writeHead(500);\n          res.end();\n        }).pipe(res);\n      }\n    });\n  };\n  function getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n    if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n      return null;\n    }\n\n    // Get a list of all available static file architectures, with arch\n    // first in the list if it exists.\n    const staticArchList = Object.keys(staticFilesByArch);\n    const archIndex = staticArchList.indexOf(arch);\n    if (archIndex > 0) {\n      staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n    }\n    let info = null;\n    staticArchList.some(arch => {\n      const staticFiles = staticFilesByArch[arch];\n      function finalize(path) {\n        info = staticFiles[path];\n        // Sometimes we register a lazy function instead of actual data in\n        // the staticFiles manifest.\n        if (typeof info === 'function') {\n          info = staticFiles[path] = info();\n        }\n        return info;\n      }\n\n      // If staticFiles contains originalPath with the arch inferred above,\n      // use that information.\n      if (hasOwn.call(staticFiles, originalPath)) {\n        return finalize(originalPath);\n      }\n\n      // If categorizeRequest returned an alternate path, try that instead.\n      if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n        return finalize(path);\n      }\n    });\n    return info;\n  }\n\n  // Parse the passed in port value. Return the port as-is if it's a String\n  // (e.g. a Windows Server style named pipe), otherwise return the port as an\n  // integer.\n  //\n  // DEPRECATED: Direct use of this function is not recommended; it is no\n  // longer used internally, and will be removed in a future release.\n  WebAppInternals.parsePort = port => {\n    let parsedPort = parseInt(port);\n    if (Number.isNaN(parsedPort)) {\n      parsedPort = port;\n    }\n    return parsedPort;\n  };\n  onMessage('webapp-pause-client', _ref => Promise.asyncApply(() => {\n    let {\n      arch\n    } = _ref;\n    WebAppInternals.pauseClient(arch);\n  }));\n  onMessage('webapp-reload-client', _ref2 => Promise.asyncApply(() => {\n    let {\n      arch\n    } = _ref2;\n    WebAppInternals.generateClientProgram(arch);\n  }));\n  function runWebAppServer() {\n    var shuttingDown = false;\n    var syncQueue = new Meteor._SynchronousQueue();\n    var getItemPathname = function (itemUrl) {\n      return decodeURIComponent(parseUrl(itemUrl).pathname);\n    };\n    WebAppInternals.reloadClientPrograms = function () {\n      syncQueue.runTask(function () {\n        const staticFilesByArch = Object.create(null);\n        const {\n          configJson\n        } = __meteor_bootstrap__;\n        const clientArchs = configJson.clientArchs || Object.keys(configJson.clientPaths);\n        try {\n          clientArchs.forEach(arch => {\n            generateClientProgram(arch, staticFilesByArch);\n          });\n          WebAppInternals.staticFilesByArch = staticFilesByArch;\n        } catch (e) {\n          Log.error('Error reloading the client program: ' + e.stack);\n          process.exit(1);\n        }\n      });\n    };\n\n    // Pause any incoming requests and make them wait for the program to be\n    // unpaused the next time generateClientProgram(arch) is called.\n    WebAppInternals.pauseClient = function (arch) {\n      syncQueue.runTask(() => {\n        const program = WebApp.clientPrograms[arch];\n        const {\n          unpause\n        } = program;\n        program.paused = new Promise(resolve => {\n          if (typeof unpause === 'function') {\n            // If there happens to be an existing program.unpause function,\n            // compose it with the resolve function.\n            program.unpause = function () {\n              unpause();\n              resolve();\n            };\n          } else {\n            program.unpause = resolve;\n          }\n        });\n      });\n    };\n    WebAppInternals.generateClientProgram = function (arch) {\n      syncQueue.runTask(() => generateClientProgram(arch));\n    };\n    function generateClientProgram(arch) {\n      let staticFilesByArch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebAppInternals.staticFilesByArch;\n      const clientDir = pathJoin(pathDirname(__meteor_bootstrap__.serverDir), arch);\n\n      // read the control for the client we'll be serving up\n      const programJsonPath = pathJoin(clientDir, 'program.json');\n      let programJson;\n      try {\n        programJson = JSON.parse(readFileSync(programJsonPath));\n      } catch (e) {\n        if (e.code === 'ENOENT') return;\n        throw e;\n      }\n      if (programJson.format !== 'web-program-pre1') {\n        throw new Error('Unsupported format for client assets: ' + JSON.stringify(programJson.format));\n      }\n      if (!programJsonPath || !clientDir || !programJson) {\n        throw new Error('Client config file not parsed.');\n      }\n      archPath[arch] = clientDir;\n      const staticFiles = staticFilesByArch[arch] = Object.create(null);\n      const {\n        manifest\n      } = programJson;\n      manifest.forEach(item => {\n        if (item.url && item.where === 'client') {\n          staticFiles[getItemPathname(item.url)] = {\n            absolutePath: pathJoin(clientDir, item.path),\n            cacheable: item.cacheable,\n            hash: item.hash,\n            // Link from source to its map\n            sourceMapUrl: item.sourceMapUrl,\n            type: item.type\n          };\n          if (item.sourceMap) {\n            // Serve the source map too, under the specified URL. We assume\n            // all source maps are cacheable.\n            staticFiles[getItemPathname(item.sourceMapUrl)] = {\n              absolutePath: pathJoin(clientDir, item.sourceMap),\n              cacheable: true\n            };\n          }\n        }\n      });\n      const {\n        PUBLIC_SETTINGS\n      } = __meteor_runtime_config__;\n      const configOverrides = {\n        PUBLIC_SETTINGS\n      };\n      const oldProgram = WebApp.clientPrograms[arch];\n      const newProgram = WebApp.clientPrograms[arch] = {\n        format: 'web-program-pre1',\n        manifest: manifest,\n        // Use arrow functions so that these versions can be lazily\n        // calculated later, and so that they will not be included in the\n        // staticFiles[manifestUrl].content string below.\n        //\n        // Note: these version calculations must be kept in agreement with\n        // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n        // code push will reload Cordova apps unnecessarily.\n        version: () => WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n        versionRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type === 'css', configOverrides),\n        versionNonRefreshable: () => WebAppHashing.calculateClientHash(manifest, (type, replaceable) => type !== 'css' && !replaceable, configOverrides),\n        versionReplaceable: () => WebAppHashing.calculateClientHash(manifest, (_type, replaceable) => replaceable, configOverrides),\n        cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n        PUBLIC_SETTINGS,\n        hmrVersion: programJson.hmrVersion\n      };\n\n      // Expose program details as a string reachable via the following URL.\n      const manifestUrlPrefix = '/__' + arch.replace(/^web\\./, '');\n      const manifestUrl = manifestUrlPrefix + getItemPathname('/manifest.json');\n      staticFiles[manifestUrl] = () => {\n        if (Package.autoupdate) {\n          const {\n            AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion\n          } = process.env;\n          if (AUTOUPDATE_VERSION) {\n            newProgram.version = AUTOUPDATE_VERSION;\n          }\n        }\n        if (typeof newProgram.version === 'function') {\n          newProgram.version = newProgram.version();\n        }\n        return {\n          content: JSON.stringify(newProgram),\n          cacheable: false,\n          hash: newProgram.version,\n          type: 'json'\n        };\n      };\n      generateBoilerplateForArch(arch);\n\n      // If there are any requests waiting on oldProgram.paused, let them\n      // continue now (using the new program).\n      if (oldProgram && oldProgram.paused) {\n        oldProgram.unpause();\n      }\n    }\n    const defaultOptionsForArch = {\n      'web.cordova': {\n        runtimeConfigOverrides: {\n          // XXX We use absoluteUrl() here so that we serve https://\n          // URLs to cordova clients if force-ssl is in use. If we were\n          // to use __meteor_runtime_config__.ROOT_URL instead of\n          // absoluteUrl(), then Cordova clients would immediately get a\n          // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n          // http://example.meteor.com. This breaks the app, because\n          // force-ssl doesn't serve CORS headers on 302\n          // redirects. (Plus it's undesirable to have clients\n          // connecting to http://example.meteor.com when force-ssl is\n          // in use.)\n          DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n          ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl()\n        }\n      },\n      'web.browser': {\n        runtimeConfigOverrides: {\n          isModern: true\n        }\n      },\n      'web.browser.legacy': {\n        runtimeConfigOverrides: {\n          isModern: false\n        }\n      }\n    };\n    WebAppInternals.generateBoilerplate = function () {\n      // This boilerplate will be served to the mobile devices when used with\n      // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n      // the device's server, it is important to set the DDP url to the actual\n      // Meteor server accepting DDP connections and not the device's file server.\n      syncQueue.runTask(function () {\n        Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n      });\n    };\n    function generateBoilerplateForArch(arch) {\n      const program = WebApp.clientPrograms[arch];\n      const additionalOptions = defaultOptionsForArch[arch] || {};\n      const {\n        baseData\n      } = boilerplateByArch[arch] = WebAppInternals.generateBoilerplateInstance(arch, program.manifest, additionalOptions);\n      // We need the runtime config with overrides for meteor_runtime_config.js:\n      program.meteorRuntimeConfig = JSON.stringify(_objectSpread(_objectSpread({}, __meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || null));\n      program.refreshableAssets = baseData.css.map(file => ({\n        url: bundledJsCssUrlRewriteHook(file.url)\n      }));\n    }\n    WebAppInternals.reloadClientPrograms();\n\n    // webserver\n    var app = connect();\n\n    // Packages and apps can add handlers that run before any other Meteor\n    // handlers via WebApp.rawConnectHandlers.\n    var rawConnectHandlers = connect();\n    app.use(rawConnectHandlers);\n\n    // Auto-compress any json, javascript, or text.\n    app.use(compress({\n      filter: shouldCompress\n    }));\n\n    // parse cookies into an object\n    app.use(cookieParser());\n\n    // We're not a proxy; reject (without crashing) attempts to treat us like\n    // one. (See #1212.)\n    app.use(function (req, res, next) {\n      if (RoutePolicy.isValidUrl(req.url)) {\n        next();\n        return;\n      }\n      res.writeHead(400);\n      res.write('Not a proxy');\n      res.end();\n    });\n\n    // Parse the query string into res.query. Used by oauth_server, but it's\n    // generally pretty handy..\n    //\n    // Do this before the next middleware destroys req.url if a path prefix\n    // is set to close #10111.\n    app.use(function (request, response, next) {\n      request.query = qs.parse(parseUrl(request.url).query);\n      next();\n    });\n    function getPathParts(path) {\n      const parts = path.split('/');\n      while (parts[0] === '') parts.shift();\n      return parts;\n    }\n    function isPrefixOf(prefix, array) {\n      return prefix.length <= array.length && prefix.every((part, i) => part === array[i]);\n    }\n\n    // Strip off the path prefix, if it exists.\n    app.use(function (request, response, next) {\n      const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n      const {\n        pathname,\n        search\n      } = parseUrl(request.url);\n\n      // check if the path in the url starts with the path prefix\n      if (pathPrefix) {\n        const prefixParts = getPathParts(pathPrefix);\n        const pathParts = getPathParts(pathname);\n        if (isPrefixOf(prefixParts, pathParts)) {\n          request.url = '/' + pathParts.slice(prefixParts.length).join('/');\n          if (search) {\n            request.url += search;\n          }\n          return next();\n        }\n      }\n      if (pathname === '/favicon.ico' || pathname === '/robots.txt') {\n        return next();\n      }\n      if (pathPrefix) {\n        response.writeHead(404);\n        response.write('Unknown path');\n        response.end();\n        return;\n      }\n      next();\n    });\n\n    // Serve static files from the manifest.\n    // This is inspired by the 'static' middleware.\n    app.use(function (req, res, next) {\n      WebAppInternals.staticFilesMiddleware(WebAppInternals.staticFilesByArch, req, res, next);\n    });\n\n    // Core Meteor packages like dynamic-import can add handlers before\n    // other handlers added by package and application code.\n    app.use(WebAppInternals.meteorInternalHandlers = connect());\n\n    /**\n     * @name connectHandlersCallback(req, res, next)\n     * @locus Server\n     * @isprototype true\n     * @summary callback handler for `WebApp.connectHandlers`\n     * @param {Object} req\n     * a Node.js\n     * [IncomingMessage](https://nodejs.org/api/http.html#class-httpincomingmessage)\n     * object with some extra properties. This argument can be used\n     *  to get information about the incoming request.\n     * @param {Object} res\n     * a Node.js\n     * [ServerResponse](https://nodejs.org/api/http.html#class-httpserverresponse)\n     * object. Use this to write data that should be sent in response to the\n     * request, and call `res.end()` when you are done.\n     * @param {Function} next\n     * Calling this function will pass on the handling of\n     * this request to the next relevant handler.\n     *\n     */\n\n    /**\n     * @method connectHandlers\n     * @memberof WebApp\n     * @locus Server\n     * @summary Register a handler for all HTTP requests.\n     * @param {String} [path]\n     * This handler will only be called on paths that match\n     * this string. The match has to border on a `/` or a `.`.\n     *\n     * For example, `/hello` will match `/hello/world` and\n     * `/hello.world`, but not `/hello_world`.\n     * @param {connectHandlersCallback} handler\n     * A handler function that will be called on HTTP requests.\n     * See `connectHandlersCallback`\n     *\n     */\n    // Packages and apps can add handlers to this via WebApp.connectHandlers.\n    // They are inserted before our default handler.\n    var packageAndAppHandlers = connect();\n    app.use(packageAndAppHandlers);\n    var suppressConnectErrors = false;\n    // connect knows it is an error handler because it has 4 arguments instead of\n    // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n    // inside packageAndAppHandlers.)\n    app.use(function (err, req, res, next) {\n      if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n        next(err);\n        return;\n      }\n      res.writeHead(err.status, {\n        'Content-Type': 'text/plain'\n      });\n      res.end('An error message');\n    });\n    app.use(function (req, res, next) {\n      return Promise.asyncApply(() => {\n        var _Meteor$settings$pack5, _Meteor$settings$pack6;\n        if (!appUrl(req.url)) {\n          return next();\n        } else if (req.method !== 'HEAD' && req.method !== 'GET' && !((_Meteor$settings$pack5 = Meteor.settings.packages) !== null && _Meteor$settings$pack5 !== void 0 && (_Meteor$settings$pack6 = _Meteor$settings$pack5.webapp) !== null && _Meteor$settings$pack6 !== void 0 && _Meteor$settings$pack6.alwaysReturnContent)) {\n          const status = req.method === 'OPTIONS' ? 200 : 405;\n          res.writeHead(status, {\n            Allow: 'OPTIONS, GET, HEAD',\n            'Content-Length': '0'\n          });\n          res.end();\n        } else {\n          var headers = {\n            'Content-Type': 'text/html; charset=utf-8'\n          };\n          if (shuttingDown) {\n            headers['Connection'] = 'Close';\n          }\n          var request = WebApp.categorizeRequest(req);\n          if (request.url.query && request.url.query['meteor_css_resource']) {\n            // In this case, we're requesting a CSS resource in the meteor-specific\n            // way, but we don't have it.  Serve a static css file that indicates that\n            // we didn't have it, so we can detect that and refresh.  Make sure\n            // that any proxies or CDNs don't cache this error!  (Normally proxies\n            // or CDNs are smart enough not to cache error pages, but in order to\n            // make this hack work, we need to return the CSS file as a 200, which\n            // would otherwise be cached.)\n            headers['Content-Type'] = 'text/css; charset=utf-8';\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(200, headers);\n            res.write('.meteor-css-not-found-error { width: 0px;}');\n            res.end();\n            return;\n          }\n          if (request.url.query && request.url.query['meteor_js_resource']) {\n            // Similarly, we're requesting a JS resource that we don't have.\n            // Serve an uncached 404. (We can't use the same hack we use for CSS,\n            // because actually acting on that hack requires us to have the JS\n            // already!)\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end('404 Not Found');\n            return;\n          }\n          if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n            // When downloading files during a Cordova hot code push, we need\n            // to detect if a file is not available instead of inadvertently\n            // downloading the default index page.\n            // So similar to the situation above, we serve an uncached 404.\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end('404 Not Found');\n            return;\n          }\n          const {\n            arch\n          } = request;\n          assert.strictEqual(typeof arch, 'string', {\n            arch\n          });\n          if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n            // We could come here in case we run with some architectures excluded\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            if (Meteor.isDevelopment) {\n              res.end(\"No client program found for the \".concat(arch, \" architecture.\"));\n            } else {\n              // Safety net, but this branch should not be possible.\n              res.end('404 Not Found');\n            }\n            return;\n          }\n\n          // If pauseClient(arch) has been called, program.paused will be a\n          // Promise that will be resolved when the program is unpaused.\n          Promise.await(WebApp.clientPrograms[arch].paused);\n          return getBoilerplateAsync(request, arch).then(_ref3 => {\n            let {\n              stream,\n              statusCode,\n              headers: newHeaders\n            } = _ref3;\n            if (!statusCode) {\n              statusCode = res.statusCode ? res.statusCode : 200;\n            }\n            if (newHeaders) {\n              Object.assign(headers, newHeaders);\n            }\n            res.writeHead(statusCode, headers);\n            stream.pipe(res, {\n              // End the response when the stream ends.\n              end: true\n            });\n          }).catch(error => {\n            Log.error('Error running template: ' + error.stack);\n            res.writeHead(500, headers);\n            res.end();\n          });\n        }\n      });\n    });\n\n    // Return 404 by default, if no other handlers serve this URL.\n    app.use(function (req, res) {\n      res.writeHead(404);\n      res.end();\n    });\n    var httpServer = createServer(app);\n    var onListeningCallbacks = [];\n\n    // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n    // there's an outstanding request, give it a higher timeout instead (to avoid\n    // killing long-polling requests)\n    httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n    // Do this here, and then also in livedata/stream_server.js, because\n    // stream_server.js kills all the current request handlers when installing its\n    // own.\n    httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n    // If the client gave us a bad request, tell it instead of just closing the\n    // socket. This lets load balancers in front of us differentiate between \"a\n    // server is randomly closing sockets for no reason\" and \"client sent a bad\n    // request\".\n    //\n    // This will only work on Node 6; Node 4 destroys the socket before calling\n    // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n    httpServer.on('clientError', (err, socket) => {\n      // Pre-Node-6, do nothing.\n      if (socket.destroyed) {\n        return;\n      }\n      if (err.message === 'Parse Error') {\n        socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n      } else {\n        // For other errors, use the default behavior as if we had no clientError\n        // handler.\n        socket.destroy(err);\n      }\n    });\n\n    // start up app\n    _.extend(WebApp, {\n      connectHandlers: packageAndAppHandlers,\n      rawConnectHandlers: rawConnectHandlers,\n      httpServer: httpServer,\n      connectApp: app,\n      // For testing.\n      suppressConnectErrors: function () {\n        suppressConnectErrors = true;\n      },\n      onListening: function (f) {\n        if (onListeningCallbacks) onListeningCallbacks.push(f);else f();\n      },\n      // This can be overridden by users who want to modify how listening works\n      // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n      startListening: function (httpServer, listenOptions, cb) {\n        httpServer.listen(listenOptions, cb);\n      }\n    });\n\n    /**\n    * @name main\n    * @locus Server\n    * @summary Starts the HTTP server.\n    *  If `UNIX_SOCKET_PATH` is present Meteor's HTTP server will use that socket file for inter-process communication, instead of TCP.\n    * If you choose to not include webapp package in your application this method still must be defined for your Meteor application to work. \n    */\n    // Let the rest of the packages (and Meteor.startup hooks) insert connect\n    // middlewares and update __meteor_runtime_config__, then keep going to set up\n    // actually serving HTML.\n    exports.main = argv => {\n      WebAppInternals.generateBoilerplate();\n      const startHttpServer = listenOptions => {\n        WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n          if (process.env.METEOR_PRINT_ON_LISTEN) {\n            console.log('LISTENING');\n          }\n          const callbacks = onListeningCallbacks;\n          onListeningCallbacks = null;\n          callbacks.forEach(callback => {\n            callback();\n          });\n        }, e => {\n          console.error('Error listening:', e);\n          console.error(e && e.stack);\n        }));\n      };\n      let localPort = process.env.PORT || 0;\n      let unixSocketPath = process.env.UNIX_SOCKET_PATH;\n      if (unixSocketPath) {\n        if (cluster.isWorker) {\n          const workerName = cluster.worker.process.env.name || cluster.worker.id;\n          unixSocketPath += '.' + workerName + '.sock';\n        }\n        // Start the HTTP server using a socket file.\n        removeExistingSocketFile(unixSocketPath);\n        startHttpServer({\n          path: unixSocketPath\n        });\n        const unixSocketPermissions = (process.env.UNIX_SOCKET_PERMISSIONS || '').trim();\n        if (unixSocketPermissions) {\n          if (/^[0-7]{3}$/.test(unixSocketPermissions)) {\n            chmodSync(unixSocketPath, parseInt(unixSocketPermissions, 8));\n          } else {\n            throw new Error('Invalid UNIX_SOCKET_PERMISSIONS specified');\n          }\n        }\n        const unixSocketGroup = (process.env.UNIX_SOCKET_GROUP || '').trim();\n        if (unixSocketGroup) {\n          //whomst automatically handles both group names and numerical gids\n          const unixSocketGroupInfo = whomst.sync.group(unixSocketGroup);\n          if (unixSocketGroupInfo === null) {\n            throw new Error('Invalid UNIX_SOCKET_GROUP name specified');\n          }\n          chownSync(unixSocketPath, userInfo().uid, unixSocketGroupInfo.gid);\n        }\n        registerSocketFileCleanup(unixSocketPath);\n      } else {\n        localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n        if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n          // Start the HTTP server using Windows Server style named pipe.\n          startHttpServer({\n            path: localPort\n          });\n        } else if (typeof localPort === 'number') {\n          // Start the HTTP server using TCP.\n          startHttpServer({\n            port: localPort,\n            host: process.env.BIND_IP || '0.0.0.0'\n          });\n        } else {\n          throw new Error('Invalid PORT specified');\n        }\n      }\n      return 'DAEMON';\n    };\n  }\n  var inlineScriptsAllowed = true;\n  WebAppInternals.inlineScriptsAllowed = function () {\n    return inlineScriptsAllowed;\n  };\n  WebAppInternals.setInlineScriptsAllowed = function (value) {\n    inlineScriptsAllowed = value;\n    WebAppInternals.generateBoilerplate();\n  };\n  var sriMode;\n  WebAppInternals.enableSubresourceIntegrity = function () {\n    let use_credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n    WebAppInternals.generateBoilerplate();\n  };\n  WebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n    bundledJsCssUrlRewriteHook = hookFn;\n    WebAppInternals.generateBoilerplate();\n  };\n  WebAppInternals.setBundledJsCssPrefix = function (prefix) {\n    var self = this;\n    self.setBundledJsCssUrlRewriteHook(function (url) {\n      return prefix + url;\n    });\n  };\n\n  // Packages can call `WebAppInternals.addStaticJs` to specify static\n  // JavaScript to be included in the app. This static JS will be inlined,\n  // unless inline scripts have been disabled, in which case it will be\n  // served under `/<sha1 of contents>`.\n  var additionalStaticJs = {};\n  WebAppInternals.addStaticJs = function (contents) {\n    additionalStaticJs['/' + sha1(contents) + '.js'] = contents;\n  };\n\n  // Exported for tests\n  WebAppInternals.getBoilerplate = getBoilerplate;\n  WebAppInternals.additionalStaticJs = additionalStaticJs;\n\n  // Start the server!\n  runWebAppServer();\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"connect.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/webapp/connect.js                                                                             //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.export({\n  connect: () => connect\n});\nlet npmConnect;\nmodule.link(\"connect\", {\n  default(v) {\n    npmConnect = v;\n  }\n}, 0);\nfunction connect() {\n  for (var _len = arguments.length, connectArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n    connectArgs[_key] = arguments[_key];\n  }\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use;\n\n  // Wrap the handlers.use method so that any provided handler functions\n  // always run in a Fiber.\n  handlers.use = function use() {\n    for (var _len2 = arguments.length, useArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      useArgs[_key2] = arguments[_key2];\n    }\n    const {\n      stack\n    } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs);\n\n    // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to determine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n    return result;\n  };\n  return handlers;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"socket_file.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/webapp/socket_file.js                                                                         //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.export({\n  removeExistingSocketFile: () => removeExistingSocketFile,\n  registerSocketFileCleanup: () => registerSocketFileCleanup\n});\nlet statSync, unlinkSync, existsSync;\nmodule.link(\"fs\", {\n  statSync(v) {\n    statSync = v;\n  },\n  unlinkSync(v) {\n    unlinkSync = v;\n  },\n  existsSync(v) {\n    existsSync = v;\n  }\n}, 0);\nconst removeExistingSocketFile = socketPath => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\"An existing file was found at \\\"\".concat(socketPath, \"\\\" and it is not \") + 'a socket file. Please confirm PORT is pointing to valid and ' + 'un-used socket file path.');\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\nconst registerSocketFileCleanup = function (socketPath) {\n  let eventEmitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n  ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n    eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n      if (existsSync(socketPath)) {\n        unlinkSync(socketPath);\n      }\n    }));\n  });\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"node_modules\":{\"connect\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/connect/package.json                                           //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"connect\",\n  \"version\": \"3.7.0\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/connect/index.js                                               //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"compression\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/compression/package.json                                       //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"compression\",\n  \"version\": \"1.7.4\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/compression/index.js                                           //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"cookie-parser\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/cookie-parser/package.json                                     //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"cookie-parser\",\n  \"version\": \"1.4.6\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/cookie-parser/index.js                                         //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"qs\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/qs/package.json                                                //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"qs\",\n  \"version\": \"6.11.2\",\n  \"main\": \"lib/index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/qs/lib/index.js                                                //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"parseurl\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/parseurl/package.json                                          //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"parseurl\",\n  \"version\": \"1.3.3\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/parseurl/index.js                                              //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"basic-auth-connect\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/basic-auth-connect/package.json                                //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"basic-auth-connect\",\n  \"version\": \"1.0.0\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/basic-auth-connect/index.js                                    //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"useragent\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/useragent/package.json                                         //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"useragent\",\n  \"version\": \"2.3.0\",\n  \"main\": \"./index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/useragent/index.js                                             //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"send\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/send/package.json                                              //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"send\",\n  \"version\": \"0.18.0\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/send/index.js                                                  //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"@vlasky\":{\"whomst\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/@vlasky/whomst/package.json                                    //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = {\n  \"name\": \"@vlasky/whomst\",\n  \"version\": \"0.1.7\",\n  \"main\": \"index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// node_modules/meteor/webapp/node_modules/@vlasky/whomst/index.js                                        //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/webapp/webapp_server.js\");\n\n/* Exports */\nPackage._define(\"webapp\", exports, {\n  WebApp: WebApp,\n  WebAppInternals: WebAppInternals,\n  main: main\n});\n\n})();\n","servePath":"/packages/webapp.js","sourceMap":{"version":3,"sources":["packages/webapp/webapp_server.js","packages/webapp/connect.js","packages/webapp/socket_file.js"],"names":["_objectSpread","module1","link","default","v","export","WebApp","WebAppInternals","assert","readFileSync","chmodSync","chownSync","createServer","userInfo","pathJoin","pathDirname","join","dirname","parseUrl","parse","createHash","connect","compress","cookieParser","qs","parseRequest","basicAuth","lookupUserAgent","lookup","isModern","send","removeExistingSocketFile","registerSocketFileCleanup","cluster","whomst","onMessage","SHORT_SOCKET_TIMEOUT","LONG_SOCKET_TIMEOUT","hasOwn","Object","prototype","hasOwnProperty","NpmModules","version","Npm","require","module","defaultArch","clientPrograms","archPath","bundledJsCssUrlRewriteHook","url","bundledPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","sha1","contents","hash","update","digest","shouldCompress","req","res","headers","filter","camelCase","name","parts","split","toLowerCase","i","length","charAt","toUpperCase","substr","identifyBrowser","userAgentString","userAgent","family","major","minor","patch","categorizeRequest","browser","arch","modern","path","pathname","categorized","dynamicHead","dynamicBody","cookies","pathParts","archKey","startsWith","archCleaned","slice","call","splice","assign","preferredArchOrder","htmlAttributeHooks","getHtmlAttributes","request","combinedAttributes","_","each","hook","attributes","Error","extend","addHtmlAttributeHook","push","appUrl","RoutePolicy","classify","Meteor","startup","getter","key","program","value","calculateClientHash","clientHash","calculateClientHashRefreshable","calculateClientHashNonRefreshable","calculateClientHashReplaceable","getRefreshableAssets","_timeoutAdjustmentRequestCallback","setTimeout","finishListeners","listeners","removeAllListeners","on","l","boilerplateByArch","boilerplateDataCallbacks","create","registerBoilerplateDataCallback","callback","previousCallback","strictEqual","getBoilerplate","getBoilerplateAsync","await","encodeRuntimeConfig","rtimeConfig","JSON","stringify","encodeURIComponent","decodeRuntimeConfig","rtimeConfigStr","decodeURIComponent","runtimeConfig","hooks","Hook","updateHooks","isUpdatedByArch","addRuntimeConfigHook","register","boilerplate","forEach","meteorRuntimeConfig","encodedCurrentConfig","baseData","updated","data","htmlAttributes","pick","madeChanges","promise","Promise","resolve","keys","then","result","stream","toHTMLStream","statusCode","addUpdatedNotifyHook","handler","generateBoilerplateInstance","manifest","additionalOptions","runtimeConfigOverrides","cb","Boilerplate","pathMapper","itemPath","baseDataExtension","additionalStaticJs","map","meteorRuntimeHash","rootUrlPathPrefix","sriMode","inlineScriptsAllowed","inline","staticFilesMiddleware","staticFilesByArch","next","asyncApply","_Meteor$settings$pack3","_Meteor$settings$pack4","e","serveStaticJs","s","_Meteor$settings$pack","_Meteor$settings$pack2","method","settings","packages","webapp","alwaysReturnContent","writeHead","Buffer","byteLength","write","end","status","Allow","has","paused","concat","info","getStaticFileInfo","maxAge","cacheable","setHeader","sourceMapUrl","type","content","absolutePath","maxage","dotfiles","lastModified","err","Log","error","pipe","originalPath","staticArchList","archIndex","indexOf","unshift","some","staticFiles","finalize","parsePort","port","parsedPort","parseInt","Number","isNaN","_ref","pauseClient","_ref2","generateClientProgram","runWebAppServer","shuttingDown","syncQueue","_SynchronousQueue","getItemPathname","itemUrl","reloadClientPrograms","runTask","configJson","__meteor_bootstrap__","clientArchs","clientPaths","stack","process","exit","unpause","arguments","undefined","clientDir","serverDir","programJsonPath","programJson","code","format","item","where","sourceMap","PUBLIC_SETTINGS","configOverrides","oldProgram","newProgram","WebAppHashing","versionRefreshable","versionNonRefreshable","replaceable","versionReplaceable","_type","cordovaCompatibilityVersions","hmrVersion","manifestUrlPrefix","replace","manifestUrl","Package","autoupdate","AUTOUPDATE_VERSION","Autoupdate","autoupdateVersion","env","generateBoilerplateForArch","defaultOptionsForArch","DDP_DEFAULT_CONNECTION_URL","MOBILE_DDP_URL","absoluteUrl","ROOT_URL","MOBILE_ROOT_URL","generateBoilerplate","refreshableAssets","css","file","app","rawConnectHandlers","use","isValidUrl","response","query","getPathParts","shift","isPrefixOf","prefix","array","every","part","pathPrefix","search","prefixParts","meteorInternalHandlers","packageAndAppHandlers","suppressConnectErrors","_Meteor$settings$pack5","_Meteor$settings$pack6","isDevelopment","_ref3","newHeaders","catch","httpServer","onListeningCallbacks","socket","destroyed","message","destroy","connectHandlers","connectApp","onListening","f","startListening","listenOptions","listen","exports","main","argv","startHttpServer","bindEnvironment","METEOR_PRINT_ON_LISTEN","console","log","callbacks","localPort","PORT","unixSocketPath","UNIX_SOCKET_PATH","isWorker","workerName","worker","id","unixSocketPermissions","UNIX_SOCKET_PERMISSIONS","trim","test","unixSocketGroup","UNIX_SOCKET_GROUP","unixSocketGroupInfo","sync","group","uid","gid","host","BIND_IP","setInlineScriptsAllowed","enableSubresourceIntegrity","use_credentials","setBundledJsCssUrlRewriteHook","hookFn","setBundledJsCssPrefix","self","addStaticJs","npmConnect","_len","connectArgs","Array","_key","handlers","apply","originalUse","_len2","useArgs","_key2","originalLength","entry","originalHandle","handle","statSync","unlinkSync","existsSync","socketPath","isSocket","eventEmitter","signal"],"mappings":"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","file":"/packages/webapp.js","sourcesContent":["import assert from 'assert';\nimport { readFileSync, chmodSync, chownSync } from 'fs';\nimport { createServer } from 'http';\nimport { userInfo } from 'os';\nimport { join as pathJoin, dirname as pathDirname } from 'path';\nimport { parse as parseUrl } from 'url';\nimport { createHash } from 'crypto';\nimport { connect } from './connect.js';\nimport compress from 'compression';\nimport cookieParser from 'cookie-parser';\nimport qs from 'qs';\nimport parseRequest from 'parseurl';\nimport basicAuth from 'basic-auth-connect';\nimport { lookup as lookupUserAgent } from 'useragent';\nimport { isModern } from 'meteor/modern-browsers';\nimport send from 'send';\nimport {\n  removeExistingSocketFile,\n  registerSocketFileCleanup,\n} from './socket_file.js';\nimport cluster from 'cluster';\nimport whomst from '@vlasky/whomst';\n\nvar SHORT_SOCKET_TIMEOUT = 5 * 1000;\nvar LONG_SOCKET_TIMEOUT = 120 * 1000;\n\nexport const WebApp = {};\nexport const WebAppInternals = {};\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// backwards compat to 2.0 of connect\nconnect.basicAuth = basicAuth;\n\nWebAppInternals.NpmModules = {\n  connect: {\n    version: Npm.require('connect/package.json').version,\n    module: connect,\n  },\n};\n\n// Though we might prefer to use web.browser (modern) as the default\n// architecture, safety requires a more compatible defaultArch.\nWebApp.defaultArch = 'web.browser.legacy';\n\n// XXX maps archs to manifests\nWebApp.clientPrograms = {};\n\n// XXX maps archs to program path on filesystem\nvar archPath = {};\n\nvar bundledJsCssUrlRewriteHook = function(url) {\n  var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n  return bundledPrefix + url;\n};\n\nvar sha1 = function(contents) {\n  var hash = createHash('sha1');\n  hash.update(contents);\n  return hash.digest('hex');\n};\n\nfunction shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  }\n\n  // fallback to standard filter function\n  return compress.filter(req, res);\n}\n\n// #BrowserIdentification\n//\n// We have multiple places that want to identify the browser: the\n// unsupported browser page, the appcache package, and, eventually\n// delivering browser polyfills only as needed.\n//\n// To avoid detecting the browser in multiple places ad-hoc, we create a\n// Meteor \"browser\" object. It uses but does not expose the npm\n// useragent module (we could choose a different mechanism to identify\n// the browser in the future if we wanted to).  The browser object\n// contains\n//\n// * `name`: the name of the browser in camel case\n// * `major`, `minor`, `patch`: integers describing the browser version\n//\n// Also here is an early version of a Meteor `request` object, intended\n// to be a high-level description of the request without exposing\n// details of connect's low-level `req`.  Currently it contains:\n//\n// * `browser`: browser identification object described above\n// * `url`: parsed url, including parsed query params\n//\n// As a temporary hack there is a `categorizeRequest` function on WebApp which\n// converts a connect `req` to a Meteor `request`. This can go away once smart\n// packages such as appcache are being passed a `request` object directly when\n// they serve content.\n//\n// This allows `request` to be used uniformly: it is passed to the html\n// attributes hook, and the appcache package can use it when deciding\n// whether to generate a 404 for the manifest.\n//\n// Real routing / server side rendering will probably refactor this\n// heavily.\n\n// e.g. \"Mobile Safari\" => \"mobileSafari\"\nvar camelCase = function(name) {\n  var parts = name.split(' ');\n  parts[0] = parts[0].toLowerCase();\n  for (var i = 1; i < parts.length; ++i) {\n    parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n  }\n  return parts.join('');\n};\n\nvar identifyBrowser = function(userAgentString) {\n  var userAgent = lookupUserAgent(userAgentString);\n  return {\n    name: camelCase(userAgent.family),\n    major: +userAgent.major,\n    minor: +userAgent.minor,\n    patch: +userAgent.patch,\n  };\n};\n\n// XXX Refactor as part of implementing real routing.\nWebAppInternals.identifyBrowser = identifyBrowser;\n\nWebApp.categorizeRequest = function(req) {\n  if (req.browser && req.arch && typeof req.modern === 'boolean') {\n    // Already categorized.\n    return req;\n  }\n\n  const browser = identifyBrowser(req.headers['user-agent']);\n  const modern = isModern(browser);\n  const path =\n    typeof req.pathname === 'string'\n      ? req.pathname\n      : parseRequest(req).pathname;\n\n  const categorized = {\n    browser,\n    modern,\n    path,\n    arch: WebApp.defaultArch,\n    url: parseUrl(req.url, true),\n    dynamicHead: req.dynamicHead,\n    dynamicBody: req.dynamicBody,\n    headers: req.headers,\n    cookies: req.cookies,\n  };\n\n  const pathParts = path.split('/');\n  const archKey = pathParts[1];\n\n  if (archKey.startsWith('__')) {\n    const archCleaned = 'web.' + archKey.slice(2);\n    if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n      pathParts.splice(1, 1); // Remove the archKey part.\n      return Object.assign(categorized, {\n        arch: archCleaned,\n        path: pathParts.join('/'),\n      });\n    }\n  }\n\n  // TODO Perhaps one day we could infer Cordova clients here, so that we\n  // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n  const preferredArchOrder = isModern(browser)\n    ? ['web.browser', 'web.browser.legacy']\n    : ['web.browser.legacy', 'web.browser'];\n\n  for (const arch of preferredArchOrder) {\n    // If our preferred arch is not available, it's better to use another\n    // client arch that is available than to guarantee the site won't work\n    // by returning an unknown arch. For example, if web.browser.legacy is\n    // excluded using the --exclude-archs command-line option, legacy\n    // clients are better off receiving web.browser (which might actually\n    // work) than receiving an HTTP 404 response. If none of the archs in\n    // preferredArchOrder are defined, only then should we send a 404.\n    if (hasOwn.call(WebApp.clientPrograms, arch)) {\n      return Object.assign(categorized, { arch });\n    }\n  }\n\n  return categorized;\n};\n\n// HTML attribute hooks: functions to be called to determine any attributes to\n// be added to the '<html>' tag. Each function is passed a 'request' object (see\n// #BrowserIdentification) and should return null or object.\nvar htmlAttributeHooks = [];\nvar getHtmlAttributes = function(request) {\n  var combinedAttributes = {};\n  _.each(htmlAttributeHooks || [], function(hook) {\n    var attributes = hook(request);\n    if (attributes === null) return;\n    if (typeof attributes !== 'object')\n      throw Error('HTML attribute hook must return null or object');\n    _.extend(combinedAttributes, attributes);\n  });\n  return combinedAttributes;\n};\nWebApp.addHtmlAttributeHook = function(hook) {\n  htmlAttributeHooks.push(hook);\n};\n\n// Serve app HTML for this URL?\nvar appUrl = function(url) {\n  if (url === '/favicon.ico' || url === '/robots.txt') return false;\n\n  // NOTE: app.manifest is not a web standard like favicon.ico and\n  // robots.txt. It is a file name we have chosen to use for HTML5\n  // appcache URLs. It is included here to prevent using an appcache\n  // then removing it from poisoning an app permanently. Eventually,\n  // once we have server side routing, this won't be needed as\n  // unknown URLs with return a 404 automatically.\n  if (url === '/app.manifest') return false;\n\n  // Avoid serving app HTML for declared routes such as /sockjs/.\n  if (RoutePolicy.classify(url)) return false;\n\n  // we currently return app HTML on all URLs by default\n  return true;\n};\n\n// We need to calculate the client hash after all packages have loaded\n// to give them a chance to populate __meteor_runtime_config__.\n//\n// Calculating the hash during startup means that packages can only\n// populate __meteor_runtime_config__ during load, not during startup.\n//\n// Calculating instead it at the beginning of main after all startup\n// hooks had run would allow packages to also populate\n// __meteor_runtime_config__ during startup, but that's too late for\n// autoupdate because it needs to have the client hash at startup to\n// insert the auto update version itself into\n// __meteor_runtime_config__ to get it to the client.\n//\n// An alternative would be to give autoupdate a \"post-start,\n// pre-listen\" hook to allow it to insert the auto update version at\n// the right moment.\n\nMeteor.startup(function() {\n  function getter(key) {\n    return function(arch) {\n      arch = arch || WebApp.defaultArch;\n      const program = WebApp.clientPrograms[arch];\n      const value = program && program[key];\n      // If this is the first time we have calculated this hash,\n      // program[key] will be a thunk (lazy function with no parameters)\n      // that we should call to do the actual computation.\n      return typeof value === 'function' ? (program[key] = value()) : value;\n    };\n  }\n\n  WebApp.calculateClientHash = WebApp.clientHash = getter('version');\n  WebApp.calculateClientHashRefreshable = getter('versionRefreshable');\n  WebApp.calculateClientHashNonRefreshable = getter('versionNonRefreshable');\n  WebApp.calculateClientHashReplaceable = getter('versionReplaceable');\n  WebApp.getRefreshableAssets = getter('refreshableAssets');\n});\n\n// When we have a request pending, we want the socket timeout to be long, to\n// give ourselves a while to serve it, and to allow sockjs long polls to\n// complete.  On the other hand, we want to close idle sockets relatively\n// quickly, so that we can shut down relatively promptly but cleanly, without\n// cutting off anyone's response.\nWebApp._timeoutAdjustmentRequestCallback = function(req, res) {\n  // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n  req.setTimeout(LONG_SOCKET_TIMEOUT);\n  // Insert our new finish listener to run BEFORE the existing one which removes\n  // the response from the socket.\n  var finishListeners = res.listeners('finish');\n  // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n  // https://github.com/joyent/node/commit/7c9b6070\n  // But it has switched back to 'finish' in Node v4:\n  // https://github.com/nodejs/node/pull/1411\n  res.removeAllListeners('finish');\n  res.on('finish', function() {\n    res.setTimeout(SHORT_SOCKET_TIMEOUT);\n  });\n  _.each(finishListeners, function(l) {\n    res.on('finish', l);\n  });\n};\n\n// Will be updated by main before we listen.\n// Map from client arch to boilerplate object.\n// Boilerplate object has:\n//   - func: XXX\n//   - baseData: XXX\nvar boilerplateByArch = {};\n\n// Register a callback function that can selectively modify boilerplate\n// data given arguments (request, data, arch). The key should be a unique\n// identifier, to prevent accumulating duplicate callbacks from the same\n// call site over time. Callbacks will be called in the order they were\n// registered. A callback should return false if it did not make any\n// changes affecting the boilerplate. Passing null deletes the callback.\n// Any previous callback registered for this key will be returned.\nconst boilerplateDataCallbacks = Object.create(null);\nWebAppInternals.registerBoilerplateDataCallback = function(key, callback) {\n  const previousCallback = boilerplateDataCallbacks[key];\n\n  if (typeof callback === 'function') {\n    boilerplateDataCallbacks[key] = callback;\n  } else {\n    assert.strictEqual(callback, null);\n    delete boilerplateDataCallbacks[key];\n  }\n\n  // Return the previous callback in case the new callback needs to call\n  // it; for example, when the new callback is a wrapper for the old.\n  return previousCallback || null;\n};\n\n// Given a request (as returned from `categorizeRequest`), return the\n// boilerplate HTML to serve for that request.\n//\n// If a previous connect middleware has rendered content for the head or body,\n// returns the boilerplate with that content patched in otherwise\n// memoizes on HTML attributes (used by, eg, appcache) and whether inline\n// scripts are currently allowed.\n// XXX so far this function is always called with arch === 'web.browser'\nfunction getBoilerplate(request, arch) {\n  return getBoilerplateAsync(request, arch).await();\n}\n\n/**\n * @summary Takes a runtime configuration object and\n * returns an encoded runtime string.\n * @locus Server\n * @param {Object} rtimeConfig\n * @returns {String}\n */\nWebApp.encodeRuntimeConfig = function(rtimeConfig) {\n  return JSON.stringify(encodeURIComponent(JSON.stringify(rtimeConfig)));\n};\n\n/**\n * @summary Takes an encoded runtime string and returns\n * a runtime configuration object.\n * @locus Server\n * @param {String} rtimeConfigString\n * @returns {Object}\n */\nWebApp.decodeRuntimeConfig = function(rtimeConfigStr) {\n  return JSON.parse(decodeURIComponent(JSON.parse(rtimeConfigStr)));\n};\n\nconst runtimeConfig = {\n  // hooks will contain the callback functions\n  // set by the caller to addRuntimeConfigHook\n  hooks: new Hook(),\n  // updateHooks will contain the callback functions\n  // set by the caller to addUpdatedNotifyHook\n  updateHooks: new Hook(),\n  // isUpdatedByArch is an object containing fields for each arch\n  // that this server supports.\n  // - Each field will be true when the server updates the runtimeConfig for that arch.\n  // - When the hook callback is called the update field in the callback object will be\n  // set to isUpdatedByArch[arch].\n  // = isUpdatedyByArch[arch] is reset to false after the callback.\n  // This enables the caller to cache data efficiently so they do not need to\n  // decode & update data on every callback when the runtimeConfig is not changing.\n  isUpdatedByArch: {},\n};\n\n/**\n * @name addRuntimeConfigHookCallback(options)\n * @locus Server\n * @isprototype true\n * @summary Callback for `addRuntimeConfigHook`.\n *\n * If the handler returns a _falsy_ value the hook will not\n * modify the runtime configuration.\n *\n * If the handler returns a _String_ the hook will substitute\n * the string for the encoded configuration string.\n *\n * **Warning:** the hook does not check the return value at all it is\n * the responsibility of the caller to get the formatting correct using\n * the helper functions.\n *\n * `addRuntimeConfigHookCallback` takes only one `Object` argument\n * with the following fields:\n * @param {Object} options\n * @param {String} options.arch The architecture of the client\n * requesting a new runtime configuration. This can be one of\n * `web.browser`, `web.browser.legacy` or `web.cordova`.\n * @param {Object} options.request\n * A NodeJs [IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n * https://nodejs.org/api/http.html#http_class_http_incomingmessage\n * `Object` that can be used to get information about the incoming request.\n * @param {String} options.encodedCurrentConfig The current configuration object\n * encoded as a string for inclusion in the root html.\n * @param {Boolean} options.updated `true` if the config for this architecture\n * has been updated since last called, otherwise `false`. This flag can be used\n * to cache the decoding/encoding for each architecture.\n */\n\n/**\n * @summary Hook that calls back when the meteor runtime configuration,\n * `__meteor_runtime_config__` is being sent to any client.\n *\n * **returns**: <small>_Object_</small> `{ stop: function, callback: function }`\n * - `stop` <small>_Function_</small> Call `stop()` to stop getting callbacks.\n * - `callback` <small>_Function_</small> The passed in `callback`.\n * @locus Server\n * @param {addRuntimeConfigHookCallback} callback\n * See `addRuntimeConfigHookCallback` description.\n * @returns {Object} {{ stop: function, callback: function }}\n * Call the returned `stop()` to stop getting callbacks.\n * The passed in `callback` is returned also.\n */\nWebApp.addRuntimeConfigHook = function(callback) {\n  return runtimeConfig.hooks.register(callback);\n};\n\nfunction getBoilerplateAsync(request, arch) {\n  let boilerplate = boilerplateByArch[arch];\n  runtimeConfig.hooks.forEach(hook => {\n    const meteorRuntimeConfig = hook({\n      arch,\n      request,\n      encodedCurrentConfig: boilerplate.baseData.meteorRuntimeConfig,\n      updated: runtimeConfig.isUpdatedByArch[arch],\n    });\n    if (!meteorRuntimeConfig) return true;\n    boilerplate.baseData = Object.assign({}, boilerplate.baseData, {\n      meteorRuntimeConfig,\n    });\n    return true;\n  });\n  runtimeConfig.isUpdatedByArch[arch] = false;\n  const data = Object.assign(\n    {},\n    boilerplate.baseData,\n    {\n      htmlAttributes: getHtmlAttributes(request),\n    },\n    _.pick(request, 'dynamicHead', 'dynamicBody')\n  );\n\n  let madeChanges = false;\n  let promise = Promise.resolve();\n\n  Object.keys(boilerplateDataCallbacks).forEach(key => {\n    promise = promise\n      .then(() => {\n        const callback = boilerplateDataCallbacks[key];\n        return callback(request, data, arch);\n      })\n      .then(result => {\n        // Callbacks should return false if they did not make any changes.\n        if (result !== false) {\n          madeChanges = true;\n        }\n      });\n  });\n\n  return promise.then(() => ({\n    stream: boilerplate.toHTMLStream(data),\n    statusCode: data.statusCode,\n    headers: data.headers,\n  }));\n}\n\n/**\n * @name addUpdatedNotifyHookCallback(options)\n * @summary callback handler for `addupdatedNotifyHook`\n * @isprototype true\n * @locus Server\n * @param {Object} options\n * @param {String} options.arch The architecture that is being updated.\n * This can be one of `web.browser`, `web.browser.legacy` or `web.cordova`.\n * @param {Object} options.manifest The new updated manifest object for\n * this `arch`.\n * @param {Object} options.runtimeConfig The new updated configuration\n * object for this `arch`.\n */\n\n/**\n * @summary Hook that runs when the meteor runtime configuration\n * is updated.  Typically the configuration only changes during development mode.\n * @locus Server\n * @param {addUpdatedNotifyHookCallback} handler\n * The `handler` is called on every change to an `arch` runtime configuration.\n * See `addUpdatedNotifyHookCallback`.\n * @returns {Object} {{ stop: function, callback: function }}\n */\nWebApp.addUpdatedNotifyHook = function(handler) {\n  return runtimeConfig.updateHooks.register(handler);\n};\n\nWebAppInternals.generateBoilerplateInstance = function(\n  arch,\n  manifest,\n  additionalOptions\n) {\n  additionalOptions = additionalOptions || {};\n\n  runtimeConfig.isUpdatedByArch[arch] = true;\n  const rtimeConfig = {\n    ...__meteor_runtime_config__,\n    ...(additionalOptions.runtimeConfigOverrides || {}),\n  };\n  runtimeConfig.updateHooks.forEach(cb => {\n    cb({ arch, manifest, runtimeConfig: rtimeConfig });\n    return true;\n  });\n\n  const meteorRuntimeConfig = JSON.stringify(\n    encodeURIComponent(JSON.stringify(rtimeConfig))\n  );\n\n  return new Boilerplate(\n    arch,\n    manifest,\n    Object.assign(\n      {\n        pathMapper(itemPath) {\n          return pathJoin(archPath[arch], itemPath);\n        },\n        baseDataExtension: {\n          additionalStaticJs: _.map(additionalStaticJs || [], function(\n            contents,\n            pathname\n          ) {\n            return {\n              pathname: pathname,\n              contents: contents,\n            };\n          }),\n          // Convert to a JSON string, then get rid of most weird characters, then\n          // wrap in double quotes. (The outermost JSON.stringify really ought to\n          // just be \"wrap in double quotes\" but we use it to be safe.) This might\n          // end up inside a <script> tag so we need to be careful to not include\n          // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n          // https://github.com/meteor/meteor/issues/3730\n          meteorRuntimeConfig,\n          meteorRuntimeHash: sha1(meteorRuntimeConfig),\n          rootUrlPathPrefix:\n            __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n          bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n          sriMode: sriMode,\n          inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n          inline: additionalOptions.inline,\n        },\n      },\n      additionalOptions\n    )\n  );\n};\n\n// A mapping from url path to architecture (e.g. \"web.browser\") to static\n// file information with the following fields:\n// - type: the type of file to be served\n// - cacheable: optionally, whether the file should be cached or not\n// - sourceMapUrl: optionally, the url of the source map\n//\n// Info also contains one of the following:\n// - content: the stringified content that should be served at this path\n// - absolutePath: the absolute path on disk to the file\n\n// Serve static files from the manifest or added with\n// `addStaticJs`. Exported for tests.\nWebAppInternals.staticFilesMiddleware = async function(\n  staticFilesByArch,\n  req,\n  res,\n  next\n) {\n  var pathname = parseRequest(req).pathname;\n  try {\n    pathname = decodeURIComponent(pathname);\n  } catch (e) {\n    next();\n    return;\n  }\n\n  var serveStaticJs = function(s) {\n    if (\n      req.method === 'GET' ||\n      req.method === 'HEAD' ||\n      Meteor.settings.packages?.webapp?.alwaysReturnContent\n    ) {\n      res.writeHead(200, {\n        'Content-type': 'application/javascript; charset=UTF-8',\n        'Content-Length': Buffer.byteLength(s),\n      });\n      res.write(s);\n      res.end();\n    } else {\n      const status = req.method === 'OPTIONS' ? 200 : 405;\n      res.writeHead(status, {\n        Allow: 'OPTIONS, GET, HEAD',\n        'Content-Length': '0',\n      });\n      res.end();\n    }\n  };\n\n  if (\n    _.has(additionalStaticJs, pathname) &&\n    !WebAppInternals.inlineScriptsAllowed()\n  ) {\n    serveStaticJs(additionalStaticJs[pathname]);\n    return;\n  }\n\n  const { arch, path } = WebApp.categorizeRequest(req);\n\n  if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n    // We could come here in case we run with some architectures excluded\n    next();\n    return;\n  }\n\n  // If pauseClient(arch) has been called, program.paused will be a\n  // Promise that will be resolved when the program is unpaused.\n  const program = WebApp.clientPrograms[arch];\n  await program.paused;\n\n  if (\n    path === '/meteor_runtime_config.js' &&\n    !WebAppInternals.inlineScriptsAllowed()\n  ) {\n    serveStaticJs(\n      `__meteor_runtime_config__ = ${program.meteorRuntimeConfig};`\n    );\n    return;\n  }\n\n  const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n  if (!info) {\n    next();\n    return;\n  }\n  // \"send\" will handle HEAD & GET requests\n  if (\n    req.method !== 'HEAD' &&\n    req.method !== 'GET' &&\n    !Meteor.settings.packages?.webapp?.alwaysReturnContent\n  ) {\n    const status = req.method === 'OPTIONS' ? 200 : 405;\n    res.writeHead(status, {\n      Allow: 'OPTIONS, GET, HEAD',\n      'Content-Length': '0',\n    });\n    res.end();\n    return;\n  }\n\n  // We don't need to call pause because, unlike 'static', once we call into\n  // 'send' and yield to the event loop, we never call another handler with\n  // 'next'.\n\n  // Cacheable files are files that should never change. Typically\n  // named by their hash (eg meteor bundled js and css files).\n  // We cache them ~forever (1yr).\n  const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n\n  if (info.cacheable) {\n    // Since we use req.headers[\"user-agent\"] to determine whether the\n    // client should receive modern or legacy resources, tell the client\n    // to invalidate cached resources when/if its user agent string\n    // changes in the future.\n    res.setHeader('Vary', 'User-Agent');\n  }\n\n  // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n  // understand.  (The SourceMap header is slightly more spec-correct but FF\n  // doesn't understand it.)\n  //\n  // You may also need to enable source maps in Chrome: open dev tools, click\n  // the gear in the bottom right corner, and select \"enable source maps\".\n  if (info.sourceMapUrl) {\n    res.setHeader(\n      'X-SourceMap',\n      __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl\n    );\n  }\n\n  if (info.type === 'js' || info.type === 'dynamic js') {\n    res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n  } else if (info.type === 'css') {\n    res.setHeader('Content-Type', 'text/css; charset=UTF-8');\n  } else if (info.type === 'json') {\n    res.setHeader('Content-Type', 'application/json; charset=UTF-8');\n  }\n\n  if (info.hash) {\n    res.setHeader('ETag', '\"' + info.hash + '\"');\n  }\n\n  if (info.content) {\n    res.setHeader('Content-Length', Buffer.byteLength(info.content));\n    res.write(info.content);\n    res.end();\n  } else {\n    send(req, info.absolutePath, {\n      maxage: maxAge,\n      dotfiles: 'allow', // if we specified a dotfile in the manifest, serve it\n      lastModified: false, // don't set last-modified based on the file date\n    })\n      .on('error', function(err) {\n        Log.error('Error serving static file ' + err);\n        res.writeHead(500);\n        res.end();\n      })\n      .on('directory', function() {\n        Log.error('Unexpected directory ' + info.absolutePath);\n        res.writeHead(500);\n        res.end();\n      })\n      .pipe(res);\n  }\n};\n\nfunction getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n  if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n    return null;\n  }\n\n  // Get a list of all available static file architectures, with arch\n  // first in the list if it exists.\n  const staticArchList = Object.keys(staticFilesByArch);\n  const archIndex = staticArchList.indexOf(arch);\n  if (archIndex > 0) {\n    staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n  }\n\n  let info = null;\n\n  staticArchList.some(arch => {\n    const staticFiles = staticFilesByArch[arch];\n\n    function finalize(path) {\n      info = staticFiles[path];\n      // Sometimes we register a lazy function instead of actual data in\n      // the staticFiles manifest.\n      if (typeof info === 'function') {\n        info = staticFiles[path] = info();\n      }\n      return info;\n    }\n\n    // If staticFiles contains originalPath with the arch inferred above,\n    // use that information.\n    if (hasOwn.call(staticFiles, originalPath)) {\n      return finalize(originalPath);\n    }\n\n    // If categorizeRequest returned an alternate path, try that instead.\n    if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n      return finalize(path);\n    }\n  });\n\n  return info;\n}\n\n// Parse the passed in port value. Return the port as-is if it's a String\n// (e.g. a Windows Server style named pipe), otherwise return the port as an\n// integer.\n//\n// DEPRECATED: Direct use of this function is not recommended; it is no\n// longer used internally, and will be removed in a future release.\nWebAppInternals.parsePort = port => {\n  let parsedPort = parseInt(port);\n  if (Number.isNaN(parsedPort)) {\n    parsedPort = port;\n  }\n  return parsedPort;\n};\n\nimport { onMessage } from 'meteor/inter-process-messaging';\n\nonMessage('webapp-pause-client', async ({ arch }) => {\n  WebAppInternals.pauseClient(arch);\n});\n\nonMessage('webapp-reload-client', async ({ arch }) => {\n  WebAppInternals.generateClientProgram(arch);\n});\n\nfunction runWebAppServer() {\n  var shuttingDown = false;\n  var syncQueue = new Meteor._SynchronousQueue();\n\n  var getItemPathname = function(itemUrl) {\n    return decodeURIComponent(parseUrl(itemUrl).pathname);\n  };\n\n  WebAppInternals.reloadClientPrograms = function() {\n    syncQueue.runTask(function() {\n      const staticFilesByArch = Object.create(null);\n\n      const { configJson } = __meteor_bootstrap__;\n      const clientArchs =\n        configJson.clientArchs || Object.keys(configJson.clientPaths);\n\n      try {\n        clientArchs.forEach(arch => {\n          generateClientProgram(arch, staticFilesByArch);\n        });\n        WebAppInternals.staticFilesByArch = staticFilesByArch;\n      } catch (e) {\n        Log.error('Error reloading the client program: ' + e.stack);\n        process.exit(1);\n      }\n    });\n  };\n\n  // Pause any incoming requests and make them wait for the program to be\n  // unpaused the next time generateClientProgram(arch) is called.\n  WebAppInternals.pauseClient = function(arch) {\n    syncQueue.runTask(() => {\n      const program = WebApp.clientPrograms[arch];\n      const { unpause } = program;\n      program.paused = new Promise(resolve => {\n        if (typeof unpause === 'function') {\n          // If there happens to be an existing program.unpause function,\n          // compose it with the resolve function.\n          program.unpause = function() {\n            unpause();\n            resolve();\n          };\n        } else {\n          program.unpause = resolve;\n        }\n      });\n    });\n  };\n\n  WebAppInternals.generateClientProgram = function(arch) {\n    syncQueue.runTask(() => generateClientProgram(arch));\n  };\n\n  function generateClientProgram(\n    arch,\n    staticFilesByArch = WebAppInternals.staticFilesByArch\n  ) {\n    const clientDir = pathJoin(\n      pathDirname(__meteor_bootstrap__.serverDir),\n      arch\n    );\n\n    // read the control for the client we'll be serving up\n    const programJsonPath = pathJoin(clientDir, 'program.json');\n\n    let programJson;\n    try {\n      programJson = JSON.parse(readFileSync(programJsonPath));\n    } catch (e) {\n      if (e.code === 'ENOENT') return;\n      throw e;\n    }\n\n    if (programJson.format !== 'web-program-pre1') {\n      throw new Error(\n        'Unsupported format for client assets: ' +\n          JSON.stringify(programJson.format)\n      );\n    }\n\n    if (!programJsonPath || !clientDir || !programJson) {\n      throw new Error('Client config file not parsed.');\n    }\n\n    archPath[arch] = clientDir;\n    const staticFiles = (staticFilesByArch[arch] = Object.create(null));\n\n    const { manifest } = programJson;\n    manifest.forEach(item => {\n      if (item.url && item.where === 'client') {\n        staticFiles[getItemPathname(item.url)] = {\n          absolutePath: pathJoin(clientDir, item.path),\n          cacheable: item.cacheable,\n          hash: item.hash,\n          // Link from source to its map\n          sourceMapUrl: item.sourceMapUrl,\n          type: item.type,\n        };\n\n        if (item.sourceMap) {\n          // Serve the source map too, under the specified URL. We assume\n          // all source maps are cacheable.\n          staticFiles[getItemPathname(item.sourceMapUrl)] = {\n            absolutePath: pathJoin(clientDir, item.sourceMap),\n            cacheable: true,\n          };\n        }\n      }\n    });\n\n    const { PUBLIC_SETTINGS } = __meteor_runtime_config__;\n    const configOverrides = {\n      PUBLIC_SETTINGS,\n    };\n\n    const oldProgram = WebApp.clientPrograms[arch];\n    const newProgram = (WebApp.clientPrograms[arch] = {\n      format: 'web-program-pre1',\n      manifest: manifest,\n      // Use arrow functions so that these versions can be lazily\n      // calculated later, and so that they will not be included in the\n      // staticFiles[manifestUrl].content string below.\n      //\n      // Note: these version calculations must be kept in agreement with\n      // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n      // code push will reload Cordova apps unnecessarily.\n      version: () =>\n        WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n      versionRefreshable: () =>\n        WebAppHashing.calculateClientHash(\n          manifest,\n          type => type === 'css',\n          configOverrides\n        ),\n      versionNonRefreshable: () =>\n        WebAppHashing.calculateClientHash(\n          manifest,\n          (type, replaceable) => type !== 'css' && !replaceable,\n          configOverrides\n        ),\n      versionReplaceable: () =>\n        WebAppHashing.calculateClientHash(\n          manifest,\n          (_type, replaceable) => replaceable,\n          configOverrides\n        ),\n      cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n      PUBLIC_SETTINGS,\n      hmrVersion: programJson.hmrVersion,\n    });\n\n    // Expose program details as a string reachable via the following URL.\n    const manifestUrlPrefix = '/__' + arch.replace(/^web\\./, '');\n    const manifestUrl = manifestUrlPrefix + getItemPathname('/manifest.json');\n\n    staticFiles[manifestUrl] = () => {\n      if (Package.autoupdate) {\n        const {\n          AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion,\n        } = process.env;\n\n        if (AUTOUPDATE_VERSION) {\n          newProgram.version = AUTOUPDATE_VERSION;\n        }\n      }\n\n      if (typeof newProgram.version === 'function') {\n        newProgram.version = newProgram.version();\n      }\n\n      return {\n        content: JSON.stringify(newProgram),\n        cacheable: false,\n        hash: newProgram.version,\n        type: 'json',\n      };\n    };\n\n    generateBoilerplateForArch(arch);\n\n    // If there are any requests waiting on oldProgram.paused, let them\n    // continue now (using the new program).\n    if (oldProgram && oldProgram.paused) {\n      oldProgram.unpause();\n    }\n  }\n\n  const defaultOptionsForArch = {\n    'web.cordova': {\n      runtimeConfigOverrides: {\n        // XXX We use absoluteUrl() here so that we serve https://\n        // URLs to cordova clients if force-ssl is in use. If we were\n        // to use __meteor_runtime_config__.ROOT_URL instead of\n        // absoluteUrl(), then Cordova clients would immediately get a\n        // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n        // http://example.meteor.com. This breaks the app, because\n        // force-ssl doesn't serve CORS headers on 302\n        // redirects. (Plus it's undesirable to have clients\n        // connecting to http://example.meteor.com when force-ssl is\n        // in use.)\n        DDP_DEFAULT_CONNECTION_URL:\n          process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n        ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl(),\n      },\n    },\n\n    'web.browser': {\n      runtimeConfigOverrides: {\n        isModern: true,\n      },\n    },\n\n    'web.browser.legacy': {\n      runtimeConfigOverrides: {\n        isModern: false,\n      },\n    },\n  };\n\n  WebAppInternals.generateBoilerplate = function() {\n    // This boilerplate will be served to the mobile devices when used with\n    // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n    // the device's server, it is important to set the DDP url to the actual\n    // Meteor server accepting DDP connections and not the device's file server.\n    syncQueue.runTask(function() {\n      Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n    });\n  };\n\n  function generateBoilerplateForArch(arch) {\n    const program = WebApp.clientPrograms[arch];\n    const additionalOptions = defaultOptionsForArch[arch] || {};\n    const { baseData } = (boilerplateByArch[\n      arch\n    ] = WebAppInternals.generateBoilerplateInstance(\n      arch,\n      program.manifest,\n      additionalOptions\n    ));\n    // We need the runtime config with overrides for meteor_runtime_config.js:\n    program.meteorRuntimeConfig = JSON.stringify({\n      ...__meteor_runtime_config__,\n      ...(additionalOptions.runtimeConfigOverrides || null),\n    });\n    program.refreshableAssets = baseData.css.map(file => ({\n      url: bundledJsCssUrlRewriteHook(file.url),\n    }));\n  }\n\n  WebAppInternals.reloadClientPrograms();\n\n  // webserver\n  var app = connect();\n\n  // Packages and apps can add handlers that run before any other Meteor\n  // handlers via WebApp.rawConnectHandlers.\n  var rawConnectHandlers = connect();\n  app.use(rawConnectHandlers);\n\n  // Auto-compress any json, javascript, or text.\n  app.use(compress({ filter: shouldCompress }));\n\n  // parse cookies into an object\n  app.use(cookieParser());\n\n  // We're not a proxy; reject (without crashing) attempts to treat us like\n  // one. (See #1212.)\n  app.use(function(req, res, next) {\n    if (RoutePolicy.isValidUrl(req.url)) {\n      next();\n      return;\n    }\n    res.writeHead(400);\n    res.write('Not a proxy');\n    res.end();\n  });\n\n  // Parse the query string into res.query. Used by oauth_server, but it's\n  // generally pretty handy..\n  //\n  // Do this before the next middleware destroys req.url if a path prefix\n  // is set to close #10111.\n  app.use(function(request, response, next) {\n    request.query = qs.parse(parseUrl(request.url).query);\n    next();\n  });\n\n  function getPathParts(path) {\n    const parts = path.split('/');\n    while (parts[0] === '') parts.shift();\n    return parts;\n  }\n\n  function isPrefixOf(prefix, array) {\n    return (\n      prefix.length <= array.length &&\n      prefix.every((part, i) => part === array[i])\n    );\n  }\n\n  // Strip off the path prefix, if it exists.\n  app.use(function(request, response, next) {\n    const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n    const { pathname, search } = parseUrl(request.url);\n\n    // check if the path in the url starts with the path prefix\n    if (pathPrefix) {\n      const prefixParts = getPathParts(pathPrefix);\n      const pathParts = getPathParts(pathname);\n      if (isPrefixOf(prefixParts, pathParts)) {\n        request.url = '/' + pathParts.slice(prefixParts.length).join('/');\n        if (search) {\n          request.url += search;\n        }\n        return next();\n      }\n    }\n\n    if (pathname === '/favicon.ico' || pathname === '/robots.txt') {\n      return next();\n    }\n\n    if (pathPrefix) {\n      response.writeHead(404);\n      response.write('Unknown path');\n      response.end();\n      return;\n    }\n\n    next();\n  });\n\n  // Serve static files from the manifest.\n  // This is inspired by the 'static' middleware.\n  app.use(function(req, res, next) {\n    WebAppInternals.staticFilesMiddleware(\n      WebAppInternals.staticFilesByArch,\n      req,\n      res,\n      next\n    );\n  });\n\n  // Core Meteor packages like dynamic-import can add handlers before\n  // other handlers added by package and application code.\n  app.use((WebAppInternals.meteorInternalHandlers = connect()));\n\n  /**\n   * @name connectHandlersCallback(req, res, next)\n   * @locus Server\n   * @isprototype true\n   * @summary callback handler for `WebApp.connectHandlers`\n   * @param {Object} req\n   * a Node.js\n   * [IncomingMessage](https://nodejs.org/api/http.html#class-httpincomingmessage)\n   * object with some extra properties. This argument can be used\n   *  to get information about the incoming request.\n   * @param {Object} res\n   * a Node.js\n   * [ServerResponse](https://nodejs.org/api/http.html#class-httpserverresponse)\n   * object. Use this to write data that should be sent in response to the\n   * request, and call `res.end()` when you are done.\n   * @param {Function} next\n   * Calling this function will pass on the handling of\n   * this request to the next relevant handler.\n   *\n   */\n\n  /**\n   * @method connectHandlers\n   * @memberof WebApp\n   * @locus Server\n   * @summary Register a handler for all HTTP requests.\n   * @param {String} [path]\n   * This handler will only be called on paths that match\n   * this string. The match has to border on a `/` or a `.`.\n   *\n   * For example, `/hello` will match `/hello/world` and\n   * `/hello.world`, but not `/hello_world`.\n   * @param {connectHandlersCallback} handler\n   * A handler function that will be called on HTTP requests.\n   * See `connectHandlersCallback`\n   *\n   */\n  // Packages and apps can add handlers to this via WebApp.connectHandlers.\n  // They are inserted before our default handler.\n  var packageAndAppHandlers = connect();\n  app.use(packageAndAppHandlers);\n\n  var suppressConnectErrors = false;\n  // connect knows it is an error handler because it has 4 arguments instead of\n  // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n  // inside packageAndAppHandlers.)\n  app.use(function(err, req, res, next) {\n    if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n      next(err);\n      return;\n    }\n    res.writeHead(err.status, { 'Content-Type': 'text/plain' });\n    res.end('An error message');\n  });\n\n  app.use(async function(req, res, next) {\n    if (!appUrl(req.url)) {\n      return next();\n    } else if (\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      !Meteor.settings.packages?.webapp?.alwaysReturnContent\n    ) {\n      const status = req.method === 'OPTIONS' ? 200 : 405;\n      res.writeHead(status, {\n        Allow: 'OPTIONS, GET, HEAD',\n        'Content-Length': '0',\n      });\n      res.end();\n    } else {\n      var headers = {\n        'Content-Type': 'text/html; charset=utf-8',\n      };\n\n      if (shuttingDown) {\n        headers['Connection'] = 'Close';\n      }\n\n      var request = WebApp.categorizeRequest(req);\n\n      if (request.url.query && request.url.query['meteor_css_resource']) {\n        // In this case, we're requesting a CSS resource in the meteor-specific\n        // way, but we don't have it.  Serve a static css file that indicates that\n        // we didn't have it, so we can detect that and refresh.  Make sure\n        // that any proxies or CDNs don't cache this error!  (Normally proxies\n        // or CDNs are smart enough not to cache error pages, but in order to\n        // make this hack work, we need to return the CSS file as a 200, which\n        // would otherwise be cached.)\n        headers['Content-Type'] = 'text/css; charset=utf-8';\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(200, headers);\n        res.write('.meteor-css-not-found-error { width: 0px;}');\n        res.end();\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_js_resource']) {\n        // Similarly, we're requesting a JS resource that we don't have.\n        // Serve an uncached 404. (We can't use the same hack we use for CSS,\n        // because actually acting on that hack requires us to have the JS\n        // already!)\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end('404 Not Found');\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n        // When downloading files during a Cordova hot code push, we need\n        // to detect if a file is not available instead of inadvertently\n        // downloading the default index page.\n        // So similar to the situation above, we serve an uncached 404.\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end('404 Not Found');\n        return;\n      }\n\n      const { arch } = request;\n      assert.strictEqual(typeof arch, 'string', { arch });\n\n      if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n        // We could come here in case we run with some architectures excluded\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        if (Meteor.isDevelopment) {\n          res.end(`No client program found for the ${arch} architecture.`);\n        } else {\n          // Safety net, but this branch should not be possible.\n          res.end('404 Not Found');\n        }\n        return;\n      }\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      await WebApp.clientPrograms[arch].paused;\n\n      return getBoilerplateAsync(request, arch)\n        .then(({ stream, statusCode, headers: newHeaders }) => {\n          if (!statusCode) {\n            statusCode = res.statusCode ? res.statusCode : 200;\n          }\n\n          if (newHeaders) {\n            Object.assign(headers, newHeaders);\n          }\n\n          res.writeHead(statusCode, headers);\n\n          stream.pipe(res, {\n            // End the response when the stream ends.\n            end: true,\n          });\n        })\n        .catch(error => {\n          Log.error('Error running template: ' + error.stack);\n          res.writeHead(500, headers);\n          res.end();\n        });\n    }\n  });\n\n  // Return 404 by default, if no other handlers serve this URL.\n  app.use(function(req, res) {\n    res.writeHead(404);\n    res.end();\n  });\n\n  var httpServer = createServer(app);\n  var onListeningCallbacks = [];\n\n  // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n  // there's an outstanding request, give it a higher timeout instead (to avoid\n  // killing long-polling requests)\n  httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n  // Do this here, and then also in livedata/stream_server.js, because\n  // stream_server.js kills all the current request handlers when installing its\n  // own.\n  httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // If the client gave us a bad request, tell it instead of just closing the\n  // socket. This lets load balancers in front of us differentiate between \"a\n  // server is randomly closing sockets for no reason\" and \"client sent a bad\n  // request\".\n  //\n  // This will only work on Node 6; Node 4 destroys the socket before calling\n  // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n  httpServer.on('clientError', (err, socket) => {\n    // Pre-Node-6, do nothing.\n    if (socket.destroyed) {\n      return;\n    }\n\n    if (err.message === 'Parse Error') {\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    } else {\n      // For other errors, use the default behavior as if we had no clientError\n      // handler.\n      socket.destroy(err);\n    }\n  });\n\n  // start up app\n  _.extend(WebApp, {\n    connectHandlers: packageAndAppHandlers,\n    rawConnectHandlers: rawConnectHandlers,\n    httpServer: httpServer,\n    connectApp: app,\n    // For testing.\n    suppressConnectErrors: function() {\n      suppressConnectErrors = true;\n    },\n    onListening: function(f) {\n      if (onListeningCallbacks) onListeningCallbacks.push(f);\n      else f();\n    },\n    // This can be overridden by users who want to modify how listening works\n    // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n    startListening: function(httpServer, listenOptions, cb) {\n      httpServer.listen(listenOptions, cb);\n    },\n  });\n\n    /**\n   * @name main\n   * @locus Server\n   * @summary Starts the HTTP server.\n   *  If `UNIX_SOCKET_PATH` is present Meteor's HTTP server will use that socket file for inter-process communication, instead of TCP.\n   * If you choose to not include webapp package in your application this method still must be defined for your Meteor application to work. \n   */\n  // Let the rest of the packages (and Meteor.startup hooks) insert connect\n  // middlewares and update __meteor_runtime_config__, then keep going to set up\n  // actually serving HTML.\n  exports.main = argv => {\n    WebAppInternals.generateBoilerplate();\n\n    const startHttpServer = listenOptions => {\n      WebApp.startListening(\n        httpServer,\n        listenOptions,\n        Meteor.bindEnvironment(\n          () => {\n            if (process.env.METEOR_PRINT_ON_LISTEN) {\n              console.log('LISTENING');\n            }\n            const callbacks = onListeningCallbacks;\n            onListeningCallbacks = null;\n            callbacks.forEach(callback => {\n              callback();\n            });\n          },\n          e => {\n            console.error('Error listening:', e);\n            console.error(e && e.stack);\n          }\n        )\n      );\n    };\n\n    let localPort = process.env.PORT || 0;\n    let unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n    if (unixSocketPath) {\n      if (cluster.isWorker) {\n        const workerName = cluster.worker.process.env.name || cluster.worker.id;\n        unixSocketPath += '.' + workerName + '.sock';\n      }\n      // Start the HTTP server using a socket file.\n      removeExistingSocketFile(unixSocketPath);\n      startHttpServer({ path: unixSocketPath });\n\n      const unixSocketPermissions = (\n        process.env.UNIX_SOCKET_PERMISSIONS || ''\n      ).trim();\n      if (unixSocketPermissions) {\n        if (/^[0-7]{3}$/.test(unixSocketPermissions)) {\n          chmodSync(unixSocketPath, parseInt(unixSocketPermissions, 8));\n        } else {\n          throw new Error('Invalid UNIX_SOCKET_PERMISSIONS specified');\n        }\n      }\n\n      const unixSocketGroup = (process.env.UNIX_SOCKET_GROUP || '').trim();\n      if (unixSocketGroup) {\n        //whomst automatically handles both group names and numerical gids\n        const unixSocketGroupInfo = whomst.sync.group(unixSocketGroup);\n        if (unixSocketGroupInfo === null) {\n          throw new Error('Invalid UNIX_SOCKET_GROUP name specified');\n        }\n        chownSync(unixSocketPath, userInfo().uid, unixSocketGroupInfo.gid);\n      }\n\n      registerSocketFileCleanup(unixSocketPath);\n    } else {\n      localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n      if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n        // Start the HTTP server using Windows Server style named pipe.\n        startHttpServer({ path: localPort });\n      } else if (typeof localPort === 'number') {\n        // Start the HTTP server using TCP.\n        startHttpServer({\n          port: localPort,\n          host: process.env.BIND_IP || '0.0.0.0',\n        });\n      } else {\n        throw new Error('Invalid PORT specified');\n      }\n    }\n\n    return 'DAEMON';\n  };\n}\n\nvar inlineScriptsAllowed = true;\n\nWebAppInternals.inlineScriptsAllowed = function() {\n  return inlineScriptsAllowed;\n};\n\nWebAppInternals.setInlineScriptsAllowed = function(value) {\n  inlineScriptsAllowed = value;\n  WebAppInternals.generateBoilerplate();\n};\n\nvar sriMode;\n\nWebAppInternals.enableSubresourceIntegrity = function(use_credentials = false) {\n  sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssUrlRewriteHook = function(hookFn) {\n  bundledJsCssUrlRewriteHook = hookFn;\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssPrefix = function(prefix) {\n  var self = this;\n  self.setBundledJsCssUrlRewriteHook(function(url) {\n    return prefix + url;\n  });\n};\n\n// Packages can call `WebAppInternals.addStaticJs` to specify static\n// JavaScript to be included in the app. This static JS will be inlined,\n// unless inline scripts have been disabled, in which case it will be\n// served under `/<sha1 of contents>`.\nvar additionalStaticJs = {};\nWebAppInternals.addStaticJs = function(contents) {\n  additionalStaticJs['/' + sha1(contents) + '.js'] = contents;\n};\n\n// Exported for tests\nWebAppInternals.getBoilerplate = getBoilerplate;\nWebAppInternals.additionalStaticJs = additionalStaticJs;\n\n// Start the server!\nrunWebAppServer();\n","import npmConnect from \"connect\";\n\nexport function connect(...connectArgs) {\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use;\n\n  // Wrap the handlers.use method so that any provided handler functions\n  // always run in a Fiber.\n  handlers.use = function use(...useArgs) {\n    const { stack } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs);\n\n    // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to determine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n\n    return result;\n  };\n\n  return handlers;\n}\n","import { statSync, unlinkSync, existsSync } from 'fs';\n\n// Since a new socket file will be created when the HTTP server\n// starts up, if found remove the existing file.\n//\n// WARNING:\n// This will remove the configured socket file without warning. If\n// the configured socket file is already in use by another application,\n// it will still be removed. Node does not provide a reliable way to\n// differentiate between a socket file that is already in use by\n// another application or a stale socket file that has been\n// left over after a SIGKILL. Since we have no reliable way to\n// differentiate between these two scenarios, the best course of\n// action during startup is to remove any existing socket file. This\n// is not the safest course of action as removing the existing socket\n// file could impact an application using it, but this approach helps\n// ensure the HTTP server can startup without manual\n// intervention (e.g. asking for the verification and cleanup of socket\n// files before allowing the HTTP server to be started).\n//\n// The above being said, as long as the socket file path is\n// configured carefully when the application is deployed (and extra\n// care is taken to make sure the configured path is unique and doesn't\n// conflict with another socket file path), then there should not be\n// any issues with this approach.\nexport const removeExistingSocketFile = (socketPath) => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\n        `An existing file was found at \"${socketPath}\" and it is not ` +\n        'a socket file. Please confirm PORT is pointing to valid and ' +\n        'un-used socket file path.'\n      );\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\n\n// Remove the socket file when done to avoid leaving behind a stale one.\n// Note - a stale socket file is still left behind if the running node\n// process is killed via signal 9 - SIGKILL.\nexport const registerSocketFileCleanup =\n  (socketPath, eventEmitter = process) => {\n    ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n      eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n        if (existsSync(socketPath)) {\n          unlinkSync(socketPath);\n        }\n      }));\n    });\n  };\n"]}}]