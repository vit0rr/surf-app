[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar OrderedDict;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"ordered-dict\":{\"ordered_dict.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/ordered-dict/ordered_dict.js                                                                  //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.export({\n  OrderedDict: function () {\n    return OrderedDict;\n  }\n});\n// This file defines an ordered dictionary abstraction that is useful for\n// maintaining a dataset backed by observeChanges.  It supports ordering items\n// by specifying the item they now come before.\n\n// The implementation is a dictionary that contains nodes of a doubly-linked\n// list as its values.\n\n// constructs a new element struct\n// next and prev are whole elements, not keys.\nfunction element(key, value, next, prev) {\n  return {\n    key: key,\n    value: value,\n    next: next,\n    prev: prev\n  };\n}\nvar OrderedDict = /*#__PURE__*/function () {\n  function OrderedDict() {\n    var _this = this;\n    this._dict = Object.create(null);\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (typeof args[0] === 'function') {\n      this._stringify = args.shift();\n    } else {\n      this._stringify = function (x) {\n        return x;\n      };\n    }\n    args.forEach(function (kv) {\n      return _this.putBefore(kv[0], kv[1], null);\n    });\n  }\n\n  // the \"prefix keys with a space\" thing comes from here\n  // https://github.com/documentcloud/underscore/issues/376#issuecomment-2815649\n  var _proto = OrderedDict.prototype;\n  _proto._k = function () {\n    function _k(key) {\n      return \" \" + this._stringify(key);\n    }\n    return _k;\n  }();\n  _proto.empty = function () {\n    function empty() {\n      return !this._first;\n    }\n    return empty;\n  }();\n  _proto.size = function () {\n    function size() {\n      return this._size;\n    }\n    return size;\n  }();\n  _proto._linkEltIn = function () {\n    function _linkEltIn(elt) {\n      if (!elt.next) {\n        elt.prev = this._last;\n        if (this._last) this._last.next = elt;\n        this._last = elt;\n      } else {\n        elt.prev = elt.next.prev;\n        elt.next.prev = elt;\n        if (elt.prev) elt.prev.next = elt;\n      }\n      if (this._first === null || this._first === elt.next) this._first = elt;\n    }\n    return _linkEltIn;\n  }();\n  _proto._linkEltOut = function () {\n    function _linkEltOut(elt) {\n      if (elt.next) elt.next.prev = elt.prev;\n      if (elt.prev) elt.prev.next = elt.next;\n      if (elt === this._last) this._last = elt.prev;\n      if (elt === this._first) this._first = elt.next;\n    }\n    return _linkEltOut;\n  }();\n  _proto.putBefore = function () {\n    function putBefore(key, item, before) {\n      if (this._dict[this._k(key)]) throw new Error(\"Item \" + key + \" already present in OrderedDict\");\n      var elt = before ? element(key, item, this._dict[this._k(before)]) : element(key, item, null);\n      if (typeof elt.next === \"undefined\") throw new Error(\"could not find item to put this one before\");\n      this._linkEltIn(elt);\n      this._dict[this._k(key)] = elt;\n      this._size++;\n    }\n    return putBefore;\n  }();\n  _proto.append = function () {\n    function append(key, item) {\n      this.putBefore(key, item, null);\n    }\n    return append;\n  }();\n  _proto.remove = function () {\n    function remove(key) {\n      var elt = this._dict[this._k(key)];\n      if (typeof elt === \"undefined\") throw new Error(\"Item \" + key + \" not present in OrderedDict\");\n      this._linkEltOut(elt);\n      this._size--;\n      delete this._dict[this._k(key)];\n      return elt.value;\n    }\n    return remove;\n  }();\n  _proto.get = function () {\n    function get(key) {\n      if (this.has(key)) {\n        return this._dict[this._k(key)].value;\n      }\n    }\n    return get;\n  }();\n  _proto.has = function () {\n    function has(key) {\n      return Object.prototype.hasOwnProperty.call(this._dict, this._k(key));\n    }\n    return has;\n  }() // Iterate through the items in this dictionary in order, calling\n  // iter(value, key, index) on each one.\n  // Stops whenever iter returns OrderedDict.BREAK, or after the last element.\n  ;\n  _proto.forEach = function () {\n    function forEach(iter) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var i = 0;\n      var elt = this._first;\n      while (elt !== null) {\n        var b = iter.call(context, elt.value, elt.key, i);\n        if (b === OrderedDict.BREAK) return;\n        elt = elt.next;\n        i++;\n      }\n    }\n    return forEach;\n  }();\n  _proto.first = function () {\n    function first() {\n      if (this.empty()) {\n        return;\n      }\n      return this._first.key;\n    }\n    return first;\n  }();\n  _proto.firstValue = function () {\n    function firstValue() {\n      if (this.empty()) {\n        return;\n      }\n      return this._first.value;\n    }\n    return firstValue;\n  }();\n  _proto.last = function () {\n    function last() {\n      if (this.empty()) {\n        return;\n      }\n      return this._last.key;\n    }\n    return last;\n  }();\n  _proto.lastValue = function () {\n    function lastValue() {\n      if (this.empty()) {\n        return;\n      }\n      return this._last.value;\n    }\n    return lastValue;\n  }();\n  _proto.prev = function () {\n    function prev(key) {\n      if (this.has(key)) {\n        var elt = this._dict[this._k(key)];\n        if (elt.prev) return elt.prev.key;\n      }\n      return null;\n    }\n    return prev;\n  }();\n  _proto.next = function () {\n    function next(key) {\n      if (this.has(key)) {\n        var elt = this._dict[this._k(key)];\n        if (elt.next) return elt.next.key;\n      }\n      return null;\n    }\n    return next;\n  }();\n  _proto.moveBefore = function () {\n    function moveBefore(key, before) {\n      var elt = this._dict[this._k(key)];\n      var eltBefore = before ? this._dict[this._k(before)] : null;\n      if (typeof elt === \"undefined\") {\n        throw new Error(\"Item to move is not present\");\n      }\n      if (typeof eltBefore === \"undefined\") {\n        throw new Error(\"Could not find element to move this one before\");\n      }\n      if (eltBefore === elt.next)\n        // no moving necessary\n        return;\n      // remove from its old place\n      this._linkEltOut(elt);\n      // patch into its new place\n      elt.next = eltBefore;\n      this._linkEltIn(elt);\n    }\n    return moveBefore;\n  }() // Linear, sadly.\n  ;\n  _proto.indexOf = function () {\n    function indexOf(key) {\n      var _this2 = this;\n      var ret = null;\n      this.forEach(function (v, k, i) {\n        if (_this2._k(k) === _this2._k(key)) {\n          ret = i;\n          return OrderedDict.BREAK;\n        }\n        return;\n      });\n      return ret;\n    }\n    return indexOf;\n  }();\n  _proto._checkRep = function () {\n    function _checkRep() {\n      var _this3 = this;\n      Object.keys(this._dict).forEach(function (k) {\n        var v = _this3._dict[k];\n        if (v.next === v) {\n          throw new Error(\"Next is a loop\");\n        }\n        if (v.prev === v) {\n          throw new Error(\"Prev is a loop\");\n        }\n      });\n    }\n    return _checkRep;\n  }();\n  return OrderedDict;\n}();\nOrderedDict.BREAK = {\n  \"break\": true\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/ordered-dict/ordered_dict.js\");\n\n/* Exports */\nPackage._define(\"ordered-dict\", exports, {\n  OrderedDict: OrderedDict\n});\n\n})();\n","servePath":"/packages/ordered-dict.js","sourceMap":{"version":3,"sources":["packages/ordered-dict/ordered_dict.js"],"names":["module","export","OrderedDict","element","key","value","next","prev","_this","_dict","Object","create","_first","_last","_size","_len","arguments","length","args","Array","_key","_stringify","shift","x","forEach","kv","putBefore","_proto","prototype","_k","empty","size","_linkEltIn","elt","_linkEltOut","item","before","Error","append","remove","get","has","hasOwnProperty","call","iter","context","undefined","i","b","BREAK","first","firstValue","last","lastValue","moveBefore","eltBefore","indexOf","_this2","ret","v","k","_checkRep","_this3","keys"],"mappings":"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","file":"/packages/ordered-dict.js","sourcesContent":["// This file defines an ordered dictionary abstraction that is useful for\n// maintaining a dataset backed by observeChanges.  It supports ordering items\n// by specifying the item they now come before.\n\n// The implementation is a dictionary that contains nodes of a doubly-linked\n// list as its values.\n\n// constructs a new element struct\n// next and prev are whole elements, not keys.\nfunction element(key, value, next, prev) {\n  return {\n    key: key,\n    value: value,\n    next: next,\n    prev: prev\n  };\n}\n\nexport class OrderedDict {\n  constructor(...args) {\n    this._dict = Object.create(null);\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n\n    if (typeof args[0] === 'function') {\n      this._stringify = args.shift();\n    } else {\n      this._stringify = function (x) { return x; };\n    }\n\n    args.forEach(kv => this.putBefore(kv[0], kv[1], null));\n  }\n\n  // the \"prefix keys with a space\" thing comes from here\n  // https://github.com/documentcloud/underscore/issues/376#issuecomment-2815649\n  _k(key) {\n    return \" \" + this._stringify(key);\n  }\n\n  empty() {\n    return !this._first;\n  }\n\n  size() {\n    return this._size;\n  }\n\n  _linkEltIn(elt) {\n    if (!elt.next) {\n      elt.prev = this._last;\n      if (this._last)\n        this._last.next = elt;\n      this._last = elt;\n    } else {\n      elt.prev = elt.next.prev;\n      elt.next.prev = elt;\n      if (elt.prev)\n        elt.prev.next = elt;\n    }\n    if (this._first === null || this._first === elt.next)\n      this._first = elt;\n  }\n\n  _linkEltOut(elt) {\n    if (elt.next)\n      elt.next.prev = elt.prev;\n    if (elt.prev)\n      elt.prev.next = elt.next;\n    if (elt === this._last)\n      this._last = elt.prev;\n    if (elt === this._first)\n      this._first = elt.next;\n  }\n\n  putBefore(key, item, before) {\n    if (this._dict[this._k(key)])\n      throw new Error(\"Item \" + key + \" already present in OrderedDict\");\n    var elt = before ?\n      element(key, item, this._dict[this._k(before)]) :\n      element(key, item, null);\n    if (typeof elt.next === \"undefined\")\n      throw new Error(\"could not find item to put this one before\");\n    this._linkEltIn(elt);\n    this._dict[this._k(key)] = elt;\n    this._size++;\n  }\n\n  append(key, item) {\n    this.putBefore(key, item, null);\n  }\n\n  remove(key) {\n    var elt = this._dict[this._k(key)];\n    if (typeof elt === \"undefined\")\n      throw new Error(\"Item \" + key + \" not present in OrderedDict\");\n    this._linkEltOut(elt);\n    this._size--;\n    delete this._dict[this._k(key)];\n    return elt.value;\n  }\n\n  get(key) {\n    if (this.has(key)) {\n      return this._dict[this._k(key)].value;\n    }\n  }\n\n  has(key) {\n    return Object.prototype.hasOwnProperty.call(\n      this._dict,\n      this._k(key)\n    );\n  }\n\n  // Iterate through the items in this dictionary in order, calling\n  // iter(value, key, index) on each one.\n\n  // Stops whenever iter returns OrderedDict.BREAK, or after the last element.\n  forEach(iter, context = null) {\n    var i = 0;\n    var elt = this._first;\n    while (elt !== null) {\n      var b = iter.call(context, elt.value, elt.key, i);\n      if (b === OrderedDict.BREAK) return;\n      elt = elt.next;\n      i++;\n    }\n  }\n\n  first() {\n    if (this.empty()) {\n      return;\n    }\n    return this._first.key;\n  }\n\n  firstValue() {\n    if (this.empty()) {\n      return;\n    }\n    return this._first.value;\n  }\n\n  last() {\n    if (this.empty()) {\n      return;\n    }\n    return this._last.key;\n  }\n\n  lastValue() {\n    if (this.empty()) {\n      return;\n    }\n    return this._last.value;\n  }\n\n  prev(key) {\n    if (this.has(key)) {\n      var elt = this._dict[this._k(key)];\n      if (elt.prev)\n        return elt.prev.key;\n    }\n    return null;\n  }\n\n  next(key) {\n    if (this.has(key)) {\n      var elt = this._dict[this._k(key)];\n      if (elt.next)\n        return elt.next.key;\n    }\n    return null;\n  }\n\n  moveBefore(key, before) {\n    var elt = this._dict[this._k(key)];\n    var eltBefore = before ? this._dict[this._k(before)] : null;\n    if (typeof elt === \"undefined\") {\n      throw new Error(\"Item to move is not present\");\n    }\n    if (typeof eltBefore === \"undefined\") {\n      throw new Error(\"Could not find element to move this one before\");\n    }\n    if (eltBefore === elt.next) // no moving necessary\n      return;\n    // remove from its old place\n    this._linkEltOut(elt);\n    // patch into its new place\n    elt.next = eltBefore;\n    this._linkEltIn(elt);\n  }\n\n  // Linear, sadly.\n  indexOf(key) {\n    var ret = null;\n    this.forEach((v, k, i) => {\n      if (this._k(k) === this._k(key)) {\n        ret = i;\n        return OrderedDict.BREAK;\n      }\n      return;\n    });\n    return ret;\n  }\n\n  _checkRep() {\n    Object.keys(this._dict).forEach(k => {\n      const v = this._dict[k];\n      if (v.next === v) {\n        throw new Error(\"Next is a loop\");\n      }\n      if (v.prev === v) {\n        throw new Error(\"Prev is a loop\");\n      }\n    });\n  }\n}\n\nOrderedDict.BREAK = {\"break\": true};\n"]}}]